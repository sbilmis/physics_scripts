(* ::Package:: *)

(* ::Input:: *)
(*(*Start the package*)BeginPackage["MyMonteCarlo`"]*)
(**)
(*(*Declare the function and its usage message*)*)
(*MyMonteCarloUncertaintyPropagation::usage="MyMonteCarloUncertaintyPropagation[f_, params_, OptionsPattern[]]    performs Monte Carlo uncertainty propagation for a given function f with parameters and uncertainties.    Returns a Gaussian fit and histogram plot.\n\n   Example usage:\n   f[M_, m_] := g (M - m)/(M + m)\n   params = <|\"M\" -> {100, 1}, \"m\" -> {50, 1}|>;\n   MyMonteCarloUncertaintyPropagation[f, params, \"Iterations\" -> 500, \"BinSize\" -> 20]"*)
(**)
(*(*Begin the private context*)*)
(*Begin["`Private`"]*)
(**)
(*(*Define the function*)*)
(*Options[MyMonteCarloUncertaintyPropagation]={"Iterations"->100,"BinSize"->10,"OutputFileName"->"HistogramFit.pdf"};*)
(**)
(*MyMonteCarloUncertaintyPropagation[f_,params_Association,OptionsPattern[]]:=Module[{paramNames,paramRanges,randomParams,results,fit,histogramPlot,iterations,binSize,outputFileName},(*Extract options*)iterations=OptionValue["Iterations"];*)
(*binSize=OptionValue["BinSize"];*)
(*outputFileName=OptionValue["OutputFileName"];*)
(*(*Extract parameter names and their uncertainty ranges*)paramNames=Keys[params];*)
(*paramRanges=Values[params];*)
(*(*Generate random values for each parameter based on their uncertainty ranges*)randomParams=Table[RandomReal[{param[[1]]-param[[2]],param[[1]]+param[[2]]},iterations],{param,paramRanges}];*)
(*(*Calculate the function for each set of random parameters*)results=Table[f@@(randomParams[[All,i]]),{i,iterations}];*)
(*(*Fit the results to a normal (Gaussian) distribution*)fit=FindDistributionParameters[results,NormalDistribution[\[Mu],\[Sigma]]];*)
(*(*Plot the histogram with a Gaussian fit overlay and apply publication-quality styling*)histogramPlot=Show[Histogram[results,binSize,"PDF",PlotLabel->Style["Gaussian Fit to Function Values",Bold,16],AxesLabel->{Style["Function Value",Bold,14],Style["Probability",Bold,14]},PlotTheme->"Scientific",ChartStyle->ColorData[97,2]],Plot[PDF[NormalDistribution[fit[[1,2]],fit[[2,2]]],x],{x,Min[results],Max[results]},PlotStyle->{Red,Thick}],Frame->True,FrameStyle->Directive[Black,14],LabelStyle->Directive[Black,14],ImageSize->Large];*)
(*(*Export the plot to a PDF file*)Export[outputFileName,histogramPlot,"PDF"];*)
(*(*Return the fitted parameters and the plot object*){fit,histogramPlot}]*)
(**)
(*(*End the private context*)*)
(*End[]*)
(**)
(*(*End the package*)*)
(*EndPackage[]*)
(**)
