(* ::Package:: *)

(* ::Input:: *)
(*(*Define a general Monte Carlo function with user-defined iterations and bin size*)MonteCarloUncertaintyPropagation[f_,params_Association,iterations_:100,binSize_:10,outputFileName_:"HistogramFit.pdf"]:=Module[{paramNames,paramRanges,randomParams,results,fit,histogramPlot},(*Extract parameter names and their uncertainty ranges*)paramNames=Keys[params];*)
(*paramRanges=Values[params];*)
(*(*Generate random values for each parameter based on their uncertainty ranges*)randomParams=Table[RandomReal[{param[[1]]-param[[2]],param[[1]]+param[[2]]},iterations],{param,paramRanges}];*)
(*(*Calculate the function for each set of random parameters*)results=Table[f@@(randomParams[[All,i]]),{i,iterations}];*)
(*(*Fit the results to a normal (Gaussian) distribution*)fit=FindDistributionParameters[results,NormalDistribution[\[Mu],\[Sigma]]];*)
(*(*Plot the histogram with a Gaussian fit overlay and apply publication-quality styling*)histogramPlot=Show[Histogram[results,binSize,"PDF",PlotLabel->Style["Gaussian Fit to Function Values",Bold,16],AxesLabel->{Style["Function Value",Bold,14],Style["Probability",Bold,14]},PlotTheme->"Scientific",ChartStyle->ColorData[97,2]],Plot[PDF[NormalDistribution[fit[[1,2]],fit[[2,2]]],x],{x,Min[results],Max[results]},PlotStyle->{Red,Thick}],Frame->True,FrameStyle->Directive[Black,14],LabelStyle->Directive[Black,14],ImageSize->Large];*)
(*(*Export the plot to a PDF file*)Export[outputFileName,histogramPlot,"PDF"];*)
(*(*Return the fitted parameters and the plot object*){fit,histogramPlot}]*)
(**)
(*(*Example usage*)*)
(**)
(*(*Define your specific function*)*)
(*f[M_,m_]:=g (M-m)/(M+m)*)
(**)
(*(*Define the parameters with names,values,and uncertainties using an Association*)*)
(*params=<|"M"->{100,1},(*M=100\[PlusMinus]1*)"m"->{50,1}   (*m=50\[PlusMinus]1*)|>;*)
(**)
(*(*Call the general Monte Carlo function with optional iterations and bin size*)*)
(*MonteCarloUncertaintyPropagation[f,params,500,20,"CustomHistogramFit.pdf"]*)
(**)
