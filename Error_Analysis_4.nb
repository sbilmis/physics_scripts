(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    628079,      12489]
NotebookOptionsPosition[    613878,      12296]
NotebookOutlinePosition[    614386,      12314]
CellTagsIndexPosition[    614343,      12311]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Learning Tests", "Section",
 CellChangeTimes->{{3.937160904059004*^9, 
  3.93716090888669*^9}},ExpressionUUID->"1bf09f4b-fb1d-4958-b4a5-\
42a4a78be399"],

Cell[BoxData[
 RowBox[{"test2", "=", 
  RowBox[{"equ", "*", "m0sq", "*", "mqd", "*", 
   RowBox[{
    RowBox[{
     RowBox[{"HoldForm", "[", "NIntegrate", "]"}], "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"s", "/", "Msq"}], ")"}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", "s0"}], "}"}]}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f3", "^", "2"}], "*", 
      RowBox[{"m3", "^", "8"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9371588781225777`*^9, 3.9371588886029243`*^9}, {
  3.9371590751809998`*^9, 3.937159076845992*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5e29f74a-d2e8-4252-b1b7-89a49e993a5a"],

Cell["This does not work", "Text",
 CellChangeTimes->{{3.937160932661664*^9, 
  3.9371609370890512`*^9}},ExpressionUUID->"e6457ff9-c7b5-44aa-8aff-\
f612a81e45e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReleaseHold", "[", "test2", "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s0", "->", "2"}], ",", 
    RowBox[{"Msq", "->", "1"}], ",", 
    RowBox[{"f3", "->", "1"}], ",", 
    RowBox[{"m3", "->", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.937159079905342*^9, 3.9371591442916613`*^9}, 
   3.9371609214435253`*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"532567d9-bbc8-427e-ade2-39a6caf2ae3d"],

Cell["This works", "Text",
 CellChangeTimes->{{3.937160952539954*^9, 
  3.937160959138958*^9}},ExpressionUUID->"0f269869-012d-4128-8ecb-\
8fff750ad842"],

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"test2", " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s0", "->", "2"}], ",", 
     RowBox[{"Msq", "->", "1"}], ",", 
     RowBox[{"f3", "->", "1"}], ",", 
     RowBox[{"m3", "->", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9371591639038*^9, 3.937159171278741*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"a55d9e39-c00a-44e9-9ffe-b15c66063bc3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{"equ_", ",", "m0sq_", ",", "mqd_", ",", "s0_"}], "]"}], ":=", 
  RowBox[{"test2", " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Msq", "->", "1"}], ",", 
     RowBox[{"f3", "->", "1"}], ",", 
     RowBox[{"m3", "->", "1"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ff", "[", 
  RowBox[{"equ", ",", "m0sq", ",", "mqd", ",", "s000"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9371603651322813`*^9, 3.937160367382481*^9}, 
   3.937160468323926*^9, 3.9371613588589077`*^9, {3.937161398867024*^9, 
   3.937161399156599*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3634dbd2-4595-4851-a5f6-0fca02a36ee5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ff", "[", 
    RowBox[{"equ_", ",", "m0sq_", ",", "mqd_", ",", "s0_"}], "]"}], ":>", 
   "test2"}], " ", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Msq", "->", "1"}], ",", 
    RowBox[{"f3", "->", "1"}], ",", 
    RowBox[{"m3", "->", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ff", "[", 
  RowBox[{"equ", ",", "m0sq", ",", "mqd", ",", "s000"}], "]"}]}], "Input",
 CellChangeTimes->{{3.937161381419382*^9, 3.937161389825123*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"7ff254a6-a5f7-43ee-a33c-6fb9dd28fac8"],

Cell["In order this to work ", "Text",
 CellChangeTimes->{{3.9371615226999817`*^9, 
  3.937161527665331*^9}},ExpressionUUID->"7aafc06a-1903-4a6d-8be2-\
0c7b567caff3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", "[", 
   RowBox[{"equ_", ",", "m0sq_", ",", "mqd_", ",", "s0_"}], "]"}], "=", 
  RowBox[{"test2", " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Msq", "->", "1"}], ",", 
     RowBox[{"f3", "->", "1"}], ",", 
     RowBox[{"m3", "->", "1"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"ff", "[", 
  RowBox[{"equ", ",", "m0sq", ",", "mqd", ",", "s000"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9371615413015003`*^9, 3.93716154843088*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"09476bc6-dd2b-42a5-a965-c9a14fddca7e"],

Cell[BoxData[
 RowBox[{"ff", " ", "@@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "9", ",", "16"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.937448519472909*^9, 3.937448522520422*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"acd2d19f-6c35-4896-95f6-eb4b8fc1aa4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ff", " ", "@@", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9", ",", "16"}], "}"}]}], " ", "//", 
  "ReleaseHold"}]], "Input",
 CellChangeTimes->{{3.937160490408646*^9, 3.937160493919441*^9}, {
  3.9374485300252523`*^9, 3.937448534256854*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"46cf7c5b-e3eb-453f-bc51-895788c9a3dc"],

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"ff", " ", "@@", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9", ",", "16"}], "}"}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.937160500112547*^9, 3.937160515959638*^9}, {
  3.937448542344768*^9, 3.937448552934453*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"2c5762fd-a297-48cb-856a-bc06286b0ba5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ff", " ", "@@", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9", ",", "16"}], "}"}]}], "//", 
  "ReleaseHold"}]], "Input",
 CellChangeTimes->{{3.937159369297171*^9, 3.9371593760768223`*^9}, {
  3.9371594267815847`*^9, 3.937159427110402*^9}, {3.937160403731297*^9, 
  3.9371604073467007`*^9}, {3.937448556506319*^9, 3.9374485605490923`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"e4beea3e-89c8-4ad8-85ca-5d5f8ba73cfc"],

Cell["Try this in table", "Text",
 CellChangeTimes->{{3.937448373978517*^9, 
  3.937448382753648*^9}},ExpressionUUID->"68751675-b168-4542-8a69-\
6f91b2327d6e"],

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.937448444062298*^9, 3.937448445061932*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"cc4186a2-d4fe-4880-b4ef-3f2cae48bc50"],

Cell[BoxData[
 RowBox[{"t1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9374483876768427`*^9, 3.9374484286935596`*^9}, {
  3.9374484772240667`*^9, 3.937448478103303*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"47916008-7ea2-4da8-b236-71a67889b7cc"],

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"ff", "@@", "t1"}], "]"}]], "Input",
 CellChangeTimes->{{3.937448485567973*^9, 3.937448491655596*^9}, {
  3.937448572098838*^9, 3.9374485788439302`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8f992770-d002-4039-9459-54cee53a8b1c"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"ff", "@"}], "]"}]], "Input",
 CellChangeTimes->{{3.937448590398369*^9, 
  3.937448598118759*^9}},ExpressionUUID->"81cd12e7-d107-4d9f-b424-\
6b514264dcda"]
}, Closed]],

Cell[CellGroupData[{

Cell["Error Analysis", "Section",
 CellChangeTimes->{{3.936928495241518*^9, 
  3.936928502391624*^9}},ExpressionUUID->"e985ddc7-e7c0-45bf-9570-\
d8cc36e5b961"],

Cell["\<\
Prepared with the help of chatgpt: \[LineSeparator]See \
https://chatgpt.com/share/66fe55e3-ecd0-8007-9d39-ae15c09faa08 \
\[LineSeparator]for the chat\
\>", "Text",
 CellChangeTimes->{{3.9369329947129917`*^9, 
  3.9369330090454483`*^9}},ExpressionUUID->"c5877190-8c5e-480b-922e-\
d4b465413252"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Set", " ", "Directoy", " ", "to", " ", "the", " ", "one", " ", "notebook",
     " ", "is", " ", "running"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"9d8c304b-aabb-4532-b64b-12efa57d2381"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3QewNEXV/3EFVELJ+0JBGUotEUssUQqQUtAyoJQKakkQEUMpSFQBJQiI
EcREUhEDBowoillQDIiYESOKOaGYIygqoPP3M77n/vv2nd2d3b1hL8/5Vg08
d3d2pqenw69Pnz692b6H7X7AWje60Y2OWPc//9l9n6N3PPzwfY7d43//88ee
hx5x8IGH7r/fzoceuf+B+x++/b5r/+fDQ/5z7Pqf89f5z/+bJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSZI3n2muvbS6//PLmRS96UXPggQe2/77mmmtWOllJkiRJkiQz
y+mnn97c7373a4/b3/72zSabbNKcdtppzd///veVTlqSJEmSJMnM8a53vat5
3vOe1/zkJz9pfvWrXzU/+MEPmgc96EHNhhtu2FxxxRUrnbwkSZIkSZKZ4z73
uc+Cz973vvc1tqCkqUr+/e9/N//85z/bI0mSJEmSJPn/0E+3ve1tmyuvvHLu
s9/97nfNBz/4webFL35x89KXvrQ566yzmq997WvNH/7whxVMaZIkSZIkyWxw
+OGHNy984Qtbv3L85je/aR796Ec3u+66a/PlL3+5efe7393apx7wgAe0GipJ
kiRJkmRN5973vnfrCxWwNW2wwQbNF77whfbvyy67rNVPxx133EolcWz22muv
Ns2zctzsZjdrNt9887m/b3nLW7b++/L0uc997txhPeQk1996q63nXafP8ZSn
PKVNx7DrlucpJ+PeI44nPelJzf/8z/+M/Vxbbrnl3L/lnzxTNmP9w6D7jXsv
1yrrQJIkSZIM4tvf/nazxx57ND/96U/nff6Sl7ykWXvttdt/i2tw4okntn3M
xRdfvBLJHBv95+Mf//jO7/hy0YMf/vCHm3e84x29Dud3wff+r3/9a+/r5DG7
xyc/+cmM4ZEkSZKM5Jvf/GZz8sknd87HsTvd+ta3br8X64DP+dFHH70CqZwM
tqdXvepVK52MJEmSJEluQPz2t79tjjnmmAV2pze84Q3t/63DM1fykY98pPUj
N6+xmmJDmStjU5gE2lEsLMdFF120yCmbjp///OdzaXvb29620slZ1Zx33nlz
eckOmyRLxT/+8Y+5suZIkllltfX1yw09dNe73rV5+MMf3tqeHBdeeGHzzGc+
s3n5y1/enmP+y3zdkUce2Xzve99r/vSnP61wqvtjDkbaJ0E/ys726le/uvWf
tybx0ksvXXDe9ddfv+wxHa6++urWN0raDj744Dbm6Wtf+9plTcO4/OUvf2nT
yjdLnNa73OUuza9//euVTlbzoQ99qDniiCPavORfpT4o50my2GiPHvvYx7Zl
TZnju3fAAQesdLI6US/Cf/Azn/nMWL81XvW7wFjvU5/6VOdRx8kZxrDf1vdY
Lf6Lf/vb35q3vvWtc/aKWUAfr4zuuOOOrb/rpz/96ZVO0kwij8L3tj6UP7pA
Pdhhhx2ae97zns1tbnObZs899xyrzK8k/Fj01ZPgGUMr0pn3uMc92npZ8rOf
/axtK8r8oBPEgJBvfMfYsP71r39NlAY66Stf+cqCMUDEOw3o37K9mkW+9KUv
Nd/5znfaf9OmW2yxRbtnUNd5nrvkuuuua/P5jDPOWPAO+sJvrWt+urye96m8
THqPWUU99uyeSz/TB2Uu+qJZQbmZtTSVKLfq5qD6rs4qY8ETnvCEtq2dJaTv
gQ98YDsmi/UU6oRxdR8++9nPNre73e3mjVuN7aw56TrGeZfnn39+O8bxO2Pa
8rc/+tGPmv3337/to2jU1bI2/Pvf/36z3XbbtVp6FqDn2E4+8IEPtOvt2U3u
fOc7r3SyZpKYj+s62FXMayj7v/jFL9rjzW9+c1uXzOetBvS5xnnTwk7Cj6q0
S/z4xz9uttpqq+ZjH/vYPPuTPHvqU5/a2od22WWX1ncs5v60TU972tNaG8zj
Hve4eTG2Ap/5zjkHHXRQc8ghhzRPfOITh6ZPbAnjxeXEeEkaHd/97ncHnnP3
u9+92XnnnZv3vOc983SgfsOccIl5SPEz+OGX7Lfffs0znvGM5qEPfWjbdopB
Ni7Kr7UPZf9V89WvfrUdK9T6bbWj7LKfyrvtt99+aB7gW9/6VmuHiz5OeV5p
rNlUl7/+9a+360Hsm9AH5c5vtXVLjXr+xje+sdX7fVCeTznllCVOVX/ovte8
5jXNRz/60bYOqnPWDtFCtN4oxLzRXoXuCp7//Oc36623XrsO1mF/i3XWWadZ
f/31x06jdLi2deFd3PzmNx/YHi0X4/qLXHDBBWPZ+Lynk046aUns5Po668CN
YwP3mvXx+SzSNT54/etf39aB1QBd0WXjGAf+Cvr1N73pTXOf0QHGOB//+McX
nM+nodQyfNfvf//7z/3NPqX+G3MYM9Vo732vHQiU53PPPXcuJlfgb22ddm4S
1BFrByYl2rJXvvKV8z4Xq56+vO9977sg1oXvlKm6PbYG0tqEX/7yl/M+106q
u/Hs7HnO++EPfzh2esUu81vvoObPf/5zO6a9Ifk/GUtuu+22c/5xyon3cdhh
hw38jTJNn9CS3oX8msaHMKCzJ+Woo45q01CibWI/H2TrUa49h3q0HPEolOvX
ve51bTkehbHp5z73uVbXzhLKCxtxWdeMl9daa63m2c9+9sjfi7G80047LdBP
2rpTTz21tcs7lEf2fGPMcYk2h32ki5Xum7R7k/qM9IUNWdu6FDY2fZs+TH01
r6hdhPeWjAe7gbwM3yi22b333ntm8pLdhwbv8j/ia/CQhzxkbs5oEtgh9N/1
+j39sHaitpPgve99bzufxi71xz/+sf1M2xHIT/Vro402mqfxQfsrt3Ufx17A
fmC/wsAzs3WJCT8pnm2adykGlLTW7SDNue+++861o6W9g+4xnik/0+Zss802
nWMwn4nValwcddlnl1xyyURpftSjHtWmrdRQ8p1Ni23jhoS531of8zsbpp/k
bemX5u+V1E/2ODD+qLWGMifeStSxGs9OBzhvOfQT7XHssce2ZXkY9N7nP//5
dm5/1jEONI9Hg9bjmhrPrb94xStesUA/1etb2ILpX/MZ4xL6KdqCmlo/ffGL
X2ztUbSd8TQtLiZ0ibGp7+IQiybQJogn7fOyDrimfsGcofEhvxb2dJpd+pwb
ZUEZNSemDLtXOYdOR2sPyzxyHdfTb7i+e7tXlPV99tmnWXfdddt64XvXeMxj
HtPsvvvuc+cZB5rrMH80rn+usvysZz2rtT2y3dZz/uWzs7eecMIJY11/TcFc
vjFe+BGyPc1KH6N8mh/beuut2zTWXH755c3d7na3BZ/zg4n64991WY4yT3+x
XZ1zzjnt37GHDeyxrE4ZR9b4nXmrW9ziFm1dqttTWkCZVsdq296DH/zgOf30
iU98Yt535rCMOSK97FTSZ7zgnny9BvUlg5hGP6mfm266aXOnO91pgX6iC80T
acvKuXP1zvxc2N3C1vPkJz+59WsYBPu2fr9rHtMzR0wu7YT2MpBX4pSV7Qdd
qz+I9wp2GXYXfZv3JS+hjOmHJ0Vb6Xr6nlnZN1KdKG2po5AX8quv39QgJtVP
/G5udatbLZg/UOaUiVF6ZVz9pO/Un6nv+jz9WMS6i37W3GE9dmKrUUeNHSDf
6HRtpjoW+kPdOPTQQ5vf//737d/Rv88a5kojxi/fnFHj0PDj0qbU+qmGflce
Jhnbhn4aRKmfzI9GWtzT4d/lukfaJ9Lu3dN1UVbZDOLZI250jD1iHBzjR2MM
ZZRfZ8QaDvuQ68d8o99r52M+OeIRR0wgfULEMeZz7Dp+77pxPef4vrQ/Oace
57iXsf64uL5yHs9Xjl0ij/hGxdr8SW1+feMZJ4uLd6u8KD9RJ2p8V7a5YldF
3G/lI9qGmEdyPX8rx/wX2OLr9xh6Z9j8O8o2RLkPfxplT9qVu1o/qccO6ZG2
ur03FlRu2QOi/tSxwcdlGv1Eu7mnOl7mf7Q5xiSRn/Hs0q/tCD2ufXO+PBoW
U4xGLOuz38T13MtzGCdF7HXtXeSRa9d5WbaD8d5LX9nyPXu+cddLGD9GPPnQ
w32v4f592pRJ1nDIo3HWU9BM0j/uHHisnygP78mcd/lZn/4z6lKXfqr7kC7G
0U+x14Lr8kOOtoUNJt5n9N+1PU76oi7Jr+iT6SrlVJmQ1q5Y97MI+4I5Nn5K
0qn+XXXVVQvO07bxb2J3Rx/9dMc73rG9Xtc8+ijG0U9wrvGR8Yv1QNqfaPO9
L++5tGXRzuw2MF57+tOf3pZTBx1Bs/P5RlfZinaqhJ0+5hpq7ej//i7bP/YA
zxH+oaHdos/p0k/0unlW/mcBbTauNj/77LNbn1Xjc8T4RTrFOOIfysYI41/t
ybQ+MouJcYq53ZgrXtMPay6GrXPnb6CsKbfsjoHfsnUE6rk5MPYqWordURk0
b6RMaw/9rd9nVyptuCUxxuhqt42F2VDZV+Ec9pkY7xsLsMmGfmK/ZvMwLyoN
0q88ukbdtqj7fuO5BsVAH0W0A3GwocmL+vM+sC8ZO7PZR3vBDsaWZJ7RdX3O
pgfvyfOWcb7VP8/DvhHnlcgPtjw++No1v5H3+mH34pOhbzJWpnfNm8o/9kHn
quvagtpeb16XLopx5SDY+s2zdM3TDoKtzLpfczTwzNYZ1GkYBBtnnxjp46TJ
XKd+QF9xk5vcpG1jw/4xCOk218nv11wBX4i+sWCUizq93kv9WR+b1nLqJ+jL
lLewFymXZd+l7io79RworRHPoz3SzpingvxnxxxlK5s1PKuYI+W4pMa4Th6b
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
tUWgdeRNrJuBNHjH/Lxq3yPvmt/GMJ2sz/A+tNFXXHFFr7yRPu2edPBh80zK
XZcP1nJgnXzEDw+7Ff+Tcn5G3dC+azc9J5+QzTbbbO58z0KD9o2N4T2xNUVs
+kGHc/r6U/Pl1k5bkxAx/PWJUQbVI++07Meg3CgntFafNl5fpS+jHbQl/lYG
y77rBS94QauvlHltmNixNFSJ/pZm0l87R93umpMv0Q+W8zwrBR+52NvYmK9r
jZzn5evYNR+k/e7aG1n5V47quCzgq+38cWJwl/unD9rfnS06vvcc5fm19vOZ
8lJT7vfcB+XfuF+7E22iZ/Z7/3c9fq6TxP8tobNrOx70N3RX/W70QWz20yAP
3XPUPOCsIL18Y0rdyFamjVanu8ZU+oSYI6al2fjGgb7vimu02GgvlOFBWsXY
QLs3LhHzI/pWKKtlfVcGyvqgzPs74juNwrW1j+EjHLi++7hWzCO5t/WedT3X
J3i/3pf7lnW7qx4bC1gLs5ho68apx5FvZXtS1mPpLr/3XH187/iie74utLlx
vUirfCvbdm0pu3XZJjqfBoo2LLBugKboam9r+LCwY/W1CchPbSft5L7SYww8
KvbgUiG/yj6kq+9iMzSWrutGHOPGffLcrldeo+twTtgr+zKor4y+sSzLYRcq
j1F7tJbPrnzVeVH2pY6TTz659aGp7Zhlnju6xoo16o4yPG2crWTNRL3T1lq/
VcfApwHEMqjbwhsy2gQato4vXcbCYcMoMQ+r3rOxmbct41X3xZzTtNq4D+bM
jOm61q1rp6xHn2RvKHPuxvx13iwmxrLSvlxx7/QXtOQsrRNdTNR3Nqil3jtF
nWJ77huznY3aeGXcfj5ZM1CejBHqcVSSLCfaTXYDtlbzLuUcJluz+dE1TZfT
MV2+7eps7I1dz3mEz4jv2IK74lqMooybupSwO9FI5olrzCmIPTBpzGa2raXe
Y4at2frcQXGiFgtjBvPfN1TtFHg+bcBSjpHMR1lv3Cdunzkh54+KnZEkSbKS
RJzb8EtK/uvH2DXnSlv4ritmM9tT+LDWa0L6slz6CV0xNuiS1bBWJVjKtNLO
8ma53sdKwx8r9qRZbOhcZTvX2iZJktxwsd6ZrujyDxNfiJ9k7LMT8CegPyNe
bLmOfhwm0U98A/V9bIdixsXeT9ZJW/8Te6HbL632x6L32MqsjzDmtzbBM/Ih
4Ac+7b6lqxk+u9Psv7YaWaq94sp9D5MkSZIbJuYxrTfpmsvgB2PdCp0S+sk6
j4g3yn/V58P2PAlcp94vxe/FRys/66OnYq9uPrvWqJhz4ockXfyY+Aj7vvbR
NjfLH55fL9tTHX98VHyXJEmSJEkSmH/rWsdubWvEkSvjdFmfJx6sOQprj8Xf
6YP1ufXeHeJQRFzVOOrYPF1YM2m9N5sR/++Ig2ENoHXR5mW6bGo0UhmfLUmS
JEmSZBIG6ScaJOKDhH5ivxFDn1/HxRdf3OlXPg6TzN+xEbFbiV9oLQD9JHYh
u5K5vGHPlPopSZIkSZLFoEtrREztgG5ae+2159l0xJ2hn+qYw+MwiX6KGPTs
VqCh+GeFD7vvxTPs8rVO/ZQkSZIkyWJAP9nruPRhElv/2GOPnfubXzXdIc56
+NuG31S9/8I4TKKf2L34OkUsJ/7vYvhG+mPPIjHtar+sY445JvVTkiRJkiRT
w3+7tCuJ48QHe4cddpjbU/fcc89tfbMhfhv/a7rLGrxp9JM5wnFjDYnRbJ8L
2khcJ3GbxUYqv2cXY3/qWn8nHnSSJEmSJMk0iG+90UYbtXuBwL5t9hlzxH7y
1nlH7MbLL7987nvHNLEWXbNPfMESPlkOfk+0nLiD5T5O/k07xfMEnmGbbbZZ
sLd6kiRJkiTJJNiv5sgjj1ySWDizgv2o+HSFTS1JkiRJkmQaaAq+QcuxF91K
IOb8TjvtdIPflyRJkiRJkuXFvqriiYtzeUNCXO3TTz99wT7RSZIkSZIki4EY
5N/97ndXOhmLinhRF1100UonI0mSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEnWWOyBuN122zU3u9nNpj72
3nvv9v/2tD7ooIOaW9/61s26667brLfeeu3nG2ywwaLcp+u4+c1v3u7jPe3h
OuVR3yOeZ9r7bLjhhm1+uN6w51p//fUnvodru09cK0mSJEmS6RFfnyZ43/ve
tySHPYLOP//85jOf+czc30t1r+9973tT58ff//73Nsbsz372s/Z6/l/ew55O
F1xwQXPhhRdOfa+rrrqq+c53vtN84AMfGPpcX/ziFye+h7TajyqulSRJkiTJ
9LzjHe9o7nrXu650MpIkSZIkSVYN9NNxxx031m9+9KMfNaeeeuoSpWg07Clv
fvObmxe96EXNq171qhVLxyj22Wef5qtf/eqK3f/jH/94m0eveMUr2neWJEmS
JMnisOuuuzZnnHFG7/PNb5144okr5ktDO+21117NS1/60uaYY45pNtlkk/bf
s4b5Sml79atf3fn9n/70p0W5zz/+8Y/muuuuW/D5pz71qeaEE05ozjrrrObu
d797s/XWWzc/+MEPFuWeSZIkSbIm84tf/KLZYYcdxurLP/vZzzaHHXZY6zPV
xS9/+cvmIx/5yLzP/vKXvzSnn356+7tnPetZ7b7co/CbD37wg80111yzIM3f
/va35/5+1KMe1V53lmDrectb3tJsuummnfpJHh199NHzPvOc8u0Zz3hGc8QR
RzQXX3xxr3vRaV3nsnvxrwKfrT322OMGtxd6kiRJkqwEX/va15qHP/zhc/3s
KL7whS+0/f773//+dm1XzUUXXdTstttuC/TY85///Oaxj31sq3PYQvbbb7/m
D3/4w9B7XX/99c3b3va25pxzzhl63rOf/ezmve99b6/0LxeHH35463d++9vf
foF+op2OPPLI5le/+tW8zz/3uc81D37wg5unPe1pzb777tvc5S53macTB/HX
v/61Oeqoo5pLLrlk4Dn0E1vdqDxPkiRJkmQ07DsHHnhgOyc3ij/+8Y+tXUS/
//a3v71dE/+b3/ym+ec//9l+7/P73//+nf34tttuO9d3W9t2n/vcp7XP9IEe
e93rXrfADmXe6rzzzmvtNZNgXmsp1qNJK5uQ/LjNbW7TvPjFL26uvvrq9js6
lU8UW1zN8ccf37znPe9pdaNnoznZ1vpCq9GvNfTVmWee2fq5JUmSJEnSD/Ng
bB5d0BDsN9dee+3I63zsYx9rbUhiRfk//6eTTjqp+clPftJ+f8ABBzRPetKT
5rRCCY0mLtRll13W/s3u9e53v7tX+r/0pS81N7rRjZpzzz137jP6gvZ52cte
1usaXSyVfrrnPe/Z5pGDje6hD31o64sEfmb8zX79618v+J38EDNLusCGN45f
l9/Tr/E+4hp8x1M7JUmSJEk/zB+x8ejP2TbCThT4m97p0hDhi6Mvp3U++clP
NpdffnnbNzve9KY3tf5PV1xxRWu7Er/opje9aWuX6oI/0BOe8IRm6622bu0q
JWwmru8+1orxDfd3id/SIWHD+tCHPtS88Y1vnLNJmeeq58NGMY1+olU8szSb
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
kiRJkiRJkiRJkqwZ/D/6UbYQ
     "], {{0, 109.}, {592., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{72., 72.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{592., 109.},
   PlotRange->{{0, 592.}, {0, 109.}}], "Text"]], "Text",
 CellChangeTimes->{
  3.93693156847891*^9},ExpressionUUID->"a3074c38-24bd-4e44-8dfe-301ae7fd6cee"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQewnUUZ9+nNAT4YGcoAA5IBh5IJgaHI0BmkZegllEEQUUqo0hFpIiWg
lABKC9JBmqBIFSQ0UTR0EOkIAlKlC/vx22+e8+19OeU9J/fe3MTfb+ZN7jnn
LVuf/e+zu+8uuvPem+063TTTTLP/LF/+s9lOB6253347HbL5//nyw5Z77b/b
9/f63i7r7/XD733/e/uttPP0X375h2mnmea+L8+f4cu/k4iIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiISMF///vf9NFHH6WP
P/44ff75511dy/mffPJJ+uKLLwYodFMPn3322eQOwpCFMjiUyxHlvFXd4Hvq
jvkrIt2Aveu2zRWRgQU98vDDD6ef/vSnaZNNNknbbbdduuCCC9Knn35a+x7n
nXdeOvLII9N//vOf/Pmxxx7L92h28NukhPWdd97p+rq33nqr52d2olU8q8ff
//73dMUVV6RLL710wMISPPfcc+mBBx4Y8Of0J3/961/Tcccdl48oR0OFf//7
3+m3v/1t+tWvfpVeeumlpuc88sgj6Xvf+1768Y9/PLiBmwxcf/316b777sv1
cajx5z//Ode3a665pisbJv0Ldpp2hXqN7WuVFy+88EI+h+PVV18d1DC+9tpr
+bmvv/76oD63ys0335xtdrcQ7quuuirdeuutHc8jnv9rUOYog9hvkW755z//
mTXx9ttvn775zW8mtkCcffbZc9tXh1//+tdpjjnmSN/+9rfT22+/nb/72c9+
lu9TPeaZZ56sMXrl3XffTb/85S9b6pNWHHzwwT0/sxOzzTZbTjt07ymnnJLj
ucgii6Rrr702nX/++WndddfN3z344INp+PDhae+99x6wsAB+V/TZN77xjbbn
PfnkkwMajm554okn0qqrrprLYpSjoQLt/C677JJGDB+Rw9kM+nxLLrlkWmml
lQY5dIMP9X2zzTbL9XEoce6556ZtttkmXXjhhbks0WeXycN7772XbrjhhrTE
EkvktuHFF1/8yjnY8a233jqf88Mf/jC98cYbgxa+559/Po0ZMyaXk7pt3UBw
zDHH5Db0gw8+6Ppawk1b087W//GPf0xbbbVV2m233XoO40033ZR23nnnbJv5
uxn4Bvidg/o3FGAM7957701HH3305A6KTIHsuOOO2Y4xnwJbFTr20EMP7Xjt
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
3Xrrremdd96p/cxOsH889yPtuP8zzzzzlXPoI9AukLf9qY0jTq2eO5h+xlba
uFtKbcy8Y9K15MMPP8x6tj/qx4knnjhkxkCqUC/mmWeePt9NijamXi+22GJq
46mAqjbuhTramD0dJsWPC3PNNVdDG/c3rdqW/mZqGK+h3qMDynkt4atXG8vk
gHlUzPfcf//9s0079NBD0+uvv55/O+ecc9Jss82WZp999rTMMstkXbD22mvn
8kq7iAb8+OOP01VXXZWvZS7m8ssvn+68884+z8BfwO8c6JOjjjqq8RvaeJZZ
Zsn3+vrXv57rRzlfGE2z+eabZ8275pprptGjR/fZ+xHNRfi59yqrrJLDWldP
jBo1KvdVGbchfnG/JZdcMsf9uuuuS8OGDUt77rlnrftdeuml+fmMzS2++OIN
n0ZoY9KF53C/0lfJ9/hQGWtbaaWVct+ZdK0LeUacOfBVAP4KPhM35hKQrhzV
cXfOI6zsNb/rrrvmPCi1MfOBw7dCPlBO6hBxwtaRliNGjMj3Au5NOSFdSCue
V6d9inLE3MX1118/l7e6VLUx6cQzy3wC6gP35XvCSJnnuyC0MWV4ueWWy2lK
GY78ZP4yZYr6UaccEqeIP+WC5wJ1at55583zN/idMJJunLPWWmvldCAN+A6N
QB5FvaLs/OhHP8rnUJeibBD2Es6j3vEbcS59XO0grox5TzvttDncUVZCG0c+
Ec4oj8HFF1+cr+H/qMf8T73mfnPPPXe+NmxQuzBQFslX4k0cmpVNfiPfSZ8y
LMSdcMRBegf4/ON7fONlv47nxthUme+fffZZLt9x3fjx4zvGoYS+aVxbXke4
qvfjmXFuyd13352/IxyEJ8AfzxFlvg6UhXhGs35tO6ramPBSRglDCWWAOkZa
8ltpE0ttTJnnnHIshmuxtejPXrQtZZS8DZ8r92DMjzAQFso06ci+agE2rdq2
US+jbSOMXEN6Ua8IH36lCDf9P/KxGt5oe0kLrgv7TB7y/LB1/M8zNtpooz7X
N9PG0dZwPvaytGFlOeWI3yLu8X0Z906EDSA9qvGjrrFvc2lnq+d1o42JG9dO
6piBSDvod4deev/993N7Hz7OZr42fkMblH4xym+Uc2xW3O+LL77I/qU11lgj
708D2MhZZ5214R+ifZlpppkadhMtt8QSSzTqGnX+9NNPz3N3uRe/nX/++Y3w
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
OV3wwwd8psyTbmGXqe8xr6ha76pzZBjj4FzaUK7D14wtwCa0g/Jd5jv2h7TH
zse7Xqpzm/A/0O/B/lGe11hjjcY5pBeavnwudYW0DbB12PWwm3XnOKLhKd+E
i/ASbmxzQBoxXyKgDJfamLDRdlKeIl9p07kH9yINKWOUv7J+itSF8omWYJyd
vh8al77bTDPNlMsiOoqx2mr7VdVSjM2ENqZN5dp2mqKqjat6ohnttHHURa4P
bVZtU+sSWrYc8+Ye7bQxPhD8fdhE/BVLL710H33IOD/2kGuwVaGNaddo5/Et
8Z4GbAz1mmtLTVOF87BZ5B3PwrbFmoRm8Bt5SDuETcGetdPGxIvnR/tTl2ba
mHQM31Ezqto4tE+Z/lXwN9BO0TaRrqU2/vnPf95I65122imPp+In5pwoo1Wq
+Qn9rY3LdgkfUOQv9yf9u50nV21TaSNoK8jfaC+q2hh4/wz1nPFjyl200Yyp
UqY4nzaTMkq5iTIac634TBltx+OPP577X5EeXItdYBzm3HPPzd9vtNFGuex2
Wp9frceU45VWWun/+edGjMh+wlL3VGHMHI1A/5YyVR4B8XnmmWeyLxGdFbap
U9w7aWPA38D6ZnyBaME67ypkLhH3QddRpyi/QTXfw95GPvJ3te5g58uyjOZC
4zFGTXzQ7tgSxjTQFPjiSI+gWo4IQ526UdXG3IPyWYId4l0l7eo78afc4kel
74J+pc5SPpkjUZb5EvKB/Gzll+Y6tHG1XETcq9qYMQd8PNXzy/mA4V+vQj7R
r6rWu2p+0pej7jBnoFV5bUY130tt3MpnwbyZsPO0YfzOnEHSkrRFb/M7NpXf
safYiSBsXbS/dbUxcQ5/O3nLHJ1IN7Qyfqlqv6uTNo52u7Sj2Ay1sfQC8/Qo
c/gD8TnRP2NsIsZB6VOiP6pUtRRluZM2po0KJqc2po7H2GEzetHG1GN+R3MA
6Ve1Q8wdQXNgWxkTDBhz41zaedon8qSVNo6xPqCtRevi/0TTtHuvY4yXx3wt
0r8XbdxuDix0o43Lccs62pg2m/JJGNCZ5AlpwHWlNkZr4fPCbpIu9Pko0620
MfcbbG0cbQ600sa0ke3m7fWijcl/+m74QYk310cbDcztjXkXxOFXv/pV/p4y
SrtIvkR72w7qKP48wFeNFthggw3yfN143xnhQte069NBs3rM2DppSFjQNrTx
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
Tz/9dMOHzfuOzzvvvBx33uPG2kTmmwD6n/Cj5QkT/QPuyXet5lqLiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIj0F3/961/TEksskaaZZpq0ySabND3n1Vdf
TYsttlg+Z/XVV0+PPPLIIIdSRERERGRwuOyyy7LuRSOjlavst99++fdRo0ZN
htCJiIiIiAweJ510UkttfN555+XfOK6++urJFEIRERERkcFhyy23THvvvXea
d9550y233NL4/qWXXkrbbLNNGjFiRNbGf/jDHyZfIEVEREREBhj8xD/+8Y8b
vuMLLrggf//xxx+nQw45JF1xxRX5+1VXXTW9+OKLgxau2267Le2www5p9OjR
6amnnkpnnHFGWm655bI+f//999NRRx2VP1900UWDFiYRERERmbq56aab0lln
nZWee+65Ptr4rrvuypoZXcr3O+20U/roo4/a3ovf0a6djvvuu69juDiH566z
zjrppz/9aTrooIPy52OOOSaHCz/3ggsumDW9iIiIiMikgm/4iCOOSNdee23+
XGrjXXfdNb+PYvz48WmmmWZKY8eO7Xi/t99+O+vWTsfPfvazjveaOHFiDs8i
iyyS9Tv35jO+4r///e/pnnvuSbPNNlt69NFHJykNRERERETgrbfeSkceeWR6
5pln8ucZZ5wx+2kPPPDAfMCI4SPSXHPNle68885BDRtzJmaYYYZ0+OGH589X
XXVVDt/JJ5+cP59wwgl57eBrr702qOESERERkakT1todcMABjc+rrbZa9s0y
XyF+HzZsWPbdDjY8c8kll0yvv/56/rzWWmtl3R5aeIUVVkhbb711eu+99wY9
bCIiIiIy9cE840MPPbTxGa2J5nzhhRfyZ9bhzTnnnGnPPfcc1HD95S9/SV//
+tcbvutnn302TTfddH3CioY/9thj0+OPPz6oYRMRERGRqRP2uGOdW7DHHnvk
ub3AuyB23HHHrEHrzA/uT04//fQ088wzpwcffDB/Zg40n2NeNOv5CBd79cV3
IiIiIiK98K9//StrSvbD42DuBLD2jjnIEL/FgS93sDj33HP77F992GGHpW23
3bbxmfAsu+yy6Re/+EX65JNPBi1cIiIiIiJDEd5VISIiIiIiIiIiIjI5+fzz
z/M7EvBXcrCfHGvE+H6o8corr+TwcRDWV199Nf3nP/+Z3MESERERkakEdOaY
MWPSuHHj8tow1oKxV9tnn33W1X1Y61Znf4w6e8dVYX8M3j3BHnbcY/PNN8/v
QmPNHe8HFhERERGZVNh7beTIkXkf5dDC5R5y3fDyyy83fLrtjnivbzegf+eZ
Z57061//On9mXR3hXGONNXq6n4iIiIhIyUcffZSWXnrptMwyyzS+4x0P7Evx
8MMPd32/Dz/8MPt32x3vvvtu1/5owFeMFg4uvPDC/Dm0csnFF1+cfcrlsdBC
C6UFF1zwK98PlYOwEcb4e7755st/77PPPl2nlYiIiIh0z/XXX5/mnnvuPnsm
815d9mhDw3YLcx6+/e1vtz14f9kdd9zR9b3POeecNPvss+d3sj300ENp1KhR
eV7FP//5z1rX807jXuI0WBA2wgj//ve/03PPPZf/jr1KRERERGRgYW8M9mQL
ePcuvthTTz21p/uxNo69Kzod8c7hbsDnvOKKK+a9Oo455ph06aWX5u9ERERE
RPqDcp4C6+OWWGKJ/Jm929Cwvcx9GCiY/8wezyIiIiIiA8EJJ5yQpp9++jR6
9Oh05pln5r3Y0MZrrrnmoO4V1wk0+gEHHJDn47Ieb5VVVsn6/Y033pjcQRtU
eHcI85DvvvvuyR0UERERkakO5kBcdNFF6fLLL8/zXXmnMf5Z/h9K3HbbbWnH
HXdMN998c7rhhhuylmfu8d57793ymk8//TTdf//9eW0hR6t5HB988EHjHI6h
DL79Aw88ML+LWkRERET+N+F9DejiL774Ih8ff/xx2nDDDbPPuxWchx7m/ccz
zzxzOvLII5uehy+W35dffvn83o6hDHFC84uIiIjI/y4LL7xwuuyyy/LcitC8
aOM672DmvRjME+H/Kryng9/wQfeyHwm+bNcDioiIiMhgcvbZZ6d99903HXro
oXmeMUcdXcxeJJtuumlTbcx8kpVWWin/xvsv4p1p3aA2FhEREZHBhnkEr776
anrssceypmUNXp13aNx6663pxBNPzPp3xPAR6cknn8zfM8cYrX300Ufn3zbe
eOP05ptvdh2uXrXxxIkT08knn5wOOeSQ9Morr6QJEyak7373u/m9zYA/m8+9
vAdaRERERKQKcy/OO++8rDN59xvvp2O/akCD8o7ksWPHpmmnnTYdfPDBPT2j
V21MuMKXTfh4/waf2c+P9YDsizfTTDPldXciIiIiIpMKe8wdf/zx6cEHH8zv
cS618ZZbbpkeeOCBtNtuu2XdfNNNN3W8H+/xYN+R8lhhhRXScccd1+c7dG8n
2MsPLbzUUkvl/VfQ13xmP0Lmi+BXZv0h75gWEREREZlUWK+HBkaHoo15L/Dt
t9+efcQ/+tGP8hyNxRdfPPto2aO5E7zDIvb1K7Ux75Qr9/yrs6Yv/Mbbbrtt
1vB//OMf8+cxY8bk39kfe4EFFsjzLUREREREJpXnn38+720C+GbRnhtssEEa
NWpU/g6djF5Gn/ZKr3Mq8AkPGzYs/eMf/8ifeU/zyJEj01NPPZU/8/7m9ddf
33V+IiIiItIv4IMt9/JAG6NH33vvvfx53LhxaZZZZknjx4/v+Rm9aGP27cAn
HO/NeOedd/Kc5z322KNPWN3jQ0RERET6i+HDh6cXXnih8Zl3GPPet88//zzr
0a233jpr0Ndff73nZ/SijdHis802W2OOM2vxWHcXGv2JJ57I4eL9zb///e97
DpuIiIiIyN1335222mqrNOuss+a5xfFuNrQm74K799578xwG9tRDg55yyimN
uQ3d0os25t1xPDfeQcf6O9YDxn53vD+D33fdddeGj1tERERE5H+VOu/NEBER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
EREREREREZmamDBhgoeHh4eHh4eHh4fHl8djjz3m4eHh4eHh4eHh4fHl8cor
r3h4eHh4eHh4eHh4fHm89dZbHh4eHh4eHh4eHh5fHu+++66Hh4eHh4eHh4eH
x5fHe++95+Hh4eHh4eHh4eHh4eHh4eHh4eHh4dE4Jrff2sPDw8PDw8PDw2Oo
HJN7vrOHh4eHh4eHh4fHUDleeuklDw8PDw8PDw8PD48vDxERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERkaHM
tddem6aZZprG8a1vfSudeuqp6bnnnuv5nmeeeWb6/ve/3/S3e++9N+2xxx7p
r3/9a8/3nxTefvvtdOyxx+a4brLJJv16708//TQ9/fTTacyYMY30XHrppdM+
++yT7rrrrvTJJ5+kgw46KO244479+tyBgjyM46yzzkoffvjh5A7SkOWf//xn
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
bamPiDtqI7lxIpFIJBILLqbCjfl1xcmKW8UB/CtGV2wxBDf2m489ddbzoebG
4lnFwvKvxbMbbrhh89BDD03EjS+77LIS++B5aduv1z5TFvjvDj/88AE3DR+r
fW7elYb9hThnlLUvN3Zehjjh8847r1lqqaUG9fHhT8eJxXCP4sby5rNeY401
St3EOovJlsaSSy45SM8z4q6dIYGr2jfpe3HB+++/f/F5qxffcrwTfue+3Fjd
7eGL8ivPbbfd1ksWizLEuvP/k5f9j+01BEhunEgkEonEcxf2n9lr1wVnhOGw
119/ffHJ1vCO33zq35xTxs9cQ4xAPDsKuGcdz2vvXPyNl/P/jkujC8rjPTw0
zpAbVta+iDpN9YzoGniUWN9hMqrrbl4RiOfdyRcY1Z5t8HlGGvziidGwLmJ9
xNxo3333HfpccuNEIpFIJBKJqWM27rdOzDzE0/PLn3DCCWVf5TDgxJ6LtZRE
IpFIJBKJRH8kN37ugO94XEw23uy59h69RCKRSCQSicR4OHcuzplIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgk
EolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRGIqeOaZZ5of/OAHzamnntr8
4z/+43zL90c/+lFz0kknNe94xzuac845p/OZv/zlL+X3d73rXc0//MM/zLey
wRNPPNFcfPHFzSte8YrySSxcePrpp5vf/e53zfve977m+9///pyW5X/+53+a
97///c073/nOou9diL7gGX11fuCPf/xjc+utt3b+9tRTTzXvec97mtNPP725
9NJLm1/96lfz/P7nP/+5eeihh5pzzz23pPH73/+++etf/zo/iv0saGsy/ta3
vjUn+QMb+6EPfajZfLPNi84912Cc+PrXv150MD7an1xB2/7mN79p/vVf/7U5
//zzmx//+MdFZ+eqrPTz3nvvLXo41TTo7xlnnNHstNNOM1o+Zfve977X/Pzn
P59yGldccUVz++23z1mfSiy8+OlPf9p8+ctfbj7zmc80t9xyS3PPPfc0Tz75
5FwXa74A7/vFL35R/o8ffOQjH2me//znT5kb/+EPf2j+8z//s4xBfRG8ZOml
ly7jRRdwgL/5m79pttlmm1Lm+Y2f/OQnzQorrJDceCHEz372s+Ytb3lL0Xvj
+VziT3/6U5mHrbLKKkXfu3DRRReV3zbddNPm29/+9qyXiT087LDDmuc973nP
+o3t2H///Qs30o8/9rGPNS960Yua//7v/x48c+KJJzave93rmn/5l38pn0MO
OaS57bbbJrIRgFO3eXdf4A3sEtkus8wyzT//8z9PKZ2ZgjmYNnwucmPzpKOP
PrrZYIMNBp+///u/L+0Pd9xxR/OSl7xk0N6eZb/x5UmhvXHHqeB///d/C2fc
c889m7/7u78rY9NUgL/S14022qjYiOmi7hv68nrrrVe4x1Sx4oorljr+8pe/
nHbZEomAfrfbbrs1p512WrGXZ511VvPiF7+4eeCBB+a6aPMFxoqrrrpq8Ddb
svrqq0+ZG/Mn8O1Oaofe+973Nosvvniz4YYbPmv8u+6668o44nPyySdPPKbO
FNjF5MYLJ3CVBYEbg/5onkjfzclq/Nu//VuzxhprlN/w1amO933BxynPHXbY
4VlcXT9kJ17+8pcPvsN/1lprrebNb37zoLzLLbdcc/fddw+eedvb3tbstdde
zW9/+9uJyvLNb36z+fjHPz6levBbfulLX2re/va3N0suueScc2N4rnJjc6UT
TjihzMviE7wMHzUP+sAHPjB4/s477yx1nUrfMh5NVUbKdcMNNzRbbLHFtLhx
gO2fCW4cfQP4efh7psONb7zxxubf//3fp+wXTyS6sPzyyze77rrrQK/Ye9zO
XHdRwOabbz7PODEdbmz84T+a1A6xp3vvvXexn/LmdwjwS7FJL3vZy5qVV165
ufrqq3un+7Wvfa3YaJ/wjU8K9bjwwgvL+8mNF15Yc10QuDF9Y39iLljru7Ws
Qw89tPRZ3HlY/NFMItbC+QXb3FhZ99hjj8KFavzt3/5t88IXvrCspePU5FrP
Z8118VOxVJNgOjzJurgy4CBkN1fc2FxD/cnuucqNd9xxx+bYY4/tXL/7zne+
0yyxxBJlHhMgd3Vl4yfFdNpcvuRsPFpQuLF1lXptVByKOI3pcONEYqbx+OOP
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
+ctfDn5TP2WN/Pym3ZVJOYynZNy+f2lSbtzWD+3k/yEna9n+lk+ssw3jxp5z
T7o150nuSxWfsd9++5U2HAZ6veWWW86zbtAF5acP/M10Mrhxly9YmjvssMOz
+swaa6zRXHnllWPLTZdvuOGGZvXVVy91F7cQ0E78O7UsJ4F7Z++6667SV176
0pd2jrPaoWt9lex9nnjiiXn6nfJF36jbPdZ6tL+/67bzfDw3qn26ynD//fcX
nVeXvrGa6qSPb7TRRs2XvvSlefpaXW72rw19hB0k73r9igwiVrPdTpFe6HbY
0cg3+rE0gy8M48bagv25++67O8vXBfl9/vOfH9hWedX2Sz+nu+wD3a85i/ao
27FP+5x99tlF56UZMgpurCzsFbtSx7CELtNH5ejTt+mbuBDlinVGcve3Ng7w
X8cZ/lGPtv0Ga2LKFna2fka7k7vf6jGuLkPYMHnRrxe/+MXPane2XhrGrXZM
gXQ9E2CLpeU57S6t+F2dartAF6LuPsqkbPrnMF3ugvZq2xJy0O6ht2TbJz6f
HlmfCJ9E7OmoubFyKWs7PXVXH5+MS07MNOijsYPtE88UwBeN5xdeeGFz6aWX
Dr6/6aabmsMOO6x505veVNaLrf3q33xKV199ddFpfxtDpQu33nprWYdhU9jd
Aw88cMrlnYQbq9POO+9cxjZ5H3vssQOfCP4qhpQtto74yle+cmyMp75JFmzN
y172svJu2Aj8bPPNN2/OOeecUr9VVlllHh8ITipOzHf4lzHNWN0H4mr5Gq+5
5pryvrVH/FxMIOCAH/zgB8tvBx10UBlz1B20o/iG1VZbrYyh2mvdddctvO2p
p54qddI+p59+enlf+4nlZuP8LvZ12223LW3qIxYRX77llltKXt5VZ+1S8+O+
3NhYJ44z0vchP1xdnSNmmX084IADSry5MQO6uPGnP/3p8tzll1/eHHfccc1e
e+3V+97Udpt1lXW77bYrMh0HPBuvpYs1N+6CZ+hpe2yK2PpxMZ/GKu0WsUZ1
3/jwhz9c4vb0Te0qZl+7joPx9swzzyzvsAHHH398iSepuTEuoO1OO+205qST
Tip1DF7EHkR89u67717koZ5HHXVUWS8NGeqD2vz8888f1FPb64/1HFc91E15
xGP04UXanc5LW/+gV/S2D8R+6+P6ujtBY51InfU78vzkJz85kA/QD/3q1a9+
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
3J/XBWc4ubPBPQDu6kskFgZMZ87q3j48cC7O2RoH/gbn5+GLswl+Wne71vm6
r9v9IPMDzkGpz8/WnuyttpkqnDNY12mqcA/twnLnE10KOZOt85f6Qh8Zdq9i
YnbQV+b1/I/Py32lU7WJfM4bb7xx4cYL09lck8yR3SG/xBJLTCzDuP814F7k
1VdffUbWwWYbMdb4jPJz04l6XDBuOi/fnefzG+78pqfgLlKynq6NclYtfpxI
PNfh/nN3k0wV1s74CBZVbsxPxLbNBI+cKviNjcfs2iOPPFK+u+eeexaIe2Xc
hyrO47kOfkT+wPYdPl1wPmP7ueTG8x+77LLLWJnjKWxEwDzO2D6Xa9wLGtoy
mg1Yi19zzTVnNY/ZRF9ubK0JJw3MFTd2p6s5oDuWAnws00Vy48SCiPvvv3+o
r/Duu+9u3vjGN5Y7jj/3uc+VeDr2iH9xu+22K+M5jhV497vfXfqwjxiqGuKT
3vnOdxb/AA6wzDLLjOXG+qJ7gKXX5QfwnbU4v5977rnNgw8+OM/v11xzTeHw
fm+X9ZZbbhmU9ZJLLhl8P4wbf+xjHxs8791aRuqkbqecckr5AN/n29/+9lIG
v4sPA7xYnZZccsnmJS95SfnNmBplxU9rkLu6hdwefvjhwW/qq1x+d2eSsklD
7F4fiA+2zs/O1nUKuP/YM/TDh7xH2XBlcz92IOp++eWXD2Tnu6effnpoGsZU
9vfoo4+eRy+lS7bHHnvss3SBjKKM8Y6ykAudtUb+lre8ZcBd6DydJjvtFKCj
dTq1rIdB3aTfTo/szjjjjGattdYquiQ96XdBzOFOO+00kht7X7m70LesykS+
ZEIW3ovy1nWvob3J2/dtHaHL2qVLP5SnlmW77uyDdmNPatD/+r1xuqz88Wzb
5ng3/PSRbluGZEFP2C6/x31Lw2BN2Zq9OY/nvV9zY3/fdddd8+hVV1nb7cU2
sSXRN8iFfKIP+reNun9G3aOtajty5ZVXln6o70U/9F4NehE2Tj+r+7F8og9J
hwxqGdftRb7aui2jqNPNN988VJfVt9YT+UZ63lEmOhe/sbnPe97zym/hV5VX
/VyAvOXdbhcyr8vfJecatc637ZB+HH3E2OWZ9pgkfeMNeyFeioxGcWN132ST
Tcp4G7KsubHyuz/amNIG28Reas+6b0jDe3SO3KTr73Hx8rHeW3NjsqjtAv2V
Jr0Iu9zWdXWii8ccc0zRq+WWWy65cWJGcMUVV8xzXx60/2b7/N+/Ynn4Q/TX
GsZsHMSYTDeDq1rDMa4ffPDBhdOZG/LzijO6/vrrC3dh+8Snhk2Sln4ijd12
263wvrCh7inbbLPNSj8xjmy++eZjYyqslUnD2Oa5F7zgBcVfHfj85z/f7Lrr
rqV/GwfEPVnfCeClYgCVwbPGPH0RyIE9ka67N1dbbbVBjGEXN/YbmXv+Qx/6
UKm/NOzZYZ+WXnrpksa2227brLDCCmX/lO/Fvomp4gf1G7AdbNZSSy1VeD15
sEtsGL5ccxNjlXo9/vjj5TntuOmmmw7kpt3YFbZT7Jn2wsX6xkXce++9zRFH
HFHaYqWVVnqWfuy9996Fc2t/8vOs9d822D76Rf4vf/nLy3f33Xdf0Smy2W+/
/Yo86IWY5FH7y4y9ylPHIpC/2FttbY5D95TVWHTyySc3q6yySilffLSLsWPZ
ZZdt1l133cL/PaONtLt6ifMjO+0J4v3I0D3fbP9ZZ51V5D8KdORd73pX88QT
TxR7H+OV+knj0EMPLfmSg7p0+RXli5cZ45XdHePf/e53y28hh6222qr8pg/F
b6B8yiBt8tfPhsGza6+9dhmL99lnnyILaZKNvr7GGmsM5Fen86lPfaq0u70B
8qhlgmu4pxPnUTfP+f9vfvObIoeQpbEZPwO/aQMfsttzzz0HdaJHhxxySMmL
PPfdd9+h84GAmEdpsz3sRfQNdo/cV1555dJfV1111VI39Q7Il36wa/I0Pxnn
q7eu4pkNNtigyJ29CG5Mf7SXNtcP2+v9+qd39thjj3n6sfLxf+6///4lPdzJ
+8qrzaSHb7dh/9ZHP/rRUqeY3/Mxeg/3AmWgl/ohG6Nd/E3/A+JFIw5BmchU
/aL8+gtbr02sp+++++6lj+mDdKLue/iq9mjLSLvzs1x44YVlPUUa0e64FRl4
P/TkqKOOKnVXt9BNbUnnQFnE8ctHHtb39YV11lmn2KDwRcj3yCOPLH3MmKBu
IXf5s6l01NqZMg2bvwbOOeecovM4tvEnxiR1UB52tNa3ekwKWbIt8qFLbP4o
bhyyZPNClsGNjTX6snrTEfoVCNv06KOPlnEmxmN2OXSUzimfcvrbs8OgT6iT
smgXdfTRJnQ55Ok7aYb++ihL7G9lw/nWyEt+9IoMkhsnJoE4NpxAv1hxxRUL
L7BXw1wUz6CnYSv0EWOTsVZ/paO4ARtp7Z4t9Hf4C9hJdixgL5Z9YNJnK43H
sbfE3l/9CW+JcaBe4zFeet/46GOM0NfEfpknG4/F7gf6xBvjLPKJOH/1C66E
ixjT6/GC3VtvvfXK/83H119//XnS85tnzGfJ8qqrrhqUN/bAqXubG7Ox7D+O
7tmLL7642GryC3j/oIMOGvzNbuJFUXbxAZ6p62+sqmMqYi9e8Fp5qUPtv9Hu
nrF3A8dm0/0d8Qd919rsLX7ve9/bvPCFLyxp4jPkSS7kw35pzzPPPHPwzuKL
L172UI5CzJkCyuHvmD91+R26UNdJWxuzyJ/uGVPoU21Lg+PVPki2XDr4P9hn
Rea1ztNRvF0eykTewQfovHFkGOi89Ov91eZPvgu9lFbwg1HwHNl1+Y21pzob
R4yF0e++9rWvlXE25irmX+rX5a8MeHejjTYa+FLlJ4/gVeZA/nYvbcC4F/Vp
t6c+gleHv+mb3/xmyZ8eei9kyWcVfcHcWl9jF/Q1vsjXvOY15Tf6wU7FOOrM
k1H1Oe+88wrPrOVV6370O+UCOk+P7dPS1/VRdqUt83ExFTFnCagbmxDfmYvj
EdGe6klf8UI67FP3Y7+TZXAkvknzAnM3Zed/o49diHlrbUukXdtn/8f7o99F
uwNbYP5dv0+PtbO8yQrPiXLT93r+xE4tv/zyz9oz2pYRHVIn83zlUJ66jGET
61gqaXiHPGq7HDxSW9d2FXD3WkfpG302Luor8sSPQV477rjjoA91+ZvbwH8j
jlpa2jX2RoTNCX3ji1lsscVKXwU8UP8LyNd8d1xMRbs9w87zJQPdeNGLXlTa
BcxZvBNtZs5p7Kd/8b7fwy+AQ1jHtS9uFLrsN1mzXQHyx43DxpizeIee0HW+
DHOVANvAriU3TvSF/kdf2BLAcY2z4XvS//A9fYb+4cXRR6PvxJgDfjPfi3kz
faTH3vXBEeThOd97rl5fYhNrH0ndV/Xt8I3VH+ni8/ps7cvsw439RgZsnP28
+luMNVG/+v0Yk4HNJI92erGmyQa3y4rz6vNtbqwO5Ewm9fPmCQF1wb26wEYY
gyflxsN4pHEKD9QOU+XG8tX+9ZqgNJTJfkD+9tre4Tj8IeP80bPBjem7Omuf
0Ceyr+VPv9rxyTFOBYIb18/RkVgv4V/ClY03nhm3F5COtMdlfhNlYf9hJrhx
8LSaT/AXGteM0/wv5MK/zx8z6l75URypzrPNaTxv/GUT6va05kRmfMDBB4B/
ir6ELMOGQdRBmfUNMUAxLqoLnsUW0RVtMgpxjlTIcBg3DtQ80nvaptajtsyH
oS2jmF9HWZRbP4z21M9wk9p+qDObEjan5sagHsHhRmG63Djk0Ea0J9vF9sY4
Qab1Goh/a344TEbyNtc0J/GO+W0fbhztOVVurN7mX8pOv7wT+saHpF2Ugx+n
a02sDX55z9E9aXdx42F1Ui59JdA33ngYN651XTmCG/NreyfajE2P8Tjer8ca
slK2ceNGX25c85SaG4cNa4+VGW+cmAT8kMYJuufDL2HdNeZ65mAXXHBB8U+w
XXUsbfSdNj9kI/iDpWGeaH0o5pY+/GfSpd91X6wxjBsPG//Z7KlwY+DntU6E
c+D5kYc1ojY3DhjDrUu3617nzV4NQxc3rseVLnRxY2OLdUHn7fCtzRQ3ti4Z
dZ8qN7a+9tKXvrS0dyC4Md+GPXp1feiM78aNHbPBjWvbOgwzwY3pvfKpg37H
by4mYBi6uLF1+W222Wage7PFjekof6e/lb3uw6PiJafCjaVHT+kF3avb07/i
AMQHmb+IefQ8P7J1mZAlnYxzr9kd/KAuc3AL+sUXLD3cWlnHrXHr79aO+S0n
4cb0SvlmgxtD+Aog+nu7zmFvh3HjPnutpsuNtdMoe9jmPm305cagLdl09tD6
wPzgxvTNXLVL38xhjIXSMMcTIzFqnQLEyFlPUwd9sC83pv/6SK1bs8WNu2xT
jbnixrH2FRw9kNw4MQlG8c0AfwRfMN0TsxoYxo3prfm6vs1mxBpLQJykeb3n
xLDW+wiMd9bbh3FjZajjSPmK9Dk221q92PtAH26sn4rRjfVV+YU8xAibD7Tj
+dgXto39VP76zMhnnnmm/C7Gi72yBl3XDf8e5jdW1np9nYyscwba3FgcBjsY
9mEqMRX8f9Z/nY9bw1xB2dj1qXJj77T5vjUDdsu6c5SVf9L6nHHD7+LQR51R
PxvcmI7jSnfeeec8z9xwww2DdfqZ4Mb0I3gl+eJm9G/YfQziGdo6jxuTv3UO
mE1uvNdee5V4q/bZ++NiKibhxnTMHIrfCdrtGXUXt0LfncGlnehIlIssI+bF
d+b3/Fq1HuHE6qQfxvm+yimmAPceBn1Z/Hr4BabCjadyNsg4btxuz+jv9ToN
fVNvfWouubH5n5je9ppQcHaxu8aYes5F3uIPlL0vNxabgQ9b358kpmK63Ji+
Ge/IOxAxGnQt4oGsuRgT65jdNpSbPGLOPCymoqtOYhnF99YymS1urM+0bVPs
S/XdXHFjcyMytsZVI7lxYhLoL+xHDVwv1hnZJevM1ryMS+awwSOHceMDDzyw
9DFxmXiQNbuIr6Lv9nXYk2Ctye/2qEhLvvoFP3UXN6br9P/www8vdsPYYL1V
XzRfFmuvfHHXRx9u7HexYPqy9+qzsNhm/ZGMcDdjLu7KB+BZsc3GVT6KuOfK
uGRfkfKIsxUngWMrq9hRfjHptLmx+YHn8SR8zPP2FkVZcJE2N46xks9YO9l7
UdtMdtJaHo5g/ZmNbtsr+eL32iyg3dTLXQPRZlPhxmLe6rFSXLnv7Eup+YSY
Fu2G88T5EKPOqJ8Nbhx7N3A0HIy+Whut70iZCW6Mp9g7GYjY4WE6iv/6vZ5j
aW9yjD3hs8WN8RZ+K5ymPvdUnKu1oGGYlBvLO9bTod2e559//sDmmMOJMY79
eDVXi9hs+eLI2jNiw7WnvsfuiN8I3qEvKu8o/1d7TJ2EG4sRU17rIfUe1Nng
xtHf7RGJ/cn6N30z95oJbsxWg/aYhBvHWgd7+KUvfanYW/2MP9keZ/G6+AzO
o6zKz7cfd2v05cZRhogFm1/cmL7xB8d5J8ZPdpe+0bWIpdf/7QsdpW/kVvO+
SbgxGM+s88b75hu49kxzY/UK2bGfPmKJtWW8PxfcWF/Xfsby4AJ0iu8suXGi
L8IXW/vLjL3iooC9jb1lET/KZhk3o+8YgwLGa/PWiEfEI+mkPmecZ7fNr82j
9VN2QprsJv+UfmP8i/0zfAnsMVvJ3tB5/j37hPUN42H4GuyFYCPCDugb6sZu
DYP07IE96aSTSn76n3T1e2VUfjwRF7FXThnZdjDusoc4ufLzV5hLx95le4+k
h1tIU15xxi//Oz7gPZAX+crL954XK2E91PpaxEuoV/gx2Ro20Hkc9pJ4niw9
Q4ZsBNkbj6wFe14dpcMfiJPioHzt2uz0008v3M77uE/ENrB33tF2uATdwOPt
vR91VxF/G7mpF54tfkcbqVPwCXnhLBdddFEpO55ex5S2QQ+UlXysGeAe9vio
Z+z1koe065i7LtATdTKGkb85Cdkrg/GFzkZbxjoAfQ2fqXahW/Lyu7+lxYck
b8+Rj/5BDuTG3tfnQJALvRrG4+k8+Yi9oOvax/O4ivkQjmEOJRbKHLTt964R
cxPPaXvlhWHcGJwRzmeqn9MPcbvie+PdLpjfqWPE/wZHijrTzTY3Jlt8V/3o
lX4TcwjzcjbH3I59Mb7Z18P+6OORrjPStE+s20hD+7A76hO8ztgbukx+5oX2
qw0DLsDemJ9IQ9m1QZyFpn1qrqJN9ePg7c6LsVeK7MN/53l6VsdIt8Fe2LdJ
p5R1GDeOeGH9XR/Dj8WIy0f94+wrdWVv6JL/y1s99J9xkCdbQw7SZeuUhX0m
B/qk3dk6d87RD+XyTNyDGfEoyixP9edHYL89r9/qx/qL8mv/4JpxFkv7jJS2
jLSzMsT9QHGuT5ynrg31T/Y+oEx0gEyCG5NT+EPj/C95xH16Yu/UI+6flD7Z
qFfcXxh7itk69hb0Z+nX+1Db0F9in47+QMZhR/UB43Gtb1Gn4MbsubVAczJ5
GaOkx7bV675t2G+q34Ys9Tl2PvRDGyuHtGI81rb+JmMfZQ/7iEfU3JisyGxS
bkxP2fs2N2bzYg95cGP+Nn0yxtLgAnSK70UbdZ3Fkki0Qd8jDsrYRLfN0Yw7
OIpxoT5327P0FG8KbhzjHP30bvs8Rn2Wz9mzbd5jLqxvy7ftk4v1yHZ6OJ7n
23yCXWNLYh+K5/w97s57z3oO11An5ahjXo0LnlHOrr1Tcfdb1x4yZeR3b59d
3t5L2P6t/d0wxHlvga69en3v/lD+dt1nAsYpZazPWqjbHfzWjslsg81Vl5Db
dMsqLTyrnYa06/Zq5xsxNtq23jMZelI/p+7xN/nSxfoZv9fnuI6re1uPQvfq
z6iYafXVX41/+oexzTviGcihTi/gOXyZLVDPUf0pzseOj/lA/F9e9DravZYl
26Ov099YMwq9Nd519Zda/l39M+7TatuwsB/xiboPA/vDroVPVH+OWHxrVnVa
vov/0/lYD6ifA2Ud1+7KTw5R9jofILv4u74bTr8gSxy4jgdr6wl9rPVwHCK/
2E9cn605CSLPrvlg9KEa5N+ue6AtoxiTou50x+/SaLd7u3+22zPOQGCbjG/4
OcQ+wXZ5wrder4HUdYpPnzEJ5zfOSjN85t5r9/e6TrUtqfuGcU15xu37lXbI
ahJ0jcfG+baM6r+H+T+U0xoLG2V+REfDZr3v/7fLtTxj3O5qj3iOHVH3ceNL
ItEG/TKv0hfNh/lmzNXopd/4UM2h2V9/+/An1TEVfvf9KD9IIpGYeww76ySR
SCQSicT/wdpVnA3YF8PijROJRCKRSCQSiUUNyY0TiUQikUgkEon/D2J/7DEQ
D1TfMZtIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIJBKJRGLBRtylOz/h/sA+d68uzLjyyivnugiJRCKRSCQSMwp3x7hfJ+5z
mi7cseNOG5/ZvnPAvTxxH+v8RtxxvyjevRN1dydUIpFIJBKJxMIAvtbXv/71
ze6779688pWvLHeO1veNTgXf+MY3yp3m0v7c5z7X7L333jNU2v/DvffeO8/5
ce7znAtu/P3vf3+Rvm/MOX7JjROJRCKRSCwsuPnmm5sLL7yw+etf/9r8+te/
LneQ88FOByeeeGKz+OKLz1AJu7HtttvOc3f9XHHjRR3JjROJRCKRSCxMuOOO
O4qv2H0egCP/5je/mVaab3jDGzp56k9/+tPmYx/7WIk/4E9uw29iMcSv/vjH
Px6a/sEHH9yssMIKzWGHHTYod82Nf/CDH5Q83IfdBp/2JPEPf/nLX5obbrih
vNP1XtQJ7r///sFzvvMbxHdRp1/84hdlPoJTbrrppqVM8OSTT5a6++7UU09t
ttpqq/LMrrvuOrac1113XXnWGsDLX/7y8v8ttthikOett95ayqAutYzqOvHF
+/uyyy4r5V9llVVKOeBrX/taSXfPPfecR67BjaNO3u+KP/ad3y655JLmiSee
GHz/yCOPNGeffXZ53zNkQObqE+WTrt8TiUQikUgkZht4zgknnNAsscQSzWtf
+9rme9/7XvP0008PfsdVvv3tb5fPXXfdVXy1P//5zzvT+tOf/tS85z3vaVZf
ffXCU/EmaUvjxhtvLBzvoYcear7+9a83O+ywQ3PIIYc0jz/+ePlum222aRZb
bLHy7uabbd4cd9xxnXngm7j3iiuu2LzjHe8onA2CG9sXJ1/pbLTRRs1jjz1W
fvevPE877bTyLD530003jZSNch9wwAHNPvvsU+p/+OGHlzzWW2+95qyzzmo+
8pGPlP8HJ+d3f93rXlf+xvED3pU3uZGRMl5wwQXlN/ErG264YZG79yNu+m1v
e1sp55FHHln+vvvuu4eWk/ziuZ122qm8d+ihhzYrrbRS85nPfKY8Q86bbLJJ
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
IpFIJBKJRCKRSCQSiUQikUgkEonETOL/ARdWYK4=
    "], {{0, 447.}, {711., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{711., 447.},
  PlotRange->{{0, 711.}, {0, 447.}}]], "Text",
 CellChangeTimes->{
  3.936931570958449*^9},ExpressionUUID->"b2754362-59ba-4c62-b03d-\
67da63842c9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"M_", ",", "m_"}], "]"}], ":=", " ", 
  RowBox[{"g", " ", 
   FractionBox[
    RowBox[{"M", "-", "m"}], 
    RowBox[{"M", "+", "m"}]]}]}]], "Input",
 CellChangeTimes->{{3.936929368897522*^9, 3.936929394728301*^9}, {
   3.9369762896989813`*^9, 3.936976313721542*^9}, {3.9369763544328213`*^9, 
   3.936976373848247*^9}, 3.937451992710505*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"9c82c4ce-cc0e-4f1f-90e4-ac3d9e34f672"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AroundReplace", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M", ",", "m"}], "]"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "->", 
       RowBox[{"Around", "[", 
        RowBox[{"50", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"M", "->", 
       RowBox[{"Around", "[", 
        RowBox[{"100", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"g", "->", "9.80"}]}], "\[IndentingNewLine]", "}"}]}], " ", 
   "]"}], "//", "ScientificForm"}]], "Input",
 CellChangeTimes->{{3.936929429819085*^9, 3.936929560050548*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b45441fe-aa0b-4996-95eb-ff20ded43aa9"],

Cell["\<\
You should try the above procedure. The below method may cause issues for \
terms m^2 etc. Find an example to test this...\
\>", "Text",
 CellChangeTimes->{{3.937452092748665*^9, 
  3.937452135555429*^9}},ExpressionUUID->"919d2d16-c100-4d1c-956c-\
e812c9bd480c"],

Cell[BoxData[{
 RowBox[{"m", "=", 
  RowBox[{"Around", "[", 
   RowBox[{"50", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"M", "=", 
  RowBox[{"Around", "[", 
   RowBox[{"100", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g", "=", "9.80"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"M", ",", "m"}], "]"}]}], "Input",
 CellChangeTimes->{{3.936929617324708*^9, 3.9369296534706583`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b46320e6-88c8-49a7-af9f-f875448c6018"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "function"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"9.80", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], " ", "\n", 
   RowBox[{"(*", 
    RowBox[{"Parameters", " ", "with", " ", "uncertainty"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mMean", "=", "50"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"mUncertainty", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"MMean", "=", "100"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"MUncertainty", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "100", " ", "random", " ", "samples", " ", "from", " ", 
     "normal", " ", "distributions", " ", "for", " ", "m", " ", "and", " ", 
     "M"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"randomSamples", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"MMean", ",", "MUncertainty"}], "]"}], "]"}], ",", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"mMean", ",", "mUncertainty"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", "100", "}"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Compute", " ", "the", " ", "function", " ", "for", " ", "each", " ", 
     "random", " ", "pair"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"functionValues", "=", 
     RowBox[{"f", "@@@", "randomSamples"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "a", " ", "histogram", " ", "of", " ", "the", " ", 
     "function", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Histogram", "[", 
    RowBox[{"functionValues", ",", "20", ",", "\"\<PDF\>\"", ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369768254650297`*^9, 3.936976845923718*^9}, {
   3.937001266900155*^9, 3.937001269389101*^9}, 3.937452002294737*^9, 
   3.937452159614234*^9, {3.93765257961648*^9, 3.937652595436758*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"2580178e-67dd-4a24-8b0e-de936b7594fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "function", " ", "f", " ", "with", " ", 
    "Around", " ", "for", " ", "uncertainties"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "Around", " ", "to", " ", "include", " ", "uncertainties", 
     " ", "in", " ", "M", " ", "and", " ", "m"}], "*)"}], "\n", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"100", ",", "1"}], "]"}], ",", 
     RowBox[{"Around", "[", 
      RowBox[{"50", ",", "1"}], "]"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369300824999647`*^9, 3.936930082505028*^9}, 
   3.9374522020707827`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"5fc18c0b-922b-4154-a2e8-cfb0f359670a"],

Cell[BoxData[
 RowBox[{"g", "=", "9.80"}]], "Input",
 CellChangeTimes->{{3.937652699948676*^9, 3.937652706067234*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"6ceee677-a5a4-4841-908c-4f22fca45046"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "function", " ", 
    RowBox[{"f", "[", 
     RowBox[{"M", ",", "m"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", " ", 
    RowBox[{"g", " ", 
     FractionBox[
      RowBox[{"M", "-", "m"}], 
      RowBox[{"M", "+", "m"}]]}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "the", " ", "number", " ", "of", " ", "iterations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterations", "=", "100"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "100", " ", "random", " ", "values", " ", "for", " ", 
     "M", " ", "and", " ", "m", " ", "within", " ", "their", " ", 
     "uncertainty", " ", "ranges"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomM", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"99", ",", "101"}], "}"}], ",", "iterations"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"randomm", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"49", ",", "51"}], "}"}], ",", "iterations"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", 
     RowBox[{"f", "[", 
      RowBox[{"M", ",", "m"}], "]"}], " ", "for", " ", "each", " ", "random", 
     " ", "pair", " ", "of", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"randomM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"randomm", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "iterations"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "mean", " ", "and", " ", "standard", " ", 
     "deviation", " ", "of", " ", "the", " ", "results"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meanValue", "=", 
     RowBox[{"Mean", "[", "results", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"stdDev", "=", 
     RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
     "results"}], "*)"}], 
   RowBox[{"histogram", "=", 
    RowBox[{"Histogram", "[", 
     RowBox[{"results", ",", "50", ",", "\"\<PDF\>\"", ",", 
      RowBox[{"PlotLabel", "->", "\"\<Distribution of f(M,m) Values\>\""}], 
      ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<f(M,m)\>\"", ",", "\"\<Probability\>\""}], "}"}]}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Display", " ", "the", " ", "mean"}], ",", 
     RowBox[{"standard", " ", "deviation"}], ",", 
     RowBox[{"and", " ", "the", " ", "histogram"}]}], "*)"}], "\n", 
   RowBox[{"{", 
    RowBox[{"meanValue", ",", "stdDev", ",", "histogram"}], "}"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369302088388357`*^9, 3.9369302088419657`*^9}, {
  3.9369310022380657`*^9, 3.936931003319489*^9}, {3.936931042595769*^9, 
  3.93693109702387*^9}, {3.936976456170456*^9, 3.936976462707294*^9}, {
  3.937452249606625*^9, 3.937452255406474*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"5d7471ee-a11c-4361-9ab6-763be5182e2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "function", " ", 
    RowBox[{"f", "[", 
     RowBox[{"M", ",", "m"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "the", " ", "number", " ", "of", " ", "iterations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterations", "=", "500"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "100", " ", "random", " ", "values", " ", "for", " ", 
     "M", " ", "and", " ", "m", " ", "within", " ", "their", " ", 
     "uncertainty", " ", "ranges"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomM", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"99", ",", "101"}], "}"}], ",", "iterations"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"randomm", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"49", ",", "51"}], "}"}], ",", "iterations"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", 
     RowBox[{"f", "[", 
      RowBox[{"M", ",", "m"}], "]"}], " ", "for", " ", "each", " ", "random", 
     " ", "pair", " ", "of", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"randomM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"randomm", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "iterations"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal", 
     " ", 
     RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"FindDistributionParameters", "[", 
      RowBox[{"results", ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
     "Gaussian", " ", "fit", " ", "overlay"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"histogram", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Histogram", "[", 
        RowBox[{"results", ",", "10", ",", "\"\<PDF\>\"", ",", 
         RowBox[{"PlotLabel", "->", "\"\<Gaussian Fit to f(M,m) Values\>\""}],
          ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<f(M,m)\>\"", ",", "\"\<Probability\>\""}], "}"}]}]}], 
        "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{
             RowBox[{"fit", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"fit", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", "results", "]"}], ",", 
           RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Display", " ", "the", " ", "fitted", " ", "parameters", " ", "and", " ", 
     "the", " ", "histogram"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"fit", ",", "histogram"}], "}"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369311914078283`*^9, 3.936931191411046*^9}, 
   3.937452268510487*^9, {3.9376527718387938`*^9, 3.937652786270576*^9}, {
   3.9376528188282137`*^9, 3.937652839898868*^9}, {3.9376528778041353`*^9, 
   3.937652965271399*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"e3e4c6c4-3489-4120-981b-e2421d9e80bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "function", " ", 
    RowBox[{"f", "[", 
     RowBox[{"M", ",", "m"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "the", " ", "number", " ", "of", " ", "iterations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterations", "=", "100"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "100", " ", "random", " ", "values", " ", "for", " ", 
     "M", " ", "and", " ", "m", " ", "within", " ", "their", " ", 
     "uncertainty", " ", "ranges"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomM", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"99", ",", "101"}], "}"}], ",", "iterations"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"randomm", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"49", ",", "51"}], "}"}], ",", "iterations"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", 
     RowBox[{"f", "[", 
      RowBox[{"M", ",", "m"}], "]"}], " ", "for", " ", "each", " ", "random", 
     " ", "pair", " ", "of", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"randomM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"randomm", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "iterations"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal", 
     " ", 
     RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"FindDistributionParameters", "[", 
      RowBox[{"results", ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
      "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", " ", 
      "publication"}], "-", 
     RowBox[{"quality", " ", "styling"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"histogramPlot", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Histogram", "[", 
        RowBox[{"results", ",", "10", ",", "\"\<PDF\>\"", ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Gaussian Fit to f(M,m) Values\>\"", ",", "Bold", ",", "16"}], 
           "]"}]}], ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<f(M,m)\>\"", ",", "Bold", ",", "14"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], "]"}]}],
            "}"}]}], ",", 
         RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
         RowBox[{"ChartStyle", "->", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{
             RowBox[{"fit", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"fit", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", "results", "]"}], ",", 
           RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"{", 
    RowBox[{"fit", ",", "histogram"}], "}"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", " ", 
     "file"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<GaussianFit_Histogram.pdf\>\"", ",", "histogramPlot", ",", 
     "\"\<PDF\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.936931508458806*^9, 3.9369315294186277`*^9}, {
  3.9369737033951693`*^9, 3.936973707786333*^9}, {3.937452321270343*^9, 
  3.9374523269097433`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"b19efd39-8eb6-4da5-b432-a3ef2a846990"],

Cell["In general this can be written like the follwoing.", "Text",
 CellChangeTimes->{{3.9374523935468283`*^9, 
  3.9374524482103863`*^9}},ExpressionUUID->"edf0d7ad-95da-45bb-9bad-\
5259f06d4f33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "a", " ", "general", " ", "Monte", " ", "Carlo", " ", 
    "function", " ", "with", " ", "uncertainty", " ", "propagation"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"MonteCarloUncertaintyPropagation", "[", 
     RowBox[{"f_", ",", "params_List", ",", 
      RowBox[{"iterations_", ":", "100"}], ",", 
      RowBox[{"outputFileName_", ":", "\"\<HistogramFit.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "randomParams", ",", "results", ",", "fit", ",", "histogramPlot"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Generate", " ", "random", " ", "values", " ", "for", " ", "each", " ",
         "parameter", " ", "based", " ", "on", " ", "their", " ", 
        "uncertainty", " ", "ranges"}], "*)"}], 
      RowBox[{
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            "iterations"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"param", ",", "params"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "function", " ", "for", " ", "each", 
         " ", "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f", "@@", 
           RowBox[{"(", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal",
          " ", 
         RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
          "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", 
          " ", "publication"}], "-", 
         RowBox[{"quality", " ", "styling"}]}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{"results", ",", "10", ",", "\"\<PDF\>\"", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Gaussian Fit to Function Values\>\"", ",", "Bold", ",", 
               "16"}], "]"}]}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Function Value\>\"", ",", "Bold", ",", "14"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], 
                "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "results", "]"}], ",", 
              RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"outputFileName", ",", "histogramPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "fitted", " ", "parameters", " ", "and", 
         " ", "the", " ", "plot", " ", "object"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "histogramPlot"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Example", " ", "usage"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "your", " ", "specific", " ", "function"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "parameters", " ", "with", " ", 
     "uncertainties", " ", "as", " ", 
     RowBox[{"{", 
      RowBox[{"value", ",", "uncertainty"}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"100", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"100", "\[PlusMinus]", "1"}]}], ",", 
     RowBox[{"m", "=", 
      RowBox[{"50", "\[PlusMinus]", "1"}]}]}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MonteCarloUncertaintyPropagation", "[", 
    RowBox[{
    "f", ",", "params", ",", "100", ",", "\"\<GeneralHistogramFit.pdf\>\""}], 
    "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369318097923098`*^9, 3.93693180979702*^9}, {
  3.9374523567020063`*^9, 3.937452378761804*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"8c2f56b0-a262-4507-821b-b7ff97f555bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generic Function", "Section",
 CellChangeTimes->{{3.936932060282908*^9, 
  3.936932065780878*^9}},ExpressionUUID->"d0882d2e-74d6-4dfc-800c-\
6841f5c7c248"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "a", " ", "general", " ", "Monte", " ", "Carlo", " ", 
    "function", " ", "with", " ", "uncertainty", " ", "propagation"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"MonteCarloUncertaintyPropagation", "[", 
     RowBox[{"f_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "100"}], ",", 
      RowBox[{"outputFileName_", ":", "\"\<HistogramFit.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramRanges", ",", "randomParams", ",", "results", 
        ",", "fit", ",", "histogramPlot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Extract", " ", "parameter", " ", "names", " ", "and", " ", "their", 
        " ", "uncertainty", " ", "ranges"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"paramRanges", "=", 
        RowBox[{"Values", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "values", " ", "for", " ", "each", 
         " ", "parameter", " ", "based", " ", "on", " ", "their", " ", 
         "uncertainty", " ", "ranges"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            "iterations"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"param", ",", "paramRanges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "function", " ", "for", " ", "each", 
         " ", "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f", "@@", 
           RowBox[{"(", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal",
          " ", 
         RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
          "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", 
          " ", "publication"}], "-", 
         RowBox[{"quality", " ", "styling"}]}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{"results", ",", "10", ",", "\"\<PDF\>\"", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Gaussian Fit to Function Values\>\"", ",", "Bold", ",", 
               "16"}], "]"}]}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Function Value\>\"", ",", "Bold", ",", "14"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], 
                "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "results", "]"}], ",", 
              RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"outputFileName", ",", "histogramPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "fitted", " ", "parameters", " ", "and", 
         " ", "the", " ", "plot", " ", "object"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{"fit", ",", "histogramPlot"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Example", " ", "usage"}], "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "your", " ", "specific", " ", "function"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Define", " ", "the", " ", "parameters", " ", "with", " ", "names"}], 
     ",", "values", ",", 
     RowBox[{
     "and", " ", "uncertainties", " ", "using", " ", "an", " ", 
      "Association"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<M\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"100", ",", "1"}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"M", "=", 
         RowBox[{"100", "\[PlusMinus]", "1"}]}], "*)"}], 
       RowBox[{"\"\<m\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"50", ",", "1"}], "}"}]}]}], "   ", 
      RowBox[{"(*", 
       RowBox[{"m", "=", 
        RowBox[{"50", "\[PlusMinus]", "1"}]}], "*)"}], "|>"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MonteCarloUncertaintyPropagation", "[", 
    RowBox[{
    "f", ",", "params", ",", "100", ",", "\"\<GeneralHistogramFit.pdf\>\""}], 
    "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369320687033653`*^9, 3.9369320687064857`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"3c2bf1d4-d161-491d-83f8-4118f4cd47ca"],

Cell["THIS IS FINAL FORM: USE THIS ONE:", "Text",
 CellChangeTimes->{{3.936934207653944*^9, 
  3.936934218442257*^9}},ExpressionUUID->"1cefcfb4-2f4a-430a-b02e-\
968191d808f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Define", " ", "a", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function", " ", "with", " ", "user"}], "-", 
    RowBox[{
    "defined", " ", "iterations", " ", "and", " ", "bin", " ", "size"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"MonteCarloUncertaintyPropagation", "[", 
     RowBox[{"f_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "100"}], ",", 
      RowBox[{"binSize_", ":", "10"}], ",", 
      RowBox[{"outputFileName_", ":", "\"\<HistogramFit.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramRanges", ",", "randomParams", ",", "results", 
        ",", "fit", ",", "histogramPlot"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Extract", " ", "parameter", " ", "names", " ", "and", " ", "their", 
        " ", "uncertainty", " ", "ranges"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"paramRanges", "=", 
        RowBox[{"Values", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "values", " ", "for", " ", "each", 
         " ", "parameter", " ", "based", " ", "on", " ", "their", " ", 
         "uncertainty", " ", "ranges"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            "iterations"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"param", ",", "paramRanges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "function", " ", "for", " ", "each", 
         " ", "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f", "@@", 
           RowBox[{"(", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal",
          " ", 
         RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
          "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", 
          " ", "publication"}], "-", 
         RowBox[{"quality", " ", "styling"}]}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{"results", ",", "binSize", ",", "\"\<PDF\>\"", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Gaussian Fit to Function Values\>\"", ",", "Bold", ",", 
               "16"}], "]"}]}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Function Value\>\"", ",", "Bold", ",", "14"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], 
                "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "results", "]"}], ",", 
              RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"outputFileName", ",", "histogramPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "fitted", " ", "parameters", " ", "and", 
         " ", "the", " ", "plot", " ", "object"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{"fit", ",", "histogramPlot"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Example", " ", "usage"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", "=", "9.80"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "your", " ", "specific", " ", "function"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Define", " ", "the", " ", "parameters", " ", "with", " ", "names"}], 
     ",", "values", ",", 
     RowBox[{
     "and", " ", "uncertainties", " ", "using", " ", "an", " ", 
      "Association"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<M\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"100", ",", "1"}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"M", "=", 
         RowBox[{"100", "\[PlusMinus]", "1"}]}], "*)"}], 
       RowBox[{"\"\<m\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"50", ",", "1"}], "}"}]}]}], "   ", 
      RowBox[{"(*", 
       RowBox[{"m", "=", 
        RowBox[{"50", "\[PlusMinus]", "1"}]}], "*)"}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function", " ", "with", " ", "optional", " ", "iterations", " ", "and", 
     " ", "bin", " ", "size"}], "*)"}], "\n", 
   RowBox[{"MonteCarloUncertaintyPropagation", "[", 
    RowBox[{
    "f", ",", "params", ",", "500", ",", "20", ",", 
     "\"\<CustomHistogramFit.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.936932375075263*^9, 3.9369323750795937`*^9}, {
  3.936948492483349*^9, 3.936948495629878*^9}, {3.9374526033480577`*^9, 
  3.937452617954042*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"05fd9704-2e59-4b87-9e2a-0d83e5c54ce8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Makale Analiz", "Section",
 CellChangeTimes->{{3.936948810717433*^9, 
  3.9369488139006653`*^9}},ExpressionUUID->"f49f1549-671d-4e59-9491-\
d17c5ec0b66c"],

Cell[CellGroupData[{

Cell["Referans", "Subsection",
 CellChangeTimes->{{3.937458705372834*^9, 
  3.937458706964592*^9}},ExpressionUUID->"5eaa0d07-0dc2-4e05-81cb-\
065238d5cbee"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvfnPFdWW/3/7MsgQ9SuBKESIDEECSEANoIZJiIhAEBEFlYDMIIOACAiI
gMggMyogihOIOICAKLMDOF6vw1Wvtre7r/1TJ91/xP72a3fe9dlPUVWnznnO
MwCL5M1Tp4Y9rr3ea629a1fr8bPvmfznP/3pT/Ma/O9/9zy8oN/cuQ8vGvH/
/e+PkbPmTZsya9LEQbMemzRl0tye4+v878mN//KnP/34v6j7J//PGQwGg8Fg
MBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgM
BoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGw6WKf/mXf3F/
/vOfPZLO13T5SgVlpw6XWhnC/qyp/qMMQtL5+Lnwb9K1eL3K0aZhGdPKGb9e
qIzlLkfe59NkL62t1Jblks1COqSQLBZTxkJpVkZGkvLMkru0eoflyGqTtHwq
0wflagtD/nZPOh/2Ralj+2JDTXLShY7Ktlt1yF9t6du85ciycZN0adq1ctgA
edPLa4NklT/r+WLKUtn+L6Ydi71WbFmy2qDUNA352522HT16tLvnnnsqXG/b
tq3r2LFjjZez1Hrde++97qabbqpwrrrL0KdPH9e8efNqKUPYn2PGjHHLly93
Y8eOrfb2J/+rrrrKtWzZ0jVr1qzCtQYNGrhGjRpFv+vXr+8aN27sj7k3bq81
bdo0Gvv87d27t7vzzjtdu3btKt1WKiP9E++byy+/3F177bWuVatWrnXr1v43
53lG5dEz1Id6lVqWhg0buhYtWnjE084DykY7xuWAcg8dOtRdffXV0Xldo153
3XVX1D+VlU3KPXDgQHfbbbdVOH/ZZZe5Xr16+bzQJ2kyiwzUqVOnwjnKSPn5
G56vV6+eu+WWW3ya1DGe1o033uivSc7y1E3tfsUVV7ipU6e67t27R89ed911
XuaoR7x/KPfgwYNd586dK5znvi5duvhy6JqAvNFWd9xxR4WxcM0117hHHnnE
derUqaQ+oX3bt29f4Rx5PPzww5F8GI+WD+qfDh06uA8++MC98MILXt9zjnHV
tWtXN2PGDLdo0SLPo8hRoX4Nx6jiB+H9YUwhKYYRL1v8mbxypWeWLl3qhg8f
fp7spOWVlR4YNWqUGzZsmD/WeE+rm/J47733ojLwTFq948+H1/LGAVTOTZs2
ud27d7tx48a5CRMmnFeueB/E84rnG5Ynqyw6j444efKkL8Mbb7zhjhw54rmP
a/PmzXObN2+OnhkyZIh7/fXX/fH27dvdihUromvYAbt27fL5otv279/vduzY
4Z5++mm3Zs2aSC8Uo2t0L+kdP37cvfbaa+7VV191x44di+QfvPPOOx7PPfec
27Nnj3vggQf8eeo0fvz4qL3p07ffftvdfPPN58lWnv7i77p163z+jMFDhw75
emelpT5A/z766KPur3/9q7v99tv9tbp16/q/lPHEiRO+rWn/AQMGRM8jj9RN
+cINxZY9LAd2xbvvvuuef/55357kqbTgo5deesn3K+WZOXNmBVnluF+/fu7b
b791bdq0idLGnj958v/Kf/jwYc+lnMdW2bhxo1u/fr1btWqV+/TTT939998f
Pce5AwcOuK1bt/q/cGyWvx7We8SIEV4mVq5c6a6//np/Dt/ilVdecU899ZSX
g7179/oykCZcTZ22bNni86IvlOaSJUt8f/Ic9zz55JP+PPYS91N+QH7dunXz
16688ko3e/ZsX9/Fixfn7hNsJPgafT137lzP2bI7kMsNGza4jz76yN16661F
jxdDtvyjR5BT5CQ8j22O7ti3b5976623vB7Dnyski4XyK3RPnJdCSDeUE1n5
hVCdV69e7RYuXFhUfdEp2KlxuyAp/cr2J3/Rqx9++GFJaRRrW6SVAfk5c+aM
94/wGSZOnOh/c33+/PnuxRdfjHQoegv9y3OMfXQp9jh9c/r0adezZ09/bfr0
6Z7ripWptDKi95F9bENka9KkSZ5rdB2dg25Xu4ScgB5VevhD2KClyKfSpD3m
zJnjj9F5Z8+e9fo5TTZCeYSbGKeKIYnTPvnkk8iXWrZsmW9L1Q19r7ohz/BN
KXKo++EHeJJj+OXvf/97xNn4oWFbUbfQboQ33n//fffdd99FvAXP0Deyaej7
c+fO+TYGigmAhx56yNsDaruPP/448u3efPNNr8ey6qbz+M/koXYXyCuUM9pV
XIRuVL9hI/7222+Rr0Ef6BnS5DlsPvILZQUehVPjY/jo0aMV7I00WQb4n/C1
9PXOnTv9WArLjQ767LPPfPkqo8cNFYHsYztyTL/Kz6Cv0Snos++//9498cQT
vl+z5jLom8mTJ3sd8/LLL/t4BH06cuTI6F7sX+x4xht9rhgnOpNxjL2HfsLf
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
cJ1Vml/FX/xX2oP3XzVmKafmkjSHwrlC7wprHXP47pDuxX8IdSV1jdeNOLj6
Re3Gc3A8cU7KGffzyIs2VNqF+hN5wHYK4xzYRPK/6BdsFwDPx+eQyD/ensoT
nz581ySPnCKj2Hd55FHXKD/2D7FP4pyUU/tFAGQUfkEfh88R20T+4bZwTIV2
mOyLvGVhzo/0iA2Ec+u0KfFNbKf4+A1Be8fXz1I34j5hW6JTmG9FTgH2JvUP
5Zy6wd3hPglZ5QfEMIjny9YQkAfJgWRB6+oBfiTci46SDqUdiaepjNSbv9gV
yB31wg5kXkg+c1hG+pW5Cq0fKQffkR+2amU52XC+7KNDsLWx9bBLL8X2zVvf
PPfl0TfF5ltb6l/bUM5y16Y2qIqyxG2qrHvgCXy5JH8xb3lrS3sWU37sAHxH
4vTYgHnt6spCHIn9g7+KLtbcb6n8qb6Dv4lh4fvaetyqlS98i/h+VcWmFV9X
FpeBMEYS3qNn42t/kq4VK0dJz4Xny5FmWMak+of1Sfodr3d8fjptvjqrjFn9
U0y94v2Y18bKiqUWqltSv2TJSFrbFlvGeL9lyUlWexYrV6XKY1IZ02Qrqy3j
aWJLax+DYuzLQmUoJH/xvPKO37SxWExbhnkTR1JMqJg2zqp3kh6MP0fsjthG
qEfylj+tPsR0wncFjT/Lj2L1s8FgMFyMqE0xuHLr5GLtS0PxMC41GAzgUte3
NVV/6eByz1GYXjcYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8Fg
MBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgM
BoPBYDAYDAaDoXYi7TvExTyX595Sv42kZ4v9TnVNfgsq/k3scpajJutmMBgM
hsqjuvR3PJ8L+ZuCxnkGg8Fw8SD0lW6//XY3evRo16RJkwrXsp5r1KiRu/vu
uz3q1q2bee8VV1zhrrnmmoJpJ+Hyyy93rVq1Ss0jjnr16rmbb77Zo9Q8K9Oe
V111lbv66qv9cb9+/dz999/vrr322rKk3bBhQzdq1Ch3xx13+HpWV90MBsPF
gfCb6Ukxrfi10G8Jz8X9mfgz8TSTzsefCdPMSi+tfEllrEr9qJjj1q1b3d69
e93ixYs9V+la1jNXXnmlO3TokH92xowZrn79+ontL96bNm2a27x5sz+H7i9U
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
PvbLPWkcVL9+fR9f7d27t/8L+vbt63ma61lrbF9//XUf9yWvOXPm+JhsuO8C
a2/hRL4zE+ZH+VkXRV6ffPKJrwvX+A4NfijxXL4jvnXr1lQbQFD58GOxJWbO
nJl5v8FgMBguXcydO9e1bNnSr11l7pNzzI+y//xDDz0UvQsC8PEWLlzoj8u5
TlXxWeZAieeyrhZfskOHDv4673Tyl7gwc5+s4dWzlJO1QtgCvAszcuTIKE3V
D5uA9Fg/Bdfm+SYN3Mx7MSdOnKjxPjIYDAbDhY1iODPpvZZing/X8eR9jhhy
fJ5UgA95x7WY8vN36NChnnfDcwaDwWAwCOK3+F614bXw3qreLzfkwTgXpnFk
vD5pv/Nwua5fe+21PvaLj14oT4PBYDAYagtK4ausZ0r5nji+q2LIBoPBYDAY
iof5nwaDwWAwFA/jT4PBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAw
GAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG
g8FgMBgMBoPBYDAYDAaDofIo5bvW4M9//nMF5E1D+VXn98hUxlLrFq9f/FpV
l7PY9i1nmYrJszLtnFS/Utq32LIk5V1Me5ez7AaDwVCbUBV8UlXcH5ZTx/Hy
F1OX6rJRkvLJk3fWc6XaWOWoc6m2Sngct7eqox8MBkPloHEb6t9wLIf6KbSR
H3roIXfffff54zp16qTa1OHz/O3du7d7+umn3erVq93EiRNdvXr1zvMxlZd+
t2/f3j3//PNu9+7dUZ7VoWP69evnbr311grlz8KwYcPcpEmT3Lhx49zDDz/s
xo4d6zp06BBd79Kli1u5cqWv+4gRI3Knmwa1wV133eVeeeUV98ADD1S4fu+9
97q+ffvmSoOyTZ48ObVM8b5JOh+XpUIy17RpU/fUU0+5Z5991vXq1atge+ha
z549/TPLly93LVu2PO+5wYMH+/rkaV9dv/rqq92CBQt8ulOnTnV169atcE/c
b6TNr7nmmgr1vf32212rVq1y5Rv2je6dNm2ae+mll/wYKbeM2/fkDYaaQ9L4
gweWLVuWeF9WjOvBBx/03HLnnXe6/fv3u/Xr11d4Jkk/N2rUyHPRli1b3Lp1
6867r5z1BM2bN3dr16513333nXvuuedy5/fYY495rt+0aZNvn2+++cY9+uij
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
4cPvwfCXNaTsTc4+abzLx189zx6o7M3CO4esT+TeeP7V0RaUHb3+7bffVvh+
WdozusZ3ryg3e+fw7ix7EahNeAeXPeh4J5J9HtgfrzIxNj3He5i0GenBg5zj
/VvWdcGrcALrgfQ+Z1r8kXdBWNsLN6SVK81/KnZdkWLPvAPFe5nYWrxPTPnT
fEmV6f/2CT7p93HgHVHe3WXNE8+wbpj3ln/66Se/f1KhflOacDLv7PIOKM+z
14i4MB6zDd/f0rvNWnel/fCT8lUayEG8b6iT+o3zrIHWO9XmjxoMtRsa2+F7
dEm2fXzNJ/wpPRV/xzPvnBK6hD0JOMZHQzdq327e2//ll19K3odAz0gH5lmr
qTLzbjvv0vN9SO0jl4dDaRN9+wwu4j15tSXvcErnxtu+WCg/3iVkvzzeDQ3T
JG/KjU7nvU72gOVdyULcyJ5Sad8KCX/rPeKwDuH1rHcydR/7uIffkMW+yPqm
qs5RF+1nRDl+++23aE/4qVOn+vcq2ScBXs7bb7z3oXqn9Y18QwF7L/x+H5yH
/ZS1ljitb7BfwmfYm4l9G9hfyOYyDYbaDfwX9rRDh+HT4DtpHz7Oo5fYo4f9
zXlPW++84wewrxp+JHsRoYPEpTzDXjLs6xLfh4C/2OycR9dJHxJHlE4lD/QT
+8UoJlqd9rj2DBg9enRR3z7jPTx4k30I0OX4nKoP7csxuriy+0ooP/bVmTFj
hj/Wt+VoX2LQ9A/fIGP/dPpYe2UUijXwnTq+bxOeo7zwG/vz0afsDU88WjIy
efJkv1cVNge/8aPSYuBKM/wO6Lhx47z9RJ9n7ffDs+xbpDkA2pf9k7S/lvY6
IB5aaP/aML7Onln4gKEPrOv4iNSZuAJ/5c9jkyCf2o8BWc7KU22f1Tc8J5sL
W0x7gpUq+6FtRJ8lfRPHYDBUDvAiumHUqFH+21XssYMuQ2/ChYqLoTvYI1X7
1xGv5JtnxFuZeyIWxjviXOM9N3QSsVrNS2k8w0+kgf+JDtI3DZkn1J6l7PNO
ebDR9W2pUvQI+o1y4KcRQwPsqVRor1rps1K+fYYe/eOPPzynSFcxt0s7Ex9m
rzz2oFC9Slk/yl90OHwNP4froLnG3q34vOwPjI0Dt2kvqUIcShth/4iTOUdc
E78IP4u9jvmeHN/J4x5kg77k3JdffunnKfGz0vb602/aARuFOCrpEn/Azkja
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
fWjQoIGrX7++P65Xr547e/as6927t/+dpe/hgziqqoz4kXBhWjnSzlE36sRx
o0aN3BdffOE6duyYmZeeveaaa9z7779vnGcwGAyXOEaPHu369u3rdu/e7WOi
06ZNc88+++x5/EBM9/jx465Dhw7+d7l4MfQL77rrLrd8+XI3Y8YM161bN/fG
G2+4Nm3a+Ov33nuv69Onjxs2bJh788033cqVK/352267zb322muuU6dObseO
HW779u2uefPmUfpw7HPPPed27tzpxo4dm1h24tTUrUWLFv73+PHjXZcuXdwD
Dzzg3n33XTdp0qSorKBz587u8OHDZeFQpTF48GC3bdu2yGax+VmDwWCo/YB/
Xn/9dffkk0+606dPu1mzZrkjR45Ec4TM/cGvX375pRszZow/V8gHxb+LQ7HX
OJQW/Hbu3Dk3c+ZMd+rUKc+l5Aufcp3flGHZsmXu7rvvdl999ZU/37VrV/fx
xx+7vXv3uuHDh7t169Z5vuQafuWZM2f8/d27d/e89/DDD0flfPDBB90rr7zi
0xoyZEhUJjiXMtAmPPvNN9/4eVBdJ91ycyi8DY/jH6t8NS0bBoPBYMgGvh4+
Hn4mvMC5559/3vt1HLdr184NGjTIzZkzx88b4p9xPs4f0vnNmjXzviA8Bjh+
9dVXPTeG9wlKZ9y4cZ7LOf7ggw88h48cOdLNnz/fn4M78T/13MSJE/1fOPQv
f/lL5B/zm7lbjlevXu2WLl0aPXPrrbdW4D64EN+XPN57773I56X++IR6bv36
9W7FihXR73JyqMFgMBguXLz44ouuffv2rmfPnn7NEByH/3f99defx3dwEj4a
x2n8gc8Jx8DB/AU33HCD5+ik+5UOnLhgwQL/W1w6depUv4aH42eeecY98sgj
vkyhT0ssV9zKs9QDPuQ3sd0JEya4unXremAPHD161MdL43WD71etWuWPd+3a
5X1a5bNx40a3ZMmS6F5xKHUtN4+a/2kwGAwXDuAO+I650LVr1/pzcIj8uhDE
Njdv3uyPs/xQuAtuDv1QYsThfUIYy3ziiSf8MfFlzsOrjz76qD/H/KeOuQYn
csx85759+6J0idkyh8nxwoUL/Zpi5UVc+p133klsB+pFvJhj1t0OHTrUH8O3
xIqZr9W9cChrgcvZD+Sj+ViDwWAwXBjYs2ePj8/iv8nHfPvtt13Lli3dnXfe
6bmLucJ58+a5Y8eOeZ+10FrbpPdJ0vw1nZ8+fXq0TkjvqjAXumjRIn9uw4YN
nhPD9DlmnRHzt0qPeO1HH33kj6+66ioff4b7p0yZ4k6ePOH69evnr7FeCN+S
uuH/4leKw4jjiveJK8sHVZ7YF19//bVPlzVZlWl/pUms/N///d+jtcEWJzYY
DIbaD/wr9im48sorvQ/HOdbp4hexBwE8wTpd5gzFMeWMNyot4qyaaxXPwdea
l8VP1nHI4U2aNHH9+/eP0oM3BwwYUOE3c7HwL3OlOg8P4neyBgn7gHR0bdOm
TX5OFF4fOHDgeXk2bNjQjRgxwk2ePNnbGeWoPzYL65+0tsk41GAwGC4+XEjz
dVnvhyZBvIUPyjs01VHn0IZgjXDTpk2r/J1ag8FgMJQH2pMn3CdHf+N79VQ1
l6Tlr3NJvll8f5+03/Hnk+qm68y74ouH+yEltVs59p5Xm/LOjeZcjT8NBoPB
YCgexp8Gg8FguJBRE7FU2y/XYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaD
wWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAw
GAwGg8FgMBgMBoPBYDAYDAaDwXChoSa++2UwGAwGw4WEOE/a9ysNBoPBYKgc
rr76anf99ddXOFe/fn2Pmi6bwWAwGAw1jbp167oGDRpEcVv5oMuXL3dHjhxx
kydP9veJN8eNG+dmz55d4ZzBYDAYDJcS4EnQsWNHt23bNn9OHLpr1y63detW
16hRo+h+/NEdO3a49evXu40bN7rt27e722+/PUqrputjMBgMBkN1oV69ep4n
V61a5Xbu3Ol5kfNjxoxxhw4diu6DH+Wbjh492v3tb39zv/76q5szZ473YQut
OdKzIdKuhWmVei2eV9a1sJylXLvQ63ahl/9irlttLv/FXLcLvfwXc93KrRPy
ljEJ8jdvueUWd/bsWfePf/zDPffcc/7cu+++60aMGOGP69SpE6WFH/rSSy95
n/X55593L7/8suvbt29U5qz8DAaDwWC4GCBOxA+FNzdt2uR2797tY7NNmjRx
J0+ecK1atapwL9BaovHjx0c+aBjrTcvniiuu8DFf+Ja/PXr0iK5dc801rn//
/q5Pnz7+b7du3aLnW7du7QYMGOCv8bdDhw7RNeLP4bWWLVtG10gjTLNp06b+
PDyPzRCWReWnXtzfr18/j969e0dzvdwTPkMa2BZca9asWYW8brrppqhutGFY
xk6dOkVlbN++fYVrbdq0ia516dIlSpNrLVq0iMrfvXv3qCzcc9VVV/lr9MVt
t90WXQOqG3PdOkfdevXqFdUtqW9kD5Wrb6677rrUvmHNmupG3ml9Q5nVNzyb
1je33npr1De0TVrf0KYqI9cq2zekq75Rmhdz31C2tL6hTuobzuXpG9ourW9u
uOGGqIxt27ZN7ZvOnTsX3TeUJ61vLrvsskuqb5DTcvYN4yitb6SvSZdxmdY3
ob6mvGl9E+rrxo0bp/ZNXF/n6Zssf5R0KRPtgF/JuebNm7tTp055OUh7njJe
eeWVubka2diyZYufR+Xv4sWLozrRx+S9bt06z+czZ86Mnh82bJh74YUX/DX+
EmPWNdY16TmuDRw4MLrGeid85WeffdbfgwxIppYtW1ahLPQ716jP2rVrvT1B
THvNmjXenuAasrx582b/DH9Jgz7kGv1DucmLPOfOnRvVe9CgQVH5KcfEiROj
MhITD+uG369r06dPr1A3ZES6eMGCBT7+TlnIr2vXrtGYWLlypS8f5QeSU/pU
c9hcf+aZZ9zll1+e2jfYVpXtm/Da0KFDU/sG/aW+Ie+0vlm9enXUNzyb1jcr
VqyI+obxkdY3jK1y9g3yrL5Rfkl9s2HDhrL2DXmVs2/UXoX6hrKl9Y10B33D
ubS+kRzwl7ZL65tp06ZFZbz33ntT+2bSpEm5+oY6qm/glLS+wfZW31C/C7Vv
pBMK9Y34qVx9M2rUqNS+kb6mb+bNm5faN+ha9Q1/0/oGfa2+adeuXWrfoK/V
N9QtrW+4R32TZ38E+gF+5pi8PvzwQ8//SXHmePy4UNoGg8FgMFysSOJB7C04
nGN8nyQeLYY/q3uOupj567Ccl+L8u/WN9c2lULcLvfwXc93KXf5i6laZNUVx
6H7+Eic7ffq0Gz58eFFpGAwGg8FwKUNcSkz62LFjPt7MfHOxvqfBYDAYDJci
5Psyxzxjxgz3wAMP+N/GoQaDwWAwFEY8vmwwGAwGgyE/wjnWmi6LwWAwGAwG
g8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8Fg
MBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMFwM
uJS/T07dL+X6Gwyl4mIaNxdTXcqFtO+GFqsz9Q1Swdq6MC6UNqrpb8uG37iN
f+s2Lmvh73i5w2tKM/xbVWUsVP6kdCrbX0l5FfNsMWlWJr+stkzqm/B8Wl7F
lDGeV5rMlKstQ/0Yr1u8LHmeK1T+JBkrph+KkZFLEWEbNWrUKLHNK9NW5eCI
2tRfderUqfEy1BQaN27smjZtWmv6oljZqgl7pbbYSHnLkWVPp52rLXXMU9Zi
26TU5+Jt2bBhw2odNyoj+RZbbt2r8obH/A3TrC26oKag+o8cOdK9/fbbbvbs
2RXOjxgxwj388MO5+2vIkCHuiSeecAsWLHCPPPKI17fh9UJ2Utx/1e+pU6e6
TZs2JfaZ7uncubPbuHFjdC5u28XlpxhfWc+3adPGHThwwDVp0uQ8mQzrlldW
uY82SuPluO/CubZt27otW7YkyndW3VSHYn0u3bdo0SIvI++884675557KrRz
lv2eVo74s4Vk9MYbb/RlQLbmzJnjOnXqFN2DjDZv3jz6PWrUKNehQwfftjNm
zKjQ/8OGDXO33367P0YXzJ8/3z3//PNu27ZtbsCAAYkylnccde3a1S1cuNCX
8fHHH/e/dU/Lli3dY4895q9TjyVLlkQ2yaRJkyq00TXXXOPGjh1bMjdRr2nT
pvl8aKvbbrvtPHnNQt++fSuUSX9vvfVWt2vXLo/+/fuf1z9bt25127dvj9q3
lPKrry677DK3dOlS98orr7jFixe7+vXr+7z4O3fuXLdjxw6fV1w/qTzdu3d3
DzzwQIVzN998s3/m5ZdfdoMGDYryo73pL8bVzp07vfyEz91///1u9+7dXk6u
v/76XHXT9Xbt2vmyki79zXnGz7p169wLL7zgnnnmmQqy26JFC/fss8/6/OgD
pYV/M2XKFK/jSO/RRx/1bcE1dMKGDRt8etSBuiu9MWPGuPfee8/LUyl9smrV
KnfFFVdEv8mTPGhDdG4p4+VigeoN573//vu+3evWrevPISe0HTK8YsUK99RT
T7l+/fqltpfOvfHGG+6ll15y9957r+/PDz/80F1++eUF9WShfkX24K/4vWGa
6NQjR46U1BbFyBX5xDmvFH9I4+LQoUN+nBWK7wldunRxR48eLYr/S623yoRt
RJ5XXXWV121hvCJv2qWOMz0H11EG9A9y+dlnn7lbbrnFX+O4V69eUbsePHjQ
TZgwwcvzJ5984o+5D/107tw534b8Rue/+OKL/jfPi/OK7U+VERv05MmTbvjw
4Z5HP//8c89HXBs6dKj76quvvL163333udGjR0dt+Ze//CUqE5g5c6Z7/fXX
i243lRu+Ji94FL178uQJb9NmpSd5fPrpp92JEyf8M+jLUO6pz5133un69Onj
2xxO5dp1113ndQh1HThwoDt9+rRv61LHBn+fe+45z3dwM/YNepvzlJG2u+mm
m3yf0d5wHNcYlzyPzv/222+9vas0r732Wt/3tH+PHj3cp59+GtkB/EZG4ATs
qC+++CLqN3j4zJkzrmfPnp5bT5065cdB1jyX2pj2oZ0eeuihaMzQppMnT/bp
06ZwK3ypa+gwbB/qTZvClVxr3bq170/qja6mj9SnyA4yRXrUg7pRX8pHm3Ts
2NHt37/f82whmdK16dOnu1mzZvnykS9yIZ3ToEEDr+OpG/1dmfF9oQMZ+vjj
jyuMFdqoXr163gZCDr///nvPs8hAmtyo/eDPcePGRefRefS5fpMPfS17Pxwz
3bp18/JK39D/nKMcyCEyfuWVVyaONex4bEr8DfwknUOP6F5kvlWrVhWexyZg
TCgukTYedJ7xhdyTTtyv4i9ySvkZo8qrUJqAcdKsWbPE6+gh+Iuyoqc4d8MN
N3jdIHsH+4L2CdOkfSkHOlrnsEFof9qGMa02ztJx6td58+ZFMYoQtDE2EmMK
PYa/E6bXu3dvfx47X+eoB/eji0m/ffv2kYxkyRa+x5o1a6LzcBR2WpKcvfba
a5F/goyj+2mvtWvXev5VXsh++FypUBmRQXS/zuMz4G9yDIdKPuPApsdG0G/4
k3ESpp0Haj/6ljahb/iNboXXaPekdg7ljZgP97/77rsV9AJ+E3a1xtMPP/wQ
xX3o92PHjkX3fvTRR348lFp+/CrKq/yXLVvmfvrppwpyJBCfevLJJ/0x+oK/
+HFwBv6a7oOXxCGMC3Sb5CcObDDsII1PxhLH+LH//OOf3rdLq5t0JG19/Pjx
KGaTBuSC/DhG9+kYEPOBs8N+EKgjvk1SmmfPno180TAGi0zEffO08qPDiAHQ
7tgp2E1x/Y9ewr5AN2fZFBczGKuKF6BjwvYjbrFv3z731ltveW5EftL8SZ3D
npLND/chf+IoxjUxBfQYOg67Rs+jZ+EF9Bs6SPqPvmHcIouMYeWl/OhD7GXG
Mj4w6XOeOq1fvz5Kn/Q2b94cyQhj6dVXX/VloX5ZdqXOoVvIg7LIplQ57r77
bi/7jGV8G+zM8Nmktrrjjjt8u2LLYethc2P76T54jrpRVtoRf4nz2BqHDx/2
x+g8fH3yk82JzU4/8NyePXsiPUr9aSfSof0ZT8SQCtnTcBV1pn/QOcTV5IfD
D5QdH4Hxhv2r8b569WovX/QfZVR8D71GX6IbiGNRb/Rvmi0T8rh0NkB+6D+O
eZ706RdAnyp2BagvZaEd8VGU5vLly32ZsUuy9Eoh6Dnsdull9DQxBsVRBw8e
7PNHz9NG/NVzyKd8JvqE+siuKnYOS2ONPsNeke9A+nG9mgbiIpQ91N3wv/hA
8op+IG10h+KS2Nvi2lL9ebgE/uAYG5L+Y2wTh+ccdiC2EeOFfoVb9Sz6hzGA
bkAOVH/GxIMPPujvgXcpP3WS3lNd8QHIm/5BlvD3sBU5Zjxh74RzRml1gGfJ
n2P5x7qH39wnnkV/cH7lypWRTGNTMVaRGdkjKiMyxfihXNKHxA7vuusuP+6R
6zBOpfEqGcyKYYXlV7vTxvB1OB8kG572IG5SmfFzoQL/Bfmg7cO24Rrzfdjn
xArQofhg8oOyeAG5RP6QBexAxX8B3KKxxf3wAz4Iv5Fvxl9auugYxXIkD3AD
coQ/w2/0IPLBcZxDx48f7/PXmIQ/dE1zC1kyoDqjf9Et4iWVhTGLXsnT7mpn
dCX+M2MInwM7T7qcPsGWJJ7Db8YY8swx5/AR5GsQq1Pa8K7aAMBrxGFUxq+/
/jrqR/SfYmBp9eY8cSL0I+1J7AxbSvcjG/gjmiMiTf6i3+hf3YfuhUc5puzo
WWws4o3oQ/qfWFWSfCkN5vWwObgPPUn7KF9sCjiCeTr0DrFR+XGSjf/4j/9w
EydOjNKUHkBW8UkoUzhHW8xYUhmxZYgdYwuid7C7dA8cT7kon3SSrmEL4Ssj
X5QbWy2rX7Jki7/iUMUa1O7YbYXknGvMJSNH0tnyYdDlxFHhEOxs/BONAWIf
v//+u/vxxx89B5dSft2PTNOXpP3BBx/4GAq/1X/oI34jY7QVtjbPwqXofI6J
zbz55ptR2rIhkE30/tVXX+31h+Jr3IMuCduNv+TBdea06E/8Rsl5FocyZoid
xP2OkNcou3SPxih8hP2EnkFHE9vVnAWgLSgT+iLUQfQLHM+4wN4M5VjH6C36
LGleLF4+9Az1x9dgjoPxGp9H4ze6tZR5h4sBjFtkCFlKa09iKrKB8sg+Oo54
G+smSFs2Ev3MGKQ/sAHRx8gBcs5zxI6QcfQsehnZkXzwPDyAH6U4M9dY7yTb
HV2If6bf4lDJDvIlDsVGY5wQC5GPR5wnSwY0DuAfZBtdF66LQSYZr9gk+Gma
g88Ty8V/DdcUANaeYI+obsSVaDt+I8/Uk/ZlrHBOuo62pZ2pO3Vj/OmeUAdR
bmwH+WpZHMpf+jOM5eo8eoU4m8og/xx/HDlQG9Gf+FbwJTKCXGE/KLbA2E+z
0ZQXMgDPIAc8h57XPdQZew3fD2D/h/E2gGzRdqFO01/SQh6x0+K6J49eCOeQ
0OHYJt99913E8YD60h+0ATpScxN6Fp+IOBt9p3hEfH487zoWcSg8p/ojM9hA
heQchByqNJFvbFm4GPnGllL8lrHHXCPPoVOZT4TPwrbMU36VC7mET5AjZI9z
5It9EbdxsFeQH44ZI/AbsVf8OWLKlBmfQPKPbGCHUVbaSPMd2ADISGjL0Vf4
BPimPMc5/ApkOK0dw7UhtEVchjhmTGM3so4pHL/EbtBFxADhc55FLmlfrjNG
kPU4f4btwRikHrLfwry5nzrTd1lyEALuDOeE4vXEPlb871KL5RI7oz3xM5J0
Rdx2yjNvhlxILzMGsfF1HXsSHUHcFM5QLCAEcozsYdeIPzmPPMiv1HOMB9nr
gDiN1hTBoeHcGeNJ63oZc9iIyBp2RLhOOw3hWg04TzIVbxN0FL4f4404TVZ8
GJA3PlToLwDajfGk38RMSZdj7EPpCThbNiWgjfAR4CzqpjJwjXFJ++s3fnMe
DuV+2gxelz0UxkKxeeLyw73kp9/0OZxPueBu9BRxJ57nWfqxEIdi04ex3PBe
+l16AZBeyKHYXWm6Q8f0xZdffhnNuRWjD5QGPoRiufjNyLzuob7wQNqz8CY8
xz3y44rVSSGHwh9aF89f5hfF24XSpX8oS3gfNic+puYJ8bmJNXFMn8oOBfja
9BfHxbwLprbA1iE2gD5hvP9f3OpkxCVhuugS5uS4B44lBordyJwQ/EO58BM4
//PPP0frNYjZSPdj0zAOxZ9hHtyDfaB5c7hddmMWh2LrxW1z/WU8KyYXgvH5
yy+/RHoTG0zzjbQDtoLivkmQf6F1y+EYlk1AO+ZZ7xXXXUn8wHXkFr8+rT0u
dtDOsoU0LxBvx2LscMUm+E28hfVIkj36Ff0Ad3Gd9SbYhxwjF1oDxP3IbKj/
6SfGE+NFnEd845tvvvHxYGw2dITm45k3wV9k7GALUg7NM1Au5sBULvxsxUwL
+Y3Y9fAWdofiuZSf+I70HvYt/lL8vZ40GWXsMp61fk5+M/Ok5IdtQHryQym3
7H/WsBA71NhnnoR1MlrjSQxTdaP9aAvlDyeHfmlWv+Jvyh8I56Ph+VCf6Dxj
n3JRVsY1cXqtPcSfwQ+lzeSH4oMViuVqDZFiEWGZ0QtazwSQM83Ly+6nzxX3
0PwXbSO9o7g68qUyoMupX9panHgZ4U1i7rI1kEnFAZBJfiMfgNgLtpjSxIYg
Fqr4Y6jDKCt6N2vtVXiesYT8ELckfkn7Sv6zxjPtxBjTOgP6SXEq2oe4PWWm
PPg6ssHoR/qXtLmO7xa2P21KHKhQLDmsNzYAthjnsInhdJ6DTzTnQRtTL83z
hCB2Hq7hou+xAagfz6EfNM9BPti9jDf6BWg+mnZnzHOMbUKsNOudDp2TDlI5
dR6dh59OW0gO0GFcR2egq5i35F7qpTVqnEOGGScqo2xvdI94UfPp4Zo0+R3o
GdqkmPmKtDrKhsGOKmSLX8xAZ8NXmpcsFWo79A0xVp0n7hH6othl6DfGG/ac
5JTzyLB8ONla6ic4kr6HRzR+ALyM/sTnZNzL92SMYwcyDrE/KZPsYoD+xr4k
PxB/1y0OyRv+FHEc/EDpCJUDWVL5tY4vj++OjsO+xP6grTRPBz8xdmkb7AX8
AO5Hr+FTa1yQN/6n2or1GOgb2hhojT4xZo1NgG5gbjir3jqPDovHRjlGB4W6
MqwzMYW9e/d6TqG88oHwPRnnxIi0Nh+bPM3/U7qMf+nUeHmRJek1pae6arwT
Gw/jv8gI/hJyRTvxl/cXQrmjH7HTCtlDKg8xXK3DBdSRvoVXsGu0PoO+Rl4k
y0qXelBPpRnKHXZUnjWVup86wcfkBY9rXUvWHBh9QMyTZyk38gxHqT2wERi/
lJ04q2RB44K8GBtwqvxHnqPv8fHzzPPqGrqJsYQMkZ/mlLA1OI9coQ+ITWhO
U3whGx19EOp75I0+oIyMNY0hvUNJ3wBscb0jStqML57hHvmxhXw48qWc2H7h
NdqYdqVe5EW6xIRkpyG35EP70xfIHulhE9D2itNxD2OaZ7C5icWoz5PWNMKx
2FXSB+XgO8a/1p6Vso7gQofaED2BfYye1DtF5Ug/LR1s0qT3C5Fz+aXF5CPZ
S0JSPuFcF2O/nO1ZSvmF+Ls7heoWb+P43FNSetWFsFya266tgM/j7z2FSJpz
qEx7lIpylKMcwC9NescEoD/i72lpPKDX8/jCYXtxHzZj3D7jN/6YbJti+oAx
Gp87yQN8+0LrHOJ5wVvE8+FyYhp56824j8eVCwFdp/fXlBagP7C9iCskzZEW
C9LEB9a6EvonT5tcrFBbMs9AzEB+QantkeZDJP0O7eys+/KUP8kGylrLUGp+
aW1TmfQK+RRJ5S80TxHeF9c/WfWoCtmK1yHLDyql7fPWLU8e5bDN43ZNMWUo
py0ftnee9Tx52itpHjmp3PFxSawRXyvPO8lpfVFozj5PHdLKX0i2ssZbofaD
D4klEReTPZnHD0/Ku5h6Kh3mgoi3aD+MUmU8nFfAFiLmmKc+lwKqu/5ZeqIU
/VEoplLqs6XWrZzPlju9mkBtKUdW+SojQ5daOxYav0nX8JGS9gmoTL1LtTeq
87nK+CKl5FXouarQ9bVFLmsaod1iMBgMVYFLUd+WGgcoJ8qt32tDnQwGg+FS
gulbg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG
g8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8Fg
MBguDuhbcDrOc38p3zHSN+yK+Zadylbd36or9Xt7SeWM17uYuoR9U646VFf+
paLUPi/UvqXIUFr9q+p7u1l9llW3Qt8QL6buWePUvjNsMBiyUCpnlGpXZCEs
R7H6P03PxtOsTHpV1f6l5F2IQ0q1+cLjquSOLLmrTNtXVZmNRw2G/4e6deu6
RYsWuVdeecXt2LHDNW3a1J8PfdNQh9xzzz1uyJAh0T1pek/n9bdr165u/vz5
7oknnvBp6J74veHvNm3auPXr17vNmzdXyLOq26RLly4eYfnzoE+fPu7qq6+O
flPWO+64ww0fPtwNGzbM46677nLNmjXLlXb79u3dqFGjiiq70rzzzjt9fw4Y
MKDC9Yceesi1a9cuMw21ca9evXx509o93m9J5+PnCpUb+VuwYIFbuHCha9my
ZcFnda1Hjx5u2bJlbtq0aa5+/frnPUffNG/evKiyXHXVVW7SpEnn9cn27dvd
6NGjc9ctL2688UbXoUOH89r0tttuc0899ZQbP368H6/xPOvUqZNahyuuuMIt
XbrUrVixouDYIZ3evXu7OXPm+HHav3//6NrAgQN9vfv161dSne0b3IaLDYwX
xtTixYvd3r173U033eRuv/1216hRo+iecMxpDKxdu9aP56RrcV0aciy6Dd34
8MMPu6NHj7olS5ZUyCPJR7ryyiv9ON69e7dbt27defeVCyp348aN3WOPPea+
//57t2XLloL56Tn03oYNG9xvv/3mRowYEV1D35EO7fvaa6+5Xbt2+bSxIZLS
DvXe2LFj3YMPPuieffZZN3jwYN83hcqja+i/w4cPu/vvv981adLEn0P3YYds
3brV63/6gfYN842XAxvm0KFD7pprrkn159J822LjsNwPZ3300UdeNh5//HH3
wQcfeJskK6bKX/jx008/dTNnzvT1Q9fL7mvbtm3UN9gPeWSI6+PGjXNDhw51
L730km977CCuNWzY0PcHfbpz585KzTWoTekjbIYff/zRjy2u1atXz/+9++67
3SeffOJmzJjh5Scul/ylzpdffnmUnq5df/317uTJE27lypWRTZglN7TVpk2b
3MSJE9306dPd559/7vPnGrYN9tyHH37ox3FVjUWD4ULDW2+95a699trzzotL
L7vsMtexY0fPL/xevny5mzt3rj/mvMZ6qEPglNAfiwOd9/HHH0fPKS/+Xnfd
ddF9SnPWrFlu1apV/jjPuE2ag8zDPXAMunvKlClu27ZtBfPTNfQf+gVdDe+l
PUeb0N5wRRoncQ4/Cj44ceKEO3v2rOcE2jorLqn84N5jx45F/orSRJ8+//zz
Pj306uzZs33fFuJG6pNkT3AMn3CMfm3RokV0jXRVX+l0+d5ZZYf78Z11/rvv
vvP9kdaeKvvbb78d+etwxR9//OH9KX4T+1DfyKcsZBdxnXaEw8+dO+ftn549
e57XTi+//LJ78sknc8tlWr0feOAB7/vR56GcY+dSBricc9iT//zjn95fVRrw
+U8//eR9VH7zDOWkb5AD2Wt5EK8fZVmzZk2Faw0aNHDHjx/3ZS6m3ugP41zD
xQR8i3nz5v2vPj3p7VTiuX379vXX0L/o7TFjxnjb98yZM/4erhETgkf5e+TI
Ea+/0J+MMfQkegW/cf/+/RHXSi+ha4mFYTejw7nGMy+++KL3mbDt8SfwBVUO
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
aHfDGExAbi/r07n7zJdo7ULZNWAeVfw31ZGwNaLHKY6D1gTi/8g70u+KYBzl
P2QNjsbpKqR21BTN3iNv5AC+Rbk4h2+mz6DjFfkh82Y8yzsqp9qE76a2sl5B
YyFtxRjMmIs9vB29M5c/R+qJHoJswJjOGF2cT6cdpcNI9+dYFgugDPIFK/s+
ddKa1/Q+/RWfKfzJiv1OtKHfpbRpt42hMfwTn1nJe520MWWnjORF3ThXH1Md
4G+yFzX7lvo685X4FWPjbTaPAaAZ38dmAtB7+bbqzf+JvQE5RL5azfLUM9if
tW7JPNQwypGbsyqD/iPGDXxR0tgytvV01v6Mb+gP6DX4o6Tt3S3gP8tcXfrt
TumWWy/b6nu96D9qP2QHdDRiX9SNN9XNNqn7rdS2go5LeTspJ7Iv/QnfhLJY
SbmyA3gxsSrSdTK9ai/D6G/k/oOq+2la2XWZ7qP7xTR4J3Omqc0u983+4K1F
O1eZD25Z3are6U+ZoNi2zXyRW4Xqj35OHMBcexTPW2mDsn5S1f7F/tUKbVoF
bZrG8uqWjl9Vzlzd6rSjzqVPtlMW7tOPUl22FdkGHqo5Y8MwjMGOur5IRvvo
lo18qJWzk/yGQnsZRjsomzOs8mtPn2/FtlTlKzrQbVCsYzv/e1l7lM3L1s27
E14ov9E6enQzmnW7bHXq3OpY3UxXa2fsL6tjuzphJ/2ulTn9Vtul6vn0Hfl0
tVsG80/DWD/QyTjVq3K0Ov6XlaVYxlbK21/jX7fmQ7tBmzrt3239rpX7/UW3
HE/vj/5gGEMB/COswcNnjvUHzPXgZ6o4X+lzHJlXYV0K+0iwR0lu7Vkqe+Lj
QlwGxSsb6Do3A36RRb/iOsBvMl0Hy1hDnDzWebAehHXyxC6Xr2+zvPFBVXzd
VujJEf8N1hpqryoB/840fkWzPLSmsxmfasZj6vifcGTejfVE+HE2i0WYpuHr
w7oPYlmUzcFCm1y83lye0JLYT2kasaNYuyNfrW7yUeiS7vemvPF9Zv2U4g22
Ilcwh8n6HtY8NeN9pNNOrKthrWoa2x7fJPpTcW1uq/3SMIYLZKvh38TfjrUE
M2bMiH7/zP+zhjp9Vuf4kbBuAh7Kek7WfMFH03FL53oPHgovwFeU9W8DXfcy
UGbqjuzwt7/9rRGHtGqsUF1Zi8eeVawd1V5R3KferB+kfYmfxpoT9iJpFiON
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
bn1PPAO7BW0DH0MP+uyzzyKt8SvD5qgY7CkPFV/FnpGz5aZrW8iLuTPqQV/S
njeAfkT/UZ6a94WfYyvHzokdOPUlZU5QtEEuhDZVNuW67cGR+Ufiubfbzvo+
88XYT6kvPIx+J98zZFHVDXmXfXH1bpkskvp84X8keS99VvQU9H+i97OuC7sJ
vs705auuuuoX7/PP4y/YrA2VRhn+9z//27CvW281hgv4l5hHSfdM4cg1sr6u
GTsZpzhH9kTXwi4mHyQBHjp37tzIi8r8VciHcRVfkeJ6mm6i6HeY08nSdlDd
sP0i51NOzmmfNF/qpvlj5UldeBYbMu9SP/lqUmfiNfR63NC4CK/G9odvTZ19
4lrJnyP1w1+LOuF3y5ybfIUEbIN8m7qjf3OPY9WeY6n/CT5PIN0zXem0bbqX
s+6jG+FzI5tnej9Hm3blC3gOthd0Qmjfit9OWZ3hMZQRGZNycp76KOAjh5xW
N66DysI/Ck9OYyVUlYP2Rp6WLx42l/Q/JR0ejm6svRHrlgW7s/Rp81BjfUKz
fyQdP5DzUz9c/ysDQyvGN2yrjHW92LMcFPc+q9NX6pa/1Tz7w5ah9oOfYTdG
VxR/6eX3c/PAdcuLTzH/JfManZQT/k1/wpZfd05EYwN+Tuj/2pfe44IxnFC1
3jA9T/3bi7qdnsVPjzGmSu9T2mCw4ZbVuai7lvng5vx1cu/1Z13TbzF2dapz
ldGPvNDZ8b0to3VZ3et+P23L3JqWHK/NlaUZTVtpV/Rr6dbdatc6/aeZLSVH
K72v9cWtlkN50I/k81u33nqGb2tuwzAMY7CjXduiUR/t8LSBKme382tXbhiM
crNhdAN15gyLz+bSmvkytqpHDATa9Z+tU7de+OXm3i3bq6qVMlR9v5d8upO2
qipvq2N4WR1z7drLftfpv5H6DbXSjmlZlEe7Ovxg+K8NoxcYKNmw+H8OhjKV
laXTurVbl6IfZSv55GSYqjYfDH2kW/OhuXmIbrd/N/lClVzabht1y87cy3ob
xnAAvoysSyOeGGsJuJcbl1h3VxXjC79K1oAX82E+BX8j5kzxu1ea0vHzxN9X
MXQGko9SB619q4LKyJoO4htQN/nxpnWjnYg9wRo57alWB/i34kfaStlFE9ae
sLay+D5rNLXeoVm9oEXqA9vLNk/zJ1Yk6z20dqjq20oj9gP+M7m92qCn/Hzr
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
Seeu25/0DHaJYowKwzCMwYo6NjajcwwFfarbZexkjt190lhfMND6oNE9OvZq
3OqWfXioYSjWuxtl7iSPodhmhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmHkke69m97r730om+2/XPZ8u99ptW6DYY9wwzAMY3ChDk/oD74xUPvz
micahmEYnWCHHXYIM2fODCeccELYcMMN471NN9007LzzzmHLLbfs+ffFPzfa
aKMwffr0WJZtt922T1oRo0aNCjvuuGNb39tss81i3TbffPPa5dtvv/3CoYce
GnbZZZcBp5dhGIYxsJC99PDDDw+rV68Kt912W3jwwQcjf9lzzz3Dq6++GpYs
WRJWrlwZrr766vhOL3RF2VTh1cuXLw+PPvpouO+++8Kxxx4b00eMGNHHxss1
9w888MDw2muvZe2/qe01tcFOmTIlvkfd3njjjXDxxRf3eT7NT+9wvO6668Lz
zz8f3nrrrZZ1V+U50DQ3DMMwugv4wjHHHNPnHjroFltsEc85fvzxx5H3cN1t
XqD8LrzwwvDYY4/Vfo/ywOfL0sp4vb6DjAA432qrrcKnn34adtppp+x30nnT
bbbZJvJd80PDMIz1GxtssEHkCStWrAiHHXZYmDhxYqltE366evXqsMcee8Tr
XvDQsWPHRt3z+uuvDxMmTIh2XH1n6tSpYa+99op21CeeeCLMmzcv3kcPffbZ
Z2Md7rnnnnDnnXf2Kf+uu+4a7z3wwANh2rRp8V6Rt/LdNWvWhO222y5en3zy
yWH77bePMsWyZcvCjBkzGmUEkyZNCm+++WbtNtBzvHfHHXfEtiwrh2EYhjG0
wFwifOKTTz4JL7zwQsQpp5wS0xjj4V0LFy4MH3zwQTj33HPj/V7oX+R54403
hg8//DDaSZ9++uloV9a3brjhhvCnP/0p8sNzzjknrF27Nt6fPHlytEGjR8+a
NSssWrQolpc05AH4/tlnnx2OPvro8M4774STTjqpUTfmXB966KGY74knntgo
C3ZkysC3yPOLL74IBx98cCMdvtwOD4WHf/nll405XuuxhmEYQx8jR46Mc4Po
mMU5RXS/OXPmRB0P/oquVrYeRNfodNhiFy9eHPkZ/Gjp0qXhoosu6vNcEfom
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
OdqQdx3a0J9FG2xIOdpge2yVNsyP5GjD/yzaaD6oE9owNtWhjWxjZbTRPBnf
5jxHG80v9YI2tFOONnxXtNGYVkYb9FjRBj0nRxv0nG7ShrG/VdpMmzYtSxvG
6zq0EZ9sRhu+maONxmvKobQy2qhu0IY2ydGGc9EGeuRoQz1FG87r0AZbd442
6XhdRRvVDdogP6g/vf/++w2+nfJQgXqITkXwbdGpCL4lu3oR0EP1TEEZ0X9V
zxS0v+aFi6Au6VxuCtpffLUI2l9jdxG8o3ncIviW+mARlFH6WwrqRFpZG9MW
kguLoA31DxVBv8rRhvvdpA3lztGG+g4V2kieK6NN0ZeiDm30f5XRRuNDK7Th
387Rhrp1kzaML6bNL2mjsbuMNoy7A00bypCjDWXvL9povB4KtJE8V0absvG6
Lm1oF+y+8FXZkIvfKDuvSivqs62kDYZvD/XyD+e6DfXyD+e6DfXyD+e6dZLH
YG+7gaYNR+Z1ZQtGhy97v3iv07QyuaWTNL5TldaL8vdn3bpdftPGtDFtTJv1
iTbdrFtKG87RgT/66KPGmjTDMAzDMJpDvJR1RMyLsr6OdTdVPN0wDMMwjP+D
+Cjz0PjZKsaFeahhGIZhNEeVTdgwDMMwjGpontT81DAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzD6B9pPdKjuK5ruiVpWftJB1TtD
sd6GYRjGwKLIW3L3BiuGevkNwzCMwQ3xFOla0sF0f8cddwz33ntvePDBB8MB
BxzQ551UX8vxq17rcWn5pVOm5ZkwYUK44447wkMPPRSOPPLIX5R/ww03jNC7
YPz48eGiiy4Kd911V6z7QQcd1Oe9ZrDeahiGsX4DfjFu3LiwZs2acP7554dT
TjklvP/++2HvvfeO6c34xEDzEcq/ySabhNWrV4Urr7wynHDCCbH8Bx54YEzf
YIMN4vHyyy+P6ZyPGDEiHo866qgwb968cMQRR4TzzjsvfPzxx2HixImNfAea
NoZhGMbgwJgxYyLvgDfC97jefffdY9r1118fHnnkkXjOM59//nlYuHBh492R
I0eGww8/PEydOjXsvPPOv8h7hx12CFOmTIlpG220UWU5yuYgc/ptii233DKW
bfLkyVGfhG/uueeeMe2CCy4ITz75ZONZ5IEnnnginpP35ptvHlasWBFWrlwZ
Ro8eXTo3Ct59991wyCGHNN6rKg/p6O7ix4ZhGMbwxT333BNuvvnmqKPBMx9+
+OHw4YcfRn709NNPh7POOis+h03z2WefDa+88kq8hv8sXbo0PProo5GvAvgX
afChG2+8MfIm0j/55JNw7LHHxrRu6afK56abbgq33357WLVqVTxit0VvpCyU
CT7Kc5TnueeeC8uXL2+U86qrrgqzZs2KdZw7d24jX9l4uSb9xRdfjHprFT9X
efbbb7/w3//+t2H/HWh93DAMw+gdXnjhhcgf0ePWrVsXdajHH388HuGX6JHo
mk899VTYdtttwwcffBDf497atWv75IVeyhGe9M4774RNN900XqP7nXbaafG8
yFPEl9BZ4VczZ84MZ555ZjzOnj077Lrrrn2eE5QPejK8nOe+/PLLqEM/9thj
sT7ooNhl99hjj1gXdGxkBXROeORrr70W+enGG28cXn311QZvlQ6Jfv3ee++F
rbbaqrTsZfWgzpSdb5SV2zAMwxg+WLZsWbTjwmcWLVoU78GT4GkcTzrppPDy
yy+HnXbaKc4JMr8IXxg1alTUWdH/0F/FZwC8iflTzuE78LlTTz21cZ1+Xzxm
l112CZdddlmce73wwgvjkblK2WWreOgxxxwTtt9++6gncw8ZgPpQPng3dUQW
gEciA5DXFVdc0ZgHBVdffXW49tprG9fYbpEDqHdZuQ3DMAxjyZIlkX/tu+++
4c4774z8BZ6z9dZbhwULFkTd7re//W18Fr7I/GH6Pu898MADca4R3Y97zB/K
lgneeOONMH369Hie46HovfjvnH322eGcc86JR/jobrvt1uc5Qfncf//9kd/x
HPyU59A/uca39quvvmrYafERevPNN+Mz8F14aqo/Tps2LZ7jl8tz8iMyDMMw
jDKga2L/FC/k3vPPPx/1yoMPPjh89913DX8g7J2XXnppPIdfTpo0qZEPPAce
yPlLL70U5yaZM2XOkTxy86G6xu/okksuCXPmzIn5cORb6JNV78E34Y3wTPkP
IQOgv6JD/vDDDw0dmbrOnz+/aZsgO2APxh6LLAFPreMTxXHs2LHh1ltvtR+v
YRjGegB8iuA18CpsstyDl2LL5RyfHXjiM888E3VWbLjcP+6446LPEHZTfHXg
ZVtssUVMwzaMLgpfZU4TfpSz5bYL5YM/FHZa9Fj0aNVpn332iefYZ7Etwz+p
g3TPos8v55oHhe8zD4oNG7z99ttNfaJ0n+/+5z//adiFbQM2DMMYvijyER3T
+/BY2VRTwB+IYZDOhQr4F+HDw/nixYub8tB217ZUlV/X6ISaV60L+Cm+uDrW
4YV6Bj2Wud2q+hqGYRjDHykPSPlSWYzZYswjnaMDnn766b9I6+/yl5W7299B
J0Zf32yzzbLrTQ3DMIz1B83itVfF+eMcHZZ5Qt3v7/KnZWnlnar6lT3PcZtt
ton8c6DqahiGYRhDHeafhmEY6w9yulo3YsbXmdccLrD91jAMY/1Ccf7Se4YZ
hmEYRn3geyvfWeHQQw+NsYuIl8e1+ahhGIZh/H/g/0I8A2LUsq5yxowZ4eij
j45pxBhgHejrr78eYyZwz2s1DMMwDOP/QOz1iy++OMa9/eijj6LeSfz2VOdk
redbb70VY8JzbT5qGIZhGP8T9ywhniyxeIjHztpGYhbJx0ixe9jTCz5LzDv7
zRiGYRjG/4T/B/hyLc0=
    "], {{0, 398.}, {465., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{465., 398.},
  PlotRange->{{0, 465.}, {0, 398.}}]], "Text",
 CellChangeTimes->{
  3.93695631796168*^9},ExpressionUUID->"868a515e-eca1-4fea-8bce-bb0e1426c639"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAAF4hJfluTM1TJwMAAAAAAAAAnoomJ/MxgF0E
AAAAAAAAeLswu8iCXQQAAAAAAAB4yxwKsszwqVOxkIoix6R3jwYZhklhVi34
TUN55JOpfuNF+cp3NuydLuUrDccqC8l8MOj943v64ES0JKWSmmLXpqh4HpZq
kYbMbjbINC1WdulZ+3l7vhWsPbp2tMlOz2OP3KhYfH8WOnT38CjS6oTZM50b
ONceakpDV7Rv02L3peXZJ15aR00RsfJaXs6cQ5WTb5vinabtUpQt+/1LqKND
nZNnuTRaRQ2TWZ4tZI9hsvrJl5X2pfkuIpfClTKkymOyTdkubDegrKiX/GqD
TL6MmqXzW2fE95vJDo+1rTjLqaxKKvKMQufjWVl6qDJyWL4N8z27XEqrlaW9
SWZVFLN2wcuat4sgymhJad+6P9RFSq7F265JthdReeaFF5flxvFWpHWqXUxw
8Vi1gk3lckZ2lHy8C2LKi5LKsqAs+TuynHXtcIss39Lnl8j/W9YHAH1K8j9a
ZNu2vMw7uru7I0v/bVtkeckz1D9qCow7MjypmzdlSgZLt5fO9R4mY617untn
U15L/cVivzH8bMV7GwqZTbBGTtd5IMauVAwiDaXeI93/yJ/t54cyEfYHrwt+
rdVp9qeh2JFllzEZ3lSRSJc9U95b8n362rXrl6w9s3Fbl5u1UMbngSHSJpPK
nmHc0zesbT0XFrWHpiCHfffOCokPs2X0KO5NZxSsPeqoKQIy/eXzC4dK9lU+
rjdsrE98WV+mn87+7rnXUZn4TC+Q9XP/uXVqF7H6sdl3P/xWjvF1Hop7/Wxe
A94j30Vgkb9CaFXpr+n+C4dy3tfrgnw1Lviz8nWLTN4Kb6u2eL4ob3NE/+Nz
fOp7ffGynyvtQ52pNJfi7zL1ZP9YYqS0SVsrsyry2DudKGf9oaGCtSORXmO+
H966PxSxI2WP0HtLUU7f/3b6fbuU5erxdkG7GGGXsWohm8plgewoIqvX1vkV
LZrL6L5mnSzf0ueXyP9b1gcAYzR1TbW4uL6b0odHj8na5vh589Q6+SlVwmT0
Z2ZPXgq5wPT2cuo3qXuiU9aZf1Z37LNWTldCVzW7+rkar+14KqUiZVRVNauD
nMxnYBcVkd2T3U0h5bI5uR6zNd8DuI5hhCt0jIaVG5O3rPwic/D+CQ5VctIu
PhXS7otWJPW6nGsP0ubnY4duykVonrGp96mjtWNpajF95SuvU6eNqKs53eAl
1NGhrqhiMrTmfYPJpmGxp66ylzqfZf57URZT4/1e+V5nF1VCB/u516nTRs4h
ddvXya82yORLqFk/52OTaOfGiP7L0uxYHsXxbygMQ0ry86lInKEuLfvV9z7G
yxO2UmZVqdRne+UW/lJ85k3YzLfuD4fytzI9xwFAyKE5u2OXstwyD3muXZyw
01i1kC3lskR2FKFDXhRTFIUURgmV60wimZKVsnxLnz8v/29bHwCc5ZALP7rn
Zwl1UTrgQCa348KEHqjnU6KRscRa7G+1Tk7r8aSvm8r0f24tkNmH4hnYRaWQ
U8N1tVrYH+NcnO/2J2vtos67FtpFJbP5Tub3lRxe3i5uxER7OJTxyNpDI2yp
yUftVEfrxlLef9TaQ6cTCbubp2WiY72kOuK+KKd2kZJZXzg93Ubne0pm7ZXv
VXZRI21vrqccf6LS//mU7Nsmk/egiKbtIm+NT9BBzskP53q0nrf4SStllraB
jE4falS5mcF4v7p1f4jthxObuOHzAJMDwE5lucEuOr5rmV2021i1hE3lskx2
5KFPa3cFnLxppSxf3+fPy/+b1gd483CfTpe1Se4HysfteNQXZ6seektqCszT
/qjHEm9i0lnInsHchl73WOpvxRFyemlK+XrwRB8/5ycheAZ2kS5XO0woDhwy
P1rCj3nOJfrifGs273dbbhflgTmpYxjeGh/LGzDRHrTNH6QpBfZHsiybgjif
7cd71dEn1ofMYHn/qbKIXL/vL566xqz+/JLqaM4uehjMOWmdeKp/75Vv/p7l
VdRQFvnkR932U5HLbaVJ3W2bTN6DWbvITyhPI/Jcj4IomZVZ2h4cjgWib63x
/1ops/heE9/1hX+yRvs22BM2zk37QyOf+5UdUhr7LG+W2G+WzxXmXmVJ68bb
/ruW2UW7jVVL2FQuy2RHHnoU5zlFvkeeF1CycO9il3WyfFufPyf/b1of4E2j
26qblOJvYZ+PrXWyfmv86G+ft12k5PRw7kDnccrG0bpjt7/puYnR33Df1yim
JEk6V0T24yPTGZLe53Ecj44T43rPubnXDs/ILpLth5dTLfYazaV/S74bZrdH
w/KO+J4Nm6JkWN7pvI6z2C46pmmoY9gr/NNvxqRdZLd1FBc1HWq514j3kSkV
ZEsdVXlCUdyti5SNwzYZtk9J2v08pjiZt8uOr8xlWU/6aL2sOppdLxr4wpR6
nnRibnV9vhvKRdl36oLVi28bZDNdJO1+zmRWulB30jLgmymde6NM3oNJ/feQ
q3enVNcVxe69qJep7VxTc2TFTB3tK7Pap0od8IyefLP+oJ7Ly+A/uonoo+1e
o3yix24oyz3G2/67ltlFF4/RK9hULgtlR+FLX7u0qKgqYrUGOW0jXyzL9+rz
A/l/y/oAb5mafNbOfuam7Se6f47JXb7P6FlzmO+PbjI+1h/q9MRnLjbvJ+fl
eFyGwHXJ87zO5Qq91HQ88jufu+y+aGSMGJd3qo9/6b6o9aKvnbSTLrnfoNum
umzJN48f5Lpev7xd+RzH+3Xvc9f1aWJIPr7rQrtoLn+Xcn7L3sQNZ+wip7Pf
Vfdxd2IP7JY6KuLgpI5cW85de36/n7hevCimFve35zpgUk4VylPUUXNet5yo
xHG7SMYy6K+JlW1cgCmfk/X5rilm9eB6/Tri8XR+aDk9meUxmeUviscp/Wjv
+L7TqVs2yuQ9mNZ/K0qzsvO3HAd5GseY0ud0PxnLwr4yS1LG38n59qScuOPG
/UHbWz2ZIOXrlJzYUpZ7jLf9dy20iy4do1ewpVw4S2RHnWe9+IB16s/uN7tY
lu/U54fy/5b1sR65f7mu5H7f3sX9Smf81sHzohnZj7llPfvZcJBz4VPrt3Pz
FHUu7zGYnP0b61HEG107nxmZ1mL/6DJyXs16Ud/XXfrVDNf2NRfnW3N1P7pG
+s7fcC2Cv28YN2j0GvNZOmMXBZ2C1Xuzp8pgrzpa60fXJddyaN7B6cZ1VLbz
4+eusb3SU3YRJ4+kzuswvYPrFB8sY3aeeK98r/Oj61LL9vDVjE2k0rRVJl/K
Uv23bduDfRqaKd+B+bn8sQdtP+uiybUPUjl31237g3ruUNZz36cpObFbWdK6
8bb/rmXtYrexagGXlMs62XHc52OvCMSxSpbv0OfH5P8t62MtPJaeN5wH6c2J
eHSV8Jtgd/LQPLGzW7kq/qopjyMK/ICieNm5CU+Lmqua2O83tXe7+/uqKqnk
MWhLJTsWxzlZtw+0Gd2DOO4vPMqzsIvCEbtofM/l8TcX5rv9ydZzhpfvL+Jz
BFM6hhleupN1Z6bsIuV70LWL9Hze1Pi0Vx2tj+0q0bGMtF9TU+Y0FVb2JdXR
nF0kb6ipKgsVS92en9PdKd9r43Rr+FzuZ2bQjh1Vnk/7Ol4kk7czrv+WIzrb
vF3U9peTPfH2yb7UWTbKrEMlfZ8Cff5LU1I+0SFu2h+Uv9TJ/paxNHTSsktZ
rhxv++9aZhftNlYt4dJymZAdVXxqS7T7glfE4Vgdd+GCPj8l/29aH+CNwuSK
0V9b5/HzuW6lfU9j457+UOi8PE48k39fB8/eNso8Q8xhdtNZ83MAWL5ae53J
kLLsWINMvvu23Vt/F/rkFeW09t3r70E89WusmZ02OmWu5OiTxqPTe0W78nVk
DrGbh6X5Psvhwnh0Y2PCoF3UmXfiU8rTb8z4oD0ZE+1B71XtjiV6bvJoGzZs
TD3GENyrjrbYRXUWnOinuWdSoNP/gutIlDu3iwafN2VCtuV2fKlUfNpu+75S
vrfYRblv0k9752KytvH5cQ88j0dWdoTWIpl8BYTvw1D/Zf2El9GXdnc979T3
q58H2faHZwCJfK3x39kgs/SYHHccoRpW98e5+37fvW1/qEUMsaH/4XD+/ipl
eZFdNNIu1DOvIQeXsaxchn3rnOwoQrl2FPfUnfU+rGtl+ZI+P8yLuGdG/t+2
PsCbRJ07cdRfpYzjfbCUN4j+pddLGq5fzc11PhN0nz/qh6dxHMV8UWcO/Xjm
Tin+1ueLzcU1PZ7tpM53airyDUus+/Iz+LrfTTzhZF3lJI6lWgO4GxlLuTwU
a+dPHIuY28vHNtORuVr4neRhQb5P6JanPDeLn6dl8hg03fO0Zsu7TaDw8xs7
x3HYLtp51k4Zt3FTn1k/mG4P8mxIvi9aM/RZ13VmtOt+G+qo6dcR7wNV6pPJ
z/U7+W7iEWpPMNepXMch2+ZXP77WS66jMnFVGfZbnj5PSq8NVdr/v5OBPfLd
NPVJHWVM5+BnLZ7U0UQe9L56vifJ4ed7s3qyenPDSi/rzCktkcn701Divpc6
1uAlkdHfb6fPwjzOn5/moRjGv56Y3+++/2KZpc5jFvLUdcR56o7djxF00ndv
3B+0rtuq2Gqv/FFP3aMs9xhv2ydNtotd5OAFnC+XkbI8Izv4XEzf3mR6njUX
P5J2kuXn+vyYnDgn/29bH+Dt0aix4P3jezJtV/S/37OC3v68zt0izthLscm1
/uH4PrlqT16321Tq++N0iZxzuDe+o8B3lA/sdLwWvT9j6TXpi6d09B+YDnuv
SnPclVal+P4nzlGn1Tabrjv9jmv66c9TiZicXL65al9xv+xO83A+34M3JM6q
8o5Hp8GYfWDI73k8el2GXd3stF1we0PKatP1yXflGDQax/6JWNIe+D2mKm/X
fpTjVVZ1vk9O5w9X1pHYI7uwfrhOUp484Rhryxjcz/21tCXxEutI740e1pHW
GfQ86H/m6XdO60c84+J8l62OveT6wk5OH6F0bnGew+D+ri+t0DsHc//nZPKe
pN4HmS7elozOnrxWRZO6+4+/9SjwlMwK0p6NdpoHrk9LPc4PfDFe9tfM+uwh
s7Q/VJsH3X+Ynqh9jMb67q37QxrIdzieK/ruOyvs1f2lZbnXeHuuXewhBy/j
fLkMy3KJ7NBnr7vsmbbK89y+zctlueRcn+/nZZn8v219gLdG0dlbJOZiJrpJ
lQYiZtFwTH7uNHVJeZ6zq1g8J1kVhfhNddO4ew2VRS7eWywL1vosWV92Lyjf
TU1FLtP63JM6jS7vYrKvT/8GdXR9WPpX1w+9qHxvkcnXpFLlvSZUVF1KOZcX
z3wwvHG7aKpSyYnlhfliyvLGcnB9uZyXHYe6kum/cVlfp8+/oHEJvCDk2cK9
OfwziDnP3jnnAAAAAAAAAPCCUfvlnbkFIHaPa3nH/XyN3CcSwDACAAAAAAAA
vAoqirxg1r9bx6xKWz/m07OOAAAAAAAAAOB1w2Mt/IIsL6QkicQeQHuwNxUA
AAAAAAAA3gI8JgM/N+OmoQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4FpTkuzE1T50MAAAAAAAAAHgqmpzM
xwB2EQAAAAAAAODF0jSNuIb/7n8v/kXNmPHD7CILdhEAAAAAAADghXKoEjLu
7uiuc91/4VDR3lGS3fnuh99Gp/bPoSDLDG+W5ioLyXww6P3je/rgRFQt+k1E
tmnQ3cMjWW5IRd39tqHEdSiIUyrKksoipyRwyImKqceN0FDkuJSvNA635EVS
U+zaFBXjL8xCR+SVP9cJs6vbrEUaMtvYINO0yIvSVe/LPIOsVWVNos259khb
nKVidWTSO5ZOwzApzJaUdkNZ5JFp3NFn7DdukFB9/kdPwEx7aCqKWXs2TVPW
T5hStaDgtrdN9doiYm1vXb0eqpx82xTvNG2XomzZ72/d3rdwqHPyLJdGuyyr
o8izhSw2WB0FyW3yXUQuhRMyZIoqj4Us5e+03YCyYkmP2NL3LqNm6fzWOe/f
XWce3ZvnZcmhyshh+TbM9+xyKV3SiXoP2CazYtYueFkbpk1BlC2SPzfrDyxP
HuuncZZTWZVU5BmFzsfJcYlTJQ79wPIpSVPK2JV2rnxxmW4bb7eUy7zusC+b
2piWHaxf8TYS5ad969L2sEWWb+nzS+T/peMSAMtgMsa6p/vPrVM505TksrHa
8pOOLlWS/9Ei27blZUqbydJ/2xZZXnIVWVzngejfadmIdKfeI93/yJ/tG2X8
HX1mBkye8fWumvLYFc/IW/km839iG67KQEOhOVJ+O+flUCbC/tDpHNNp8sAQ
z5GPZXVl3NM3XromMytoKHZY2b2zKWMNpKkikS47XSatuLwVbWetzF29RllT
wGwbw5M2W1OmQgf1zqQzth/I9FOq+ZppzXQU95Eevg6ejW10vj3U5LHPf+bq
fMt5kPuvvNk8bGmbQ5oiYGWXL89LJeuEj+sNG+sT3xR54uU/x23b+3rKxGd6
gZIrTMaedtmSHPadnxZibb5mugGXucaZstsj30Vgkb9CaFXpr4Vs5PprUxfk
K9nvz/ajbX1vG7yt2u1c31l7pynEvN+5+w51ptJcir/L1JP9Y40gWC2zKtF3
nSgX7aJg7Uj0c2O+H960P/A50cG8Kp87nSuWIvxl7/7uZS6eH1s/3m4pl/O6
w35samOq/fIy522izkPZH7Pjj/ZoD2tl+ZY+v0T+7zEuAbCIg+xbn1v9saEp
YqlrjQiBpq6pFhfXhVP68OixftccPx91uLuUSugPZleHVnLZjsuJ30i9MBlk
IbXvyYr0b5hdxOy5KI4pCkOKknyD3rtWTm/JC6emqqpZOedkjujBfP1vqB9/
UrZHm90dKSK7J7ubIlwxvskyEHbU2vUirmMY4WIdg89R3n1m9uqniCxhz5UT
vznUqdAB+zJXpvkaZbmNc+0hPtEPM/8Xqj1Mld7Wttln7ViaWtJeO6aK9Uuu
d8/oBrdu71s4MHu6YnKy5n2DtcGhXcTXK77/bTr4MJlvmzvle51dVIlx4ude
p055P+Tti+kmUzJzS9+7hLqqxPhThEyvMubtndSR8mc49g1JnKHtJOfSvvcx
Xp6wtTIrtUTaeuWmbAovGy/tm/cHlifH8iiOf0MhGzuT/NxLeJ82KEwLKrlv
BrsqVl+p/3B2rmb4nDXj7bZyWaI77MeWNpa6aq6l81nmvxdlycetvdrDWlm+
pc+fl//7jEsALGFszj5n+q6YF1wiqA658KO7tu/KofztyJy4lB3T45qci7WC
/tpxYt+R085d1BS50YWpWymnN+Wl+4BiVA8ueb0N56SV7Fjtq3YWWbaGn/U+
5XrJkmLIPZPsIDqVdUtYpWOo9dDBnHA7PkwsDGqbIuit/0vZnDy3CaqJ9sDr
yDMfyQmPY5pYG+VjzUQeLm6b+herxlLef9TaQ6cTCbtbzM1M9O6btvfLEHJ2
xC6qYkfkoeszw9ve/Zfu5DzoXvleZRc10vYW8+XtT2Z8Dbrfr+x7e1BE83ZR
nfn0I/vvKLDPrBepecPhXI/W8xaX9kq7SNtA3XVDPVabwXi/unl/YHnyVsnu
ijx7UAYqfavW3laOt9vKZYnusBOb2pjqW719D0eZyfvWXu1hrSxf3+fPy/+9
xiUAlnDsR/wvZiPY9/TTBX7ZLSvl/VbEGupEv5jzLeByTMyZG99RVtVifbo/
jrNnuAHleUq+55HnRyv8nI8IOX3lvLRM6MF5YE7KQcPr2y+XosdoO0zk/pWP
FrlBvGjvCpeRD7/PZZncv7baLlq1p62mwDyV0zr93uSAfFzPMpyIyrqW6/YL
9iLcnEm7aHBbnYm2MDeOXNw2FZ+KkOlvy+uV+/G7ft9fPHWNWf35lu39Uqbs
Im1/84v7/td1Sf4ZvWWvfHPde3kV8b12Pvncr6v9rBI+f9O629a+dzmzdhEv
K14X3A94RIfroezBoa+v0FnX+NKtkllyr4nv+sI/WVOl7uz6+s37A7eL/ITy
NCLP9SiIkkXyv/MAsSZgx+vtjDXj7dZyOa877MSmNiZl8sNgTlrb01x+79Ue
1snybX3+nPzfa1wC4DzHOYesSFtfYWON/ynr08aP/vbqumK3v3defma+koQP
rmf0/Zj7YrihgH32zuJ7KmsqYvfER7f/vIqSKKYkSTpXRPbjI9MZkt7ncRyP
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
Y3I8EVPtoYrlWUVJd9y079W8nfxw2GcWtc2TBPTriPeBKvXJ5Of6nXw38Qh1
XhrXlVzHIdvmVz+e0rCObt3eL6FM3HFZ5EhZ0/1UyK3OHs898n2cjzjWUcZ0
Dn7W4kkdTeShUD7WfE+Sw8/wZvVk9eaGlV7WmeNe0vf2p6HEfb/gfO5K7Kfl
dtGx/E/zUAzjHU/M73fff6nM4n4bOh6m6zrizHTHtnpledJ3b9wfuO3ejVmt
zxU9xss7Lcv28xX+TxePtwvKZYvusCfn29hIuwzNdm2Iw2XuUIdY3R52keXn
+vyYnDgn/zeMSwAs5XCUt+8ejdaPYGhb8O+MwXc9lNy+6bwseyfXS39gOhT4
rtoncezzWpZ19/ZVmZTV/8Fy2W88kaff7+2dl7HJuazwAzmn8XtWMDkPqN+x
9Jo8c+xMXvjaHP/+J07SeXfa1sn7x/ftO7o+UU0p5Yvp+uS7Um7GV5MblYjJ
yeWbq/YVW2F3zDjNgyb1PrT54Hma8r0Q9smK8p6KF6T1Usf3yVV7NbvFUqnv
u2uEWSD1EIuXpWeP26JPyPn2wPRDzxL144UhfafPiEjm+8z5ttkncZbXz3Bt
VqdTx9oyBvd3ddaxOrpte1+P3hs9rKOjziDXLEQd+AF5to5Ne5RQl+e7bGX+
kusL+7S/ah2rO2boqzuvIeyRwTrKub63J1quiLak/XRH9EBdL2KcU/fpdZnT
PHA7S+pxfuALfXXuLIs9ZJb2hzIG8dC4nqjt5bG+e9P+oGKG/fhbjwIlH60g
7ZXLWHsg5aex5Pynvcbbc+WyTXfYk/NtbFiWeg3lP/M8OTI2RJgNSnple7hc
lkvO9fl+XpbJ/7XjEgC3JA1kPJhzMX+vQ0NlkVOe51QsPiyhoaooxG/KiTml
uirUM2+5FrAlL0seW1ORy+fu+dgpdNlWN4hLeAlNXYp05nmxfK6al2Uhf/PM
szcJ91kQ7aFYk4crtc1rcOP2fg2OdVSua5svJN+b+t4zoy6lnMuL5+WjecLN
5b+s1zVDZ8PG29uOtbSxXM7rDnuyvo0tGJ+eSE5cp8+/oHEJvEm4H9XZ8wcA
AAAAAAAA4BVR5xHZ7nEdWcQkWxOTBwAAAAAAAABeOCWP+/ile/T3V2dvlE+Z
KAAAAAAAAAC4JXzfm8H3cMcUq/MHg2cWDxcAAAAAAAAAbkHNY893Yv0DAAAA
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
H/OnHNXzptZeNthFY7/RcUCGU4Xa56cd+1TeuM04RPuxt+89SbMcR0/n1KV+
v2TPr85bf3/fMbZT2ctnPz36t2Ox7bW91Kb0kvdonX7QgERsr45M0L/zuvrD
SD1P1qe6l8uJrv8Jn2NeYheNP1f1cR6bakWbGrKuDS8rh7b8F9pFOs18nr3j
hcRs1nPxN1UZjKz9iDOCev11/R4LoTtN2EW1mp/oxexsChVneTwGKNebhmtJ
ufdILqtAfuaQaMd+t2+puKKddQWO7r8neulC/0C+hnoaK3Ac7VPR7SLcvhvK
5tl+2Clz7Zd2si6j6muxH50qz7H79fpkP418L/ud9KE/QcYyWBb/upK6K+t3
cStHfPrK4c8t5Tyb0R9PdKxZv1OJOr+nZy7J8w/PsaYOR9v+yvFheO/ZJKqY
GMv8eKap8pTSXPoIZ8qfW/jLZxm7zvshT/Es2/WeZZbK8pnSgYTfuPDpzs7r
SeDlsdgukucc8Db68eNHMk2LLOu4LjPUjTTzcRe4fDIm+81cf6jSqOfr0Noi
XV3wkPf2FwnfovC8H9M17aKLWGkXDWNm9PWqYx4tL2TlElLIrigK27Xss1Mu
rU438Z7OZ8/FLpr+jVz7uFfxXaf8P7vPaO2OYZqbY5xFL4xEucqy9dt1tPPD
onzHWDySyXlLlSdtl47Nsel7o4ENtek9yq7m/le83Yh8RhH5ao5er++I9AzX
LtbYRXScR9Zrz5YbLD4DZc4umhrHr2MXLSuHtXZROz+lLu6P5Abx+XOGVTsd
Xb/u6HLNTJpmHi58pcbvP8oe7nsTBh7ZptHOa409n/sjjc3V8D1V/LMxW0fv
NTD8vnziOvHpGTvL4fWw+Pykphb7KwqmR0WBT64jz78ZlvmyfijPz9MyikZ+
v7Tdal/SsfvbM/BYWw1CX6yh8b+Ff9jYcMjXJhfGvk7c0/l/7mvH2+q4raPW
pB+DXt1XsbNqXXcsj8vPwDpt+1vGh1X6gPb5eBw/C7nsrKG9f3wvfAjH6rMq
UuHjzuVGzPR8aQ9llKixaEJtO89zbNc7lRnfT6d9XsbG0E+FLLsfWD5la/Zw
gpfDQl2byyw+f5yXhTh/WF5le3YO1y/GxOI5u0j74g3nps7ZRanz2JsrHrdF
GsrS/PjcJiPjR3/7ZuyieV80lUc29kWZnE9qL1W3Z8tp0Xskt7GLmrN65Jyc
bX3Pmvl2q9ecHD0oT9hF7z54lBVFr2xFv1mgz8/p8uftInsyj/o7nfTL3iP1
JzfKVMwNfUn5oHWopfU8X581pZHX88Fd6l+xJo/XtouW3bvQLupMOvP9mpFn
9/dC9PzgRlhgFx399NfbRXxOefx+acfx/pEX43FZhs/i/jTT+0GO65s9jVr5
y/XPOpLvHo2j2sg4Gufm8vPQXFwO3IfKUW3WYbZqzvRId0Z/nG2jyv9obKxd
227n5uHFXjU2LsS8H6s4FXNhAoqF5SH8cGf67JifgfaXG7Ntx/e4NaIOz60Z
ranDWbtoy/iw6JUzfVOlifvdlGrd9Z0VMnk7dqc8v21YfpzMdzfH/H+W7XrH
MosdGS/xNLZhJffT3u1/ngR4RizUtblP7Hi/Ps5VjvnLnrOL9Pd9GXXOLqrJ
H5zRusQWaXKPjFE/gJM7X4VddE4vE2PLJeehbLBhztlFeo53y/4i7tfV9bWY
+83p2Cx93PQ8svaBHzsnuPUBmlovYk9w79b4aZxyib1Sxt+pObpT+yvz+rrJ
Je+pEndkLvCUrXZRW5983OzNmxzPMh4b74fc2i5a04YvsYvywBU+gPwcWNPv
/L6pKPH/24hNMOAgzzbkPv3Du7Qv1fb1IqXnjvnRjewvmEPsn2L3T27LU2U4
jN/N/SyHPnTa91PuSykpUXubsoDZlLYv1j3FXE8w5esq18EW7RFtijaGRbca
uuVYq9iYy9qoWoOb8aVc7Ed3mNpfpN4xcS7qKXI/oXtmz2QRf3sSI4zLUacT
j26xbavaj1zvaShL5NxnnQVkGDZFcUSepfTe0dSsqMNu2jpt/7LxYQGHY9uZ
+5WWyZNnUCl/SS2juWzyVbqKKNg29j/Xdr1jmbluRCnTeYdxFDPfoSiJnu35
zmAnurr25E1yT+uU6BPjz938mvL4XN/R/ujv1zt+Pja3JPbOD/T5UT+64bvM
pXGE5t9/rsym01IzGZ4sjte89r3d+8ZiDfF15O5vtS+Cc+KMUJL1YCz2ozv3
Hs6nkXbA/bDuB/btVHuZ882LWj3d6+noc78Z2gx6L/ZRtypH907pdPfmAUbK
Qft9DfdD8H0QS/zoPk3Yb3P2ir5XzwWfxqhT+4c7usdF71F7ssb8UbivedeP
7qTNqrbcLbPJ+jzIMwGG8ifzlsUdGs/juJ6vy27p/vVL2/BYOZy1i9Tfqeuo
tc1wNE6bNzf2K8Q+gZH9odrP6vj7bXYRj218mgLpGzXWbrgePJbvufgNurz7
cVHH/a/EGpYqwyq26A+4Xc30ICETVMEKWTDpRyzHEWOBjqvLcFi3vA9+72Ms
6l77eS/thzpWxVCu6N8v3m+u5tZP9+fIGI5jfoYinvmYXOdnas28lp8XJOza
wau4z0c756507SW27XH/DvujjpU8ZeXKPvvf2jX7vj0wyPziOmzvP2n768aH
0z5+nsyTde1NBpw+rl1MxnBU41qQFWJvc2Qbk3MlVVkuWwN9xu16jzLj/Z/3
Cy4furYzzzf3jRTnX43Ue1OVJ36mfB0/idOXc6b4W6eRa4q1itPMZU/Cz3Vo
hufA8LlHtV8hH2tITRuPmMvSvKqP7aipmc0tbSZTxPg5nrtRVzkFSnfsxqkV
a52sLfkqjqefHs8y4c/Lor+RPiKd8W7uPfzSPrZL5h1kTIjj+3mM11558LSX
6bHMmI3Tfq/SmHofZFqYXsrX8/WvdczO1efDLayr9nYV/4bHxNHrxDxdsfuo
fqvrSO1LZjoA/0yXP4+78P1v0/PJOvOeVNt/vA6yoK0f7eOg4/P5rVJ2jGds
esnRF4L9PwsskU7eBo9zdmpvuJqz47bIcZw9/iYujhKsjY/Izy1Qt/I5NL1f
sztk1J00t3WYBmqdIjvWjSoHHt+5XZfXMd0evY7fU7lIVxXllep4dkc/0KbO
1TqUT0Wty1vlU5TjcVzTPit+Z3xI2/uq/d6j4rd5nRhgJatX3qcr0n3zVH7U
RSz0FsM7tofJ+lR2J29nx+rRsXbL+bKkY9tzk6Ijm8rWpz1vB7OmjQfO83PO
n0rkY2EbXlMO/LwUER+Rt52OAxOP+XVcn6vIUXNDx/0Mx7lrfWZhdKap6bWt
z81jvDb+W0vVf2sVqTQJX+pqWXwCsTYzMa8qYrsM5L6IeXxy7ojc1zrXZ4rF
e4ukPix0Nz730/6GySw/aPt+e97pWB4P0/bEya2qPXfbbaHmoqRPOpMbbBxr
zvXDbjtQ8c66dcNtCqPX5s4mTZTFlH+VtmO6umylYln6g3zzuYm5uG61lrc8
bWoPWXt17J01tq04I0KdOxOzNqljofL46pGqRL3GOOXvsbQORdom2v6i8YGa
to+bnT6+7MVF64sTpmU/Cx0d5XRO5AgfB3hbDvlZDZFPxoR/SB58R47vs/e8
8Ha9S5l9J2wmEX/x62M8f9eUtlBq38v5lO5rmayzXJ/8MO193o2vCJ4/3bj6
7x4NsQ+tlV9tnz6O8YY6o6TfbY7nEHT3sfH1Yt13Zi/WR13WjsZimZ27tB3/
qSN3l7zvXIhkfQ43z2u3TOReprqN58zLTOdXr11pOanLoy1PfaZCeZSP+9eV
Kj81VyXSp/t/I33Euuk6jj/HuID8N6KuT+IDnrL0PR6TTVp3btPdyr6aIkee
N2B8VHtV9Pkiulzroo1xqn9/XN9qWl2TX61/cnP8Tdsm1WSwHn/1WRmGKZ/J
91AWI5nm+oCl2oPe2+J19E8de7sth848K59f9dT+zXfaFzs61UOG6LkznV+u
dzRKz23bneiLVa//ybINjzaLOieH51WkjY2PUcfw2/s9/N52bKxl2/KGdcfa
nda79GfHMWqqPuUeA0udd2aps2pMNz7TTpvRdNf6/CKWXt0+kqpuz9vQ9w7n
rsdZ0IabFeWgzyriaevJHk5Jvo5XcHeMocz96EQsChV7zdJzOvGy+elDlbfz
Rlp3/eDFRzupmyYt85b4iKp680cdTioKlc6g61P0weF8K1+TPBMDpgiNEz2n
jSsw+GERHWXpyTo530ueJ6K/OxNlp+XHglD7glydW6brk7fpQs9v3Uk7Y1E/
vDvafUKudOtLnPPTOadioW+02GMzEXdUx5TnbVrLjuTExpBrJtO+mqr/ddtN
9+r4O+n6SvuVKG3bQVyfpjPmd+N563dWZS76ydQ5ZGvq8FzbPzs+qLFb6Ed3
y+Zm++8v+n3ecci2ZHvhtkbF9PHHyfgR6myvVodn9eEeZar2pxO6miXbXDTn
d9vhObfry8qMnzMi47Dqsw54KeVsXJJTcNJ3yh/EFLX5PGBTUjhoq6WaZ+Nz
4QCAl0Yj45s/xXpvI9/dLrV0/r3m94tu1ev6pfhrcZ4bEfu9Pq8LzqTvqZbS
Zdz667+92es9I/XZtoem7rWVZ8OlbXjVq4bl3HTmYi9pp3uXrfQ/mttH1Kh3
TjUbHutbru/MvWZ8/aqZkgnN+PuKhMeOVGfuTthFwnbesG9Q53NXmkFdT5TD
FK3PaDn1/GZWdgh/Q7VucznN6HuaybY8fn/N7FoeF5PbKv9pYt5kax3OcVG/
W/T8SsTAEPHk8mLh2on0JRyzW7mer30MRQyrvKLE9RbuKeu84hm26+NjtpWZ
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
xWl+Zi0MAAAAAAAAsD8NFbGr4ssV/bN7xNfKTnj0jusfTSnWPRxm+Gg9P+rY
KSJe3Tu7jV2t7+HrI/oRVSZjLHAfuq4dkIfSl85LjlZFmXoibp2wnhrpe8ef
f4zxLfcdOZ1gDHwvj15X4vZW12aqMunP5rJ3jC396PgL9on9U8s4FA+PlBTt
6pOIu9D627HyywIViyKvTp6v91R146CrXJKj7KVRew0AAAAAAABwJaRfGtfF
3z+qc31G1nUOdU6eJe97p847cqJcfFcEJn1mWDJ+gsn+r84biouj1q/tIsMy
5f4a9QzbT0bXRvJInpfEbQuxbvOlS93lIZ4eX8VAePdo9NLT5qxK23UfsTYj
HjCS3xEfQbGe1Imj0Kei2LN67zacSOajOZ7XpJ9/urYk176sYVA7lorEfa/O
ahp7LwAAAAAAAOBZ0DRU13XfjuisL/Hv6vrUmBB+dDqG3Ngzpl438byT9Mzd
wp+xYfnlZN3s9A6Z39XPrshZsEcJAAAAAAAA8LooI3tyv83rp6bItchV61l1
5nZi3AEAAAAAAADeAnVVUGDfqbNfi01rNy8a5Vv38NOQGhX3PIGfHAAAAAAA
AG+HQyFiCZiWTbZtC/vATcqnTtXNyf37dp+Th81DAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAA8P+3BwcCAAAAAIL8rVcYoAIAAAAAAAAA2AIgMkJe
    "], {{0, 282.}, {838., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{838., 282.},
  PlotRange->{{0, 838.}, {0, 282.}}]], "Text",
 CellChangeTimes->{
  3.936948866284933*^9},ExpressionUUID->"858c82e7-8aeb-4ffe-9c1b-\
5dc005e31c4b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnb+vtch5x++92X3jeGXHa8dVmuQfuLxl2kjRsmmC5ChteG3FsbYxKzsS
SpF2KSlpLFHijpKSEndoKyQ3VBbd0i3S2u95wsww/IYDc3jvOffe70ea3fee
wwGGeXjmeZ55ZuYff2H97L8f7u7ufvu9+j8/+7n9z7/5zc//999/VP/xH7/+
7Re/+vUv/+tff/0/v/zVL3/zT7/4q/rD/6vLv9zf3X1U/58AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA3Byn04n+8Ic/oKCgoCiVb7/99tpq7DC+++47
YlNgUFBQUFTK119/fW01dhjMPvzd736HgoKColS++eaba6sxAAAAAAAAAAAA
AAAAAAAAAAAAAIDboSqpKEqqrn0fAIAbpqr1REHlC1YUqW+R/s4h3zV53q0d
ZNe+JXCGqiyoKMtr3wZ4RRSJT5/rJnm+S1qtJzQ7pD0SmMUxFR/s7o7hVAR0
98Zs77NKfa4Tg6xqvk8pTm+9FsfwHNqrlkryTZ1MxyPX1Oju4bFuq04qX1N7
ga1UVNZ9Z1UX/v9NPxHH8lKxX+Sk13ohkqJWpfxvY6PtlHo63f/QWX6/qoLS
OKLA92t961MUp62urbKYkmKHQVrfL7vnql+2HMev5XH9F8obPWVk1H/7Uh+W
Ce8L7Phlv2Pn2qsqMorDgHzPI98PBjpnrx5lclmN2mv2uJljikCnByPq7tuv
7/tjg6RUvpb2AtupMn8w71L313XYKf/94Pj771uU1/qPyZUZdXIV6LWNeOZc
jDJx6O4jndIFlZYGdnstq+7ng8CnL+tzs74+TBOy68+9pR/PUMRfTeaa/tiK
Jsdl9bvTP8bkur2iIu/qeMpD/p3Uh/yzQnwW5ptv6Vmx3l4FBXbz3OpjHC+o
+zCX9413mktpGvB229FcFDuPk/ayorH+qijQhscwmz3zNS6fbffFZHd07y+9
vYAKJbmNHD1a4abjPtbdQT9fFkXPzsrJZLr1nH3Y2FdT+RbXCsx7fi3DjSa+
d5F4rez39dE2SvJ0cW5r5UUoYle8K7PnL8mv9fIP3gUT+zL1NHr41NsVL3gW
rLTXqUx5m7Pn5Ubjdq8o8QzRXm9M2ttczI4zmnOH+fKPY7fWf5/Y3fn5uFdP
KkNT2IejU7zY9gJKMHljfTiz8e716fstyQKzsyO9dPF8zC/ZIvdZYHD5ndOG
qSvsDM2JF3+fh18q6sNam8WOsG9X6sveE82b1+mRNa8LOY297MQv6w1bbq+6
f2nsM2fF9wyt+1l9tAVpJxqLPkdFHvMVlk7exHDMuT76hbYXUIPpBsOLKbCE
/zsncacyJq3+LvAtLpdeOi87RWSJc5yV+YKchRjjqYi5fDKduu5bFWQp6kNm
60h7ZtY8bWzcuVckdj6vn1fa3ms0c/3YWte1z4/l9pIxiI+N9fpy33QlNrJG
lQWi/1roP9lY19J3rC2tJV3Y8PLaC6iS2I91v1pym2y+/xbxGT8tuF20JNPM
v3zQ/cbvKCiY+E0dMm4zp4uYHcJtUHfZBpXEtU/tztzMqWRjMDHFdUnzed0t
bQ7dn16nTGv7UZu+H4n7luv7OE0pSZK6D9Fn45dl4irbQkfCn0N9r2mWX+QP
LrdXxWPF3E9e6CM76v7rQZuVnfPtJfQx9wdmTpA69wvx6oJc7b7tv4s4nG2T
W2kvcG1Kcph+q/+VN/5wMBKKMrboe+9ikjZTp/N6xyQi1hbE9btX64k4sFob
ag7ue/XG+jqqLm64ZTwmjSgejS9nkfCFNcujsBmP0Wu/eyzqazZHaNyTPTIO
5fGD8aS6DrPvd203zj3LpyQNRDyB5Zt4jsH7sURRKS62V8/O3mKnp2E0edZb
20vGaz614tE3OY8vTm35gvvQLK6R8v4rJluf9zluob3A9eF+8Kcelz2p0wZy
XaX0eaMv3zf6YBI7bOLsY10x149LskCftb+4PjTuV33yNcrU640HC6Q/N40P
ldx2uBuPUVfJgq7eQfNM7Hln/IPD8wYeHqkN51XifXcV3/fF9pJtr+gH72kv
LqszfdCSLS/9jH5hffnsbV65vcBtUMY2aY7Qb9L+6ceIWFxF5tHI/llFT41h
YxXn9OFabH6eio/58rGcwecFz8v5eyeZ/ELWqZ9zk9fv0U/teOe1x4iY1dq4
04eE6wIWf22a6lREpD28HY3PNvOJNkwoWmwvqQ/7uncze9ur8x2sUW7X2Jbf
z3XbC9wGLHbYxt+aMTgZT6tY363J/rTRU4p2wBARc5qPX3f6cN5fFu/KXfMO
vn18241DV52d6vgB+b7PSxAIu/ehsYP7yJzcrl4lj1Nd7jeJOppXSmzr20Yf
aXr9POJhjKMS+TGW59c+JIvVxitnW2mvM/4y08PyPt48am178b5Oob2kDyPt
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
re6Dvm9RXv+VeCZppktB4PP3yfCSK93tJRTt2MZyDFu9P5c+6p5ybqx7/joL
um7LMTfkL8+xpW5jInvqOx59DQbzl1n8cB/H2odPVdfXTGzPjLnK3BT23tT/
5vGvTH7l8f7plvucqsgoSbPJuEloCp9CX5RBdfll19y7VwW7x6XHWKYBme8c
Goc7pYxbK2PEMt5+q/rwkrr1ST19UT8cdQ2J2njKcfrwKev6ehE20zieJG1G
3WNjoiWFrtc+6zK2leyap6OLN4/zSqR8rMlg6uqifqPPZU7jJIflg1C1utsd
dTyyDt5KhyTjwZN3p/GXRbtei8vq1h4bvmvyjbvPytrXtbj/ecw1BnetOL58
hDw9dV1fKzIHxRjM2SjImcvTq0rK04i/T+Pc+Nui04f+QNaaeMrdcI5KFkeD
eXyyLxjLKZNrlVzmIospimLaO1SfuSJeMXTtuzr0VX1ZXyOM0/ZdbXOAR3pP
6kknuW421Z66jduHUcT2JB+ZEVuPrU7Yc40tvM9U/OV98nQrdX2tyGfd5clX
FDuPM7qkfuZRQL7viDGrm9aHRHmgT2SI+RQ8bvfGbG1b2R8M+2/RH7DxpfYJ
VCnvBzQn3nUfpzLu8g932mRVHvL76s9zzWPx/If5gwVZd9O4EmvHYZ9WtnMi
rj2LeWvd5tqnlLn2TN83uSVt+Ugnqeq3P78hLMclZXPjsmFJQ5uP6abZ9Lss
y1fsxm3ydI26giGxrfE+yrL07jnX+iJemegj5z64V7YxzpH6Ys6oZtpkm0LH
32tf0iANsPYfbT7P2RvEGk9l2s5lcRzRZ7CYwt4aD/ShQj62lOkfGKbICWXv
hRNN8tEi++3g/RDU+q/5jeV8xd8/1rZP4u5vYFPdJu3T2P61zGrazBgV6+v2
XmOEjL3uHhdbOecmebpCXUEfETuUOYZVWVJZTvUgs/eZLd4++yYmv9feuQps
HQM2bpGkfN2PfcjfxpTsWBdnDFvXJAgimlmSZBtVIe6jLvlM+5y9fsbqkFCc
jPN6b4AL63Yz19jEMfK0ys3U9fnRxg7PjG8VsZh/WYx+tz7PAwAAng+Lc1yn
R5JnvCXD8SkMPB6nN9zoJvPXAABAhczTzsY9+lRlQXmeE8xwAMCLg81lg3ID
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAi2HrOVRV1SvldK+U+gO25sPi
9wAA8Nxp1qwZrynE9h3qk/nDNdi0J9xrbj8VpaEn9teri2m5k7U212Dr0tim
Tm8f35JufDVYW+6pyCOXbD/ia/OUJdsbK6PIt8kOtj33qkjJt03SH7X6GbD9
J6+98mGHct2aNb69MF7Yh6HbJ+LS5ze4bB6SfsE+XOry1Mgxb0ODvnR8SmYW
SzqyrkBQxF8JPbew7ilf64atB+tHN76eUEk+X0vOoZTJRy0bXrMmnLlBPrJA
1NON6nerKij2xF5RO7aiPwS53vug8HXjzz97uT+H7kZUsHXPYrE29q3sP6la
N7nf5mLp7e1zyfMbo7pfgLgPVXlq9l/5xK778oyyJOD7Gt3NrFF/ZF2BgK8P
eze/30Ls6WJ94GewzJfcm+JTK+4+lHtkndn7pV1r3++v71i1a0urVF81rsD3
1K1l2jR00pmN6wS0slRvj5LvSzncQ7ZZ61Rhz4MPgWrd+H5mb0y+J3LQlpDC
wJ7uBaH8/Gauq6gPL5GnsrY/2DH9a7LzSZ3YX//9yLoCxtK+KTl/t35iXX/P
3q1I2+hO68mv3FtuXL8RRWjN7llbpb7Yi2KXjZi3e5yq2GVZbUd4Cu6OXMN8
sldR0yeM99m6Bqp1S12N7Jm12YvQ5O3d/0b1GnOo6sNL5Cl17mfbMXE/m9gt
R9YVsHco5v1Y36aocvGZ9exiEJXYh77n08t1bO+09T45suZtSKlj7R1O8yn/
/UX7BajK+OLalk2fcAt7aqjWje2dNVbz0oce2723oA8vkafYknvvjHzjZk+D
/l720IfHImOHcm/iLBL7gtnjjb2eJSUFtr5hXe9j9w/ncUyziUEojGVknk6a
7ZLd7CX0oLExkfz87wJjVR9ee/9lhmrdpgi/xpqR0+OuIfajv9OCnb+6TJ7Y
3lZxPN7nods/sr9/2JF1BV3sMEgzip0uJms8h31SFjjlkRhfbuqi9/rTeY7W
h5fBY0LM7snEG5E2MfNzvreMrS/pw/F+29dAtW5jishctNtUrlGmEXmeT77f
K0FAviP6GMcPKPCH33t+tLBn4fHyJG1hFsvvX/Oo5wkYdR+r9XVgQqUcxxvt
4zVHOfJNbwa25i27tzwlp+lTnVX5OC+/5lmdehxFEo18w2ZP3Zl4VJ81fWg0
eVTXbi3Vuo3OwuOz1oLPqXKNInbJMEwyzX6xyDSEvWCwf5vD7w3DU9aH++Sp
4LF8Nm4Sjk54zPMEDBk75Pqi9Tu6/ayXYhxsrMuon7cr+0+2V+nNutdFO7ax
HMNW78+lj7p7n8q9+9Qv6botx9yQvzzHlrr14WPNM3HDI68hYf7y/v3oj7UP
I3vqJ6+hWtfXjtyXXh8FZMtG3sb7E0uYjd7JSEXe3W3sQ1oVGSW9vFxJaD4M
YqQzv1SWX3bN+fzg5cLucUlSyzQg850zGTuQMm6tjBHLePut6sNL6tYndh4X
8wWOuoZEbTzlOH2YevqiLjy6rq+d5bzDzqaabYcsrG3DdHCsfvWx6C7ePM4r
kfKxJoOpq8/usyVzGic5LB+EqtXd7qhNZB3mckQlsh+btFnjL+tX7bMuq1tH
TtZivsBR1+idUXF8+Qh5ysJ3TW5191lZ+/UW97WPr+vrptmXfqGfzZvc+h9b
0eIZyiKnyDXEvvVXf/SdPvQHstb5/4Oc3TgazOMrE3dWTplcq+QyF1lMURTT
3mkCmXvHn+fQte/q0Ff1LAcljNP2XW1zgEd6T+pJZyZ/7ynZU7dx+3SHC92+
NDa05xpbeJ+p+Mv75GmurtJ3G8ehYuux1X9H1/W1wtZlKBK/zcvLZyZSlE3e
qNAvU7k8lSkfb3MMMeZ1fX3IdLg+kSHmU7TjQ809ypzEYf8t8jdYHmYrqlXK
372leYxLnMq4yz/caZNVecjvqz/PNY8dfq5h/mAh7KSRPTj1Jct2TsS1Q7xb
6zbfPvLL9bHy7c9vdNoy53Ogs2xY0tAW87Oy6XdZlq/Yjdvkaa6upZxXwPo2
fbh2ABsnkd2aal1BR9V71myOuRxP6dvWzEfgx9T9GDtmPfYm4nOqc9qOJvWF
XauZNtnmo5A17UsapAHW75StTeOjTMebjWw6juif2Xu3t14DfaiQjy1l+geG
SVYz/1p3okk+WmS/Hbwfglr/Nb+xnK/4+8f6gluZb7mpbgvtw2nm2gzmIKlc
Y4SMve4eF1s55yZ5mtS18XPqd0/TZq47yvtQqSs4kpI8bTh3JWfxilsa32fr
GLBxiyTl637sQ/42pmTHujhj2LomQcDWv1A8QVWI+6iLyhoaRcbqkFCcjPN6
b4AL65bXv8vOBSIuvMZxHCNPq9xMXV8jwk/Tgq5t2dykh0/nx6IBAOAlw3JX
Nc0kPwzJs95yfyC6hQAiAABchYqKPKe8gFUIAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAA8V/7yl7+goKCgKJWXxHfffbd7LjoKCgqKLF9//fW11dhhvH//nr74
4gsUFBQUpfKnP/3p2moMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAb+
H5S8Ohg=
    "], {{0, 125.}, {324., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{324., 125.},
  PlotRange->{{0, 324.}, {0, 125.}}]], "Text",
 CellChangeTimes->{
  3.936948885136937*^9},ExpressionUUID->"03e479f5-5c7a-46e3-87a4-\
7f2e0bd803ad"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvb3T9EhyJ/a8L2eHy1nuksslTxHaoOLoyHwwplw5izkZxMQpFCFrMXch
6kIOe+LuIkD9AwsTnkCvvQU9mG3ChIn1YMKECRPWdKmyqrJQAApAAd39fLxP
/iJ65n268VEfmVmZWZlZ//CfT//x//789PT0337O//Mf/1P0v/7X//qf/t//
/a/5H//HP/+3/+e//PM//V//4Z//+z/9l3/6r//Lf/4z/uV/+PT09H/yf3zF
/80IBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQ
CAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQC
gUAgEAgEAoFAIBAIBAKBQCAQCISPiL5jbduyuq5Z2792YwgEwoeCIX+a7rUb
s42+g/Y2or3voLmH0NUly9KUpdnltjXhC11buq5lbVPzfrWv3RQLetbxMW/4
mNfvgaEIDwPQwdulUwLhHaGvmP/0xJ52fM51z+os0H/753rzNVUWMT+IWPUF
ie6uyljgByz7kjpFINwJ165ike+zKKvu/uyuTLT88dL7P/++6FnmD/Izre5v
NLy2LKqzUPQtPMk+/s3pcsOz9q0t7wLXmgW4hn7lM3cS6Fh2Ctj3UfZQu/za
FczD9nln9gWZtR8WVeLv0us++zDvLYsP0ekN7fwCdUMCAdDXZ8FLcVayTvES
6EWwFnz6WcBKpPm+Y9Ul0faV/E5eF2yugT07e0q3qN+b5O5ZfoqYrdl1KuWX
n34hOsCbw/LYE94++jp9rL7mLH/eBvrqPJafd8SryiLlo/Pg3cqO+LuocLlx
mb/f2dy6ojoHYl2d9vna/BuLMktf+Th4L6brduzs83Xfz8i+ugc4L0Sn1xpL
6dP5JohZaexHAv1JOVHq77q2YmkwnvclOn1EO9+ubkj6B+E2gH3161Mx/pLL
hVDZV1PaqmKfJSjo1Vrq4mNsioxF0Zk1745WW3ZaWNv6pmBJFLPi/XXqnWB5
7AnvAH3DsuRf2LloHvP8HfLnLaCvs4fZV68pi7Bf6W4H9Ap/v7O5dQXszdnW
1bY4MS+x7cP2rMwSFqfFC+jpXCcPPpF9dS90F/b0nL6afXV+fmbFhCVxn3nm
twA73mjrEp0+Am9XNyT9g3AbujKe+zxX7KuuiPj1lb7uS1wDTUDcBPgOv9we
vl3Q2BNW8c7kzyPtq9fET6pf2c5+rfL3O5tbVyzprUX0xLxX7yvZV/cE6EpP
3muNZccSL2BTi33RvuK2RGTYEi9pX71VkP5BuBVdeWbZ1EBfsa9ARwjRHlNr
YCDiGnpWVxWrqpo1k6Tkvu9U7mw7kzVdU7PicmGXouT3tfwZtbM8unYtK4uC
XS4Fqxp4fjXLh+5a/nx+TQHP7+xPbvl94ppqnHt+7WoWqb3rC39w38uP6pTO
V572V/7esapUbbP1G/Ld+b1tN7Sh4uO3O7cY26Hz/Ds5D5BHP507nTfeiPbA
2MN8Ta+Dca3EmMG4ztvTViXv14X/Xomc/WqSB7t2v2u/V8fesR3b6FnDn1Fc
5nMvfu3keDVm29R4N3wMu9m1je5HI+agcaLlgT/4uIgvWjEm1Sy/H2muGc0Z
vrtpO6dnmvfK8a9H904h+APGqKys77X3uZdzLWo62OYF6FTRyMI4tfXy3Ajc
oIP3rZQ7gnYsD9/Pn7w/Br9b3zm1r/qBrmf0bX6P3V2SdyuyyEVGbqFrQD7a
xwra16q4x7hoZzy6hE3+dlxbjFaK8Qd6Kis3vtN3Ls210dlr18jv6gnvmXym
v+9nz0TY9NY6j8Q4QEwlzLY55yiDapNHdsj8ETbWpDX7amtNWMMt47un/fd6
z3Jfp7J/mS47zusQ1/npVzFrNC+PrlDy4iLoVdSTuGsxl5ad4/k8LttXMPfh
3L7i/762tR6zRe5z0LNsWNINneXvTv3HlVdd9I+VTu3nz17KaRjDemUtJnwB
WLGvpteJNTDJWOw/sb8MIhaFkiZPRix5mXw7qo0hAbGtn9jT52eWZpyu8mRX
TiWuSac04zT5R9Hece54zy6xr6/JIl/pAM3Q/K5iJ3VffM5Yqq4BP+wo33eW
A7qeXw+55vA9xD7nuWrb1yErlNqFOW/w+fMgZRm0k/8exzI2+jen3Fk/aC+n
WRv9U8x+VPn04RnjrLn8VPIC5jXLhvY/eYnWX+tLLPt0SlmeyTH2YxWb0nOZ
A/d7P7KMy4E8DWf5NWv3u/Z7a+xd2rEFnHsxFnnOkvCTpB+cpIU8X3O8tV7P
+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
4/uQNdXyHqe+Ous807a0LA7BdpN1fE+TzsA5pCZPdXXJ8qK6u72l7asNmblE
c+Ho3m09ywV2+bFvLl154RZeHcmnLTi2SeePjhckRWMt7++Zy+DH15UkvAB6
WeO/U/VuwS94qdvF2v+9qpECtnerfoczBvLoWd3baZ26LVVNsIs832rInzb8
yKq+RLalIyvaHdn8qrYZ5sRjnRgvvgzrYGPq4IOf/FwOL4R6oT//odB/oy4u
/fjGed4wJqr/XnRhneo/7m1AzWpt0/DrRGy3N3zX9w1LfRmLVul99KEOcwzj
tIOXUTfLG7ypZecAa5EOsXn6+UU9n1OsLfccG3vijbZ5tQ5u6MbC76703q37
9/Z7aew327GJTrRhXNunld9N1nG0wxP95VC33Y+HeWdTut+javKL2yLV/KBH
pZNxZmI8dVKg9EGYNfV1nW+T57aeye/HZwIdYF2jpGj0tVirCeYE0fDxgLlr
Hfrc92pMzfYb+z0D28k6loJG0LfzzbCW9So/CeYmr2uWcPuq6gb+E7WXnQbc
2BvDWu99rfNAo7zi/P87YTu60imu96YsqpXOD/pSxWWO/5wKvQpl4Anmw9Jc
jMuf2f1b8s4mixxk5BawNlhiFPEuNJ0MOq2W7aJf7oS/KFvZnrVFxlYCbVzq
Qc5BfQtTjq9hc66LWvNUr2Q5yPdGy/xCrTVmTUoVs+wnBu0rPoPaPJWZbyjz
2SHXBHrQXsJhj9G4JzfPJ3CW+XvWJMmvgm51m7dl+uPH905r6sZ7nNYvZ7qU
diH65sBfJW20IQbddDEBvQh/jMCQm77XZ7E8B72YX6ylDmtX24/PWhuu7Vih
ztsAOkV0dS72C8Hnguvetp612bKZbijbsEM/2sULjrzK1uXTJhzb1Oh4Clxj
e10DCmR5XSbOeWyEtw2zbv/Xzx779nk4m8CfnOODdjdc5yldou1lrR34Hu+N
Lo3MdTK+gz34rk5lzrXKgwrUNXHu4ItWPoAglL7wIFAyY3JmQFflOmfVU/pZ
NvKbc7mozhuA32b7tAKNjD1Tz8EasajTQv9Rt0Xeu7aVOBtDtEnFWH8X54YP
5azf6ekz7Dp9PgOOk2ttb83L/HkwLn/pq3M6uA5r6hyzebDIC6g/GysZ8DXm
lCgbuOb61ldeIN7xCz+QeR38Gea6v3b//n7bx96lHdtoWabO0/DUeEHs/Twc
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
crLrFbhmRCsBdkfuxd+O2FcYvzGK7VlAnXosyBr7j1ATo7brhzp+xLpWtmLN
T99l4NT7QhF/Z42xNekG+TNT+8NRovJruP07Ja/6Ekuf9SnV+8l+XGyud9qv
/TTk5OGzcZ/gSa2/rYodis4ZyxKpy3pRPtM/p3KlPvuj50g02pcw5bG+vkj9
0PuRZflZ7Xsng66o7NJTmvF15Y86tm2bbludn2J+suZPOg8BcoyyxKg/kJT6
7ir7UeWuZHyM5Vj8eZBqfdLsZ8DbFnN9+C+DiEWhyqHMa972k7BhYowlNvrl
BGUr2ewL6N8Z32XKJif7StktBg2iveLib4cYw3xnAs5N9hVfD6auPvD/YZzi
cb1Pxhn+3I9EvmuobM7MSDzbnOfZHs4wLz/ECfuX4FnfH7ru9+C8g1+vcbxW
28r9kHflYM911WWUY+xiX033NbawxsO4lzrdO7mEczn5WJ7j4+YNMipTPD/Y
F/Y6RO1lyBMY06/dvlqX3b2oHQPtTzOuR+fJ7H2bvThsX03RsSyS450oRfB+
9tXWWEusjlVfi5x0sW5weyPH/HWgIYyfmqx1cXzSa+qs/CnmM4qxz1jkYZ6h
Yd1Umd4XhriuSMVtAXniejn94FiXybczem6LP4zbqGml0TyC12+tk2K8Rmtx
K8bHpm80eWiM9+17bTr2S8VZlZVsqxdGspYOyKamFbQN7cfcGt9Yb987bt87
lPLlVIzX8pOityw36IvT5blojr1G2Vf77TUlz1ZspOX15ti9R+0rs77Q2p4a
oi0vlpoznF5jKf+gxlcE7edyoxm9qNbx+dMmVtxmG8VaEx4LVXNkKaZG67dG
HCjunZp1TXC/2NTVUE7HhYtPaLA7TNpDn3QqFp6OpZ70wyHZ4DumtfdscgX0
73k+fy/q242uVfH95v4q2oC/FXkjco1IRsqF8gs48hzoZHP677XNC/vCnVof
0NeBc3E2ma6XeUu//MFoq5HLNMjFnp1VXvjnXw97QTiXyZ7iUYaenRaV9NXX
NauKTNeZCM+l9Z4t+ypVNID0iH122fM4gqN6XxE/W2UstvcW+wp5KSo1lQve
mMZiL86z/zSRuZ3MC5vUf0D7wjlnTY2H3a6eX4u+CzlGg+2cHihU5mRfKb4V
/opNPnThYXstiEbp1+bcP5rnUM6Jee1bKQcNerDVEOhbGec/lXdT+2pLdotc
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
tAVVfQlPz7P9dkH7T/Icguna3ih6NnU9GPdG7dHCPW0/0A+cW5PHwdAP1244
8nAZe6N1FvwAuG7Fl3o4R+iRPMfnD2s9xkU9OR9QAmVmohWCoW67H1/0e3qo
h+fLfJSqc5PdQ37noI/iOGSOov0onzWZ3JM0aalTMeHoP1/jM7SHXP1em2O9
MVba9jb0NbHGKN8IAK+B/Rotx0vpn8Z1GIF7KkBrekz4XOu4+X7IhRlqu8u8
LHPdxfOKQG6A3WbaXkiP0cV+nhnmuE73EDfXSfHn0losgbbOfJ+kcT6HdRk7
cq+Ub0z4abmtPLpH+WJwH7GvEj1+VZawKElZEp1YYvDHa0PKx5bLH9+QVeOa
OLg3aY0JmNib8xcMtSNxFDtFw95qfftOxLqKeFrzo2gwr+r5b5bz58aQsm7E
O4pPzbpYpp+23nmv+FrJqzqPR3LVSYQr1Jkc81+F55nPpzbOUpjrzDLn9Dcn
sx5MK/amrPnmV6MGiTP/DDy3V2cnLMM8I2PYIxjWZ8y1gzHH2kQ6/86QQ1B7
M1b1iL9WOQ2nIzJHybNktlk8nH3y9TOeM1Sy6jLo50Uz1HDT7R7VkVdnhUA+
O18b4Iyh9DScAeKl2uuv9TZ8F9Qak0f5KFkcSt9hEKjzCCzncM3Qz9snfJld
rWOn9PeWOJS2yvQ+D+aNxMYY414WtNnD+emHfHB8dlw0eu0e3rddF6JQ9qx4
vnr/ej7w4Gte/PC+ROll82zmvi05fQ31LKC2LY5BwvsDesc99q/Qp4Vjg/0c
5fP2KlaIz10UnfTv5vk1x+uzZ5pGPFXXoqgrHZcNernrPA/nI3aanj1f1YQ5
BaN5cK19KQExYj/qe+FMrUi1D9qCj+q57pzb4o6qbMjn5WOI9aNEX01CMNaJ
pc9XXsDSvT43Rx4GmRbhmQGBtJXSdDhbCnj0T+fAaS6O8dywhzOSF7POctl4
kn3xvld5O2kyxCDBPVhzm/Mb0rRO2VyR3RAfiPISnhNg/b7cndcO8xkDG0Pl
7YVwppjsI5xXhLy2xmeNspVAh3RopdNYr41VnfqCHkWdCj+Q8ok/IzfPrsOa
qEhzWDM1uVjXjwr9T5+fNX+ZpgG0J1EyFteq6bqL+y843nI/0NJfy5oj9rcm
9fkHrK2T62sxAvbi5n7Jnl2ib1f9NNvo2ZmP7XQ/UZxXN5vX4Xw+yRfDj7I2
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
F9C3dGjUGTz2NSAdFFkKWZZZf9I0ezVdiPt2e/5Vj/msmGdVZSJuwWg0P7C/
tBsnyoqpHSXl4559VUT+0m/1L+KMGvbuL74/8109uETF7jhXfR+ZT7Q73431
OvcMkSPgWvdEHOn86B7AYNt+mdfEidjbnw15oUrn6f1vGibLXu2cvA0s7I6h
n5zeo5v5+M6BvMMNelYyVNftL63p92NeAILvZWCMQY8HSrk4j2dg/akeg7ay
OexmtlJ/JelJowmVv1iv9a7R9n7UX66z1SxGb+FfdTJfSc+l2vKvPBmbvrV/
ZU8ntu9XxtYN+8iNbY8uwi7UXqcpl2DOC/f0r+ax6PmzlOz4zgv5eRw8tpim
wz6pbW8eo58jaW8amzfHB1EX1nXNa4DiKIRfLu5C/6l4nr5OfK/J6F+tj0fx
wpBXLvPiRGyV/W8k1sSR+z5H/StVwzJ/9zhH23Tm/KLlBzAbxQviiY9k6xso
/2bILfACyMpG/nrcm1r4LW0r91fs6GONFtUelr5vd5V/Nb9G+ifj/e/rXykb
azz/VewrXVNjPfFxZTxtWeNbG/faFrjGv1L6w2QL6jk5jB7xDJMnXW+/jGd8
OGEMcRiAq3oyG+6nnqXm2WaXYzUi8nk2eYyvAdU/4chnlA+Cho7Uk2Gs35F6
vLG85rieObZfNMej5Aci5ut17hniPdnvRYz+lZlvhS025ym+R6+dFYf55eO+
oNxj/kO8oJUhP1rLXw9XbJDXxpL2xnx2/HzjuBDEGWyUh1vcc4qO1+HWUBVM
XzF5dJF7mSb/CnVgJHP4pzaP9g7DhJ8LLd5DIuShtgdnY3NYzmzTv1r93sin
S5/sWlttd/Q7/hX2p8X1/JM/19Hb+1f3yg+0oxO792uyd/Tryb+6DVZpRfub
EtM3869W+lts+lfSDwzSUtQ0Dp+a05ztEZb29quZZzFf1X16GvKx68qg/3rR
h+YbN+a2bS/7SCMtz4dpMx61Fj8GKVS1PveKz32oZVy8n37Ddpe9VQ/WRizR
QZGGg426sMkO+AZ4/s1Fy5MZ9lVlfBrXc22otvSxKjukbNT9/E26PerzLO5/
B/9qVjetzm/Cy3CvE32ta161yidA/Y321uL8I22ed92/2uzfLWKlfddA5Mpa
inKsiVb7ST+GmehrUdWGPivLZ/H+GC8V/+9DIX7pVz9MT8++m8iPvU+JPWLG
iyG7fF71r3hvolm/Ft3ftV2DLT1TMVlzYXJw+pTRtjxztu7Z/hbX+lc263XW
v0ps9pD1scj4lrO6h9TzuFsmbftLUooYnPSvvvwYQlnXC91k7lMl6IjvCxUd
j8NfK5tuBRPtYS+hNLxM640O5E9t6+UeikT0vOc1UwVbw8zUP2Gk8aEedoid
aX9n+jwtZ3yM70Hrb3BEx+zM7Ob+lV4De62ttjv6Df9K+R+LHgAwxnJf17+y
pRNbm1Lk+5j2uMm/uh3UeRamvOsynO5v3Mq/quJAy8Ox869Uz5Zre61ew7Nq
TFgD1GnXjvZkDw3qE3U/b+zvcDGc12g7HrU3vJfvYcqpjDTnaf6sVTkh578L
9Hsm+47MdsujyZ7aEG+ayW2sJ9N9vXlPsLbKhZ3xLGrWeNx8xV7B3nW29LG6
fyXru7b2ryZ0+4D7V1O+GnM9nSBnstmDy7WbKGwOyvYz9f8a5nXn+qtm8Hk2
rlW6bpb/oPTKPI90DUP+dFJA6h8fr7reOjbPxm3qXbL3eS3/jccxTPt3/dg/
ZkpmphzLbazqGeV7zOphrtkvQpzuHyj3YZZ0KOe8la9ouV6nntGbYvw7UPm/
mEu9ISaaRWyjEXtbNvnkGlSs5j97MaTBRn/PV8YyPzAGN9Jjpy3k0V/l/pGd
R7ill1X8ZqzVnp9P0Mq9smmej3oPeu0Mzy+wqAt7O/8KhF9tHKM8P1m3T97K
v3qRvTMmNdQdRK7o76Tyk0w5jp60027tX9nTieW6bfTGJf/qdlDvaHmm4PJc
zrPnX81rUorA1/jLzItqXOpZyscw1Y9gH50j+YGL+hipt1f3nNW1Kr958jPZ
eyBt2ZgTto6V+G4SW7p2PDLXa97fDDDu6A19Iea2XJuHE39j/ixVo7P021rw
PztW/ZFQJ89r37An9ZBb3+/IQ/VvR8QydXRlONDfWDMze1iXixwUS/pYq4NT
ez2BZlxs0q0xT2G8Zn7/odZtuP+Of6VfvPMsM1+Nz+A2OJ6TdbW8bIV9u6nD
hX+1W0uh5P2Js6GG/oHP6zym6uvnZxwre9U3bHSgzz+3L/R8uiN9dBS4P3fw
DGjMeW27jvc5tvm0bXeT/BMbcJozyTblL6zkpUz1BtaY5VCtJB2sn3/VQ8S+
X/RtlM8wyUerOZ0+/0r0apjvq6vYt96THvdAsqwY8yys18v+GQPkvY/63CpG
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
7o80Ple8v07Nc+N6XIsiz9lzKlguR89zqzmd87915vv1Lae/wkh/WzSt01Un
6LKe8uoU7DeleE5ZTflhm5ZGrMnaobeCnFvDxzJ9BtIVrlWOdI7rzGjDnq83
eBTH2lZw0elp535b9Mf/flDWnqE3kz1son0dreRN8Y6ZLCoySJKxl4fSqcLN
bPm4OU3MbrY3/z1wOijW+ZtNBCpGazmjlcog/xRfqFeJ99vjtT09b4ag+ZzR
HdI871ui1kqudaM/s5/L+53xarT4wmhU0Ynt+PZk75ExbvlXe/R5njfV+or3
fHR+tuMjXAm9jlr7uF9LfEXmN2z5PusxKclXG/4Vt92veEan+k9ovlCd/Ivc
45pxuayf24ujqGfaxFteugqy+R4Tm0+INsHnZ4jTVNgHzFcq5sqE0dbl6cno
o2JfwKUfOO55TWnxPrkU6/7V/HdC56ep0I1BJP4X9x2nr62HPBT1TX6cQhqI
/w6LZvv+ydh7w2PXhe4T/G9eAMHlSdbUMd2E+6RsvcPIl7W00WxftYXI+QS/
cQNIs1SsO/t9qhXWqRxV/DhDPo9WV87s+DQNd+ZowvF7qHpBL0ohS8W4/rMX
D7mqu2syxMvHPV/944d/E3zD1iBZ9L/cek9jjq545+Oa4Zp33bJ/ix5D0Mc9
ytAG/KfxnmItdp6j1kHSqPpdxNbUkWs6ndb++y/CH429XITs6fj1T/I6FVvQ
a/f1Oam9cr0fQZ2L9+74MXun4t274c7eM5MR7mw8OM8w9Afamb8+nAf+Jsky
iC5yj1zbP3lps3G8jL4iTaaoGJWqXw2YjZxGYo2dINPsph2a/j5gNl7N36vz
cwiBfEY4k5V9nfP5fXJ+Ye8lEXOVvPuyQ0vyBuuyVls7rKFNI2/k76gEUdf1
SV7LbKgsmryvPezxaFv8bTH27y/Z6vvepj8Be1l7kt7Eos7sYTPtq/UP5PqH
4ciL2AMM/1fFHpW+D1Pxjr0gHHSfioPazH8NqIeVDAkZzcZSZukxVrQV8Dus
M86yfxPPZ7SrSFLvKYXvMUUZyP4ehoJu/ujP3p2tnp+vbp0N7wXt9vii6xxz
H5M29xcyxma8rXzWJQyFHWsxvn3Zaz/G4X4G/2qbPs/zJub3II25QTLwJZ4T
OpKCpW45zT+Eo2iLYMGv90HD9J0L3uUCF8uP5/4VVlLMrof0Ae7qXx1+Btp/
HriuZpNpf1X7QnO/QD3T1r86kjOvPZ3nkaKcG+WAkEd6vZkC1vQtn8X0maVe
uSfs/atlXyyV/3nR+olU8VLn8b3Hz8varzlQfyp9POZM9pB40ub6w+hfq2dH
mn+t6umCUj275bpx3ssLn+MZ5lwldnPcgu09BprX4wO9mP9vfx5pd3VN3KdF
3q6yl6fzbSF2Py3eic17UrYjf07fcprX772Vx2Re454/Y37N/nOk7c/0nnaV
eLeazWn7/lWsZy2fy9RfQI3xs5dPfpsz2vzGFfa2ev5Fu6+6LtwjflwbaXvq
+h33st25bS37EPwpGOtilQ84jeE0wjbEMeUNtDL2JHKVhQzDPgzDasmxznOr
t2gaP2OMS/Z50HMCDHWyqqfPn7X3uU5LNrJ2XDs816KT+/+4P8LzDmf+Aq9r
tbDhbHlUzdE6P3CH/mxl7bX0ZrKHTbSP+Sn6+rd5MMjel7aCqpnuX+FnFFVC
DqDPaTt/M1rRb0znA2ZTPGn3Hu2NqZ5NMf4w6Y0lv5M0os8dvxuX+Jie11H4
T4ucF1xHPSfStNY9o01nITe3x8vpe1SMnBZta9v2ZK/9GJf0tEef1/BmFQub
Sol6JVPm8eqt+V3HP4Sj4DbHyrvl51LYbwzvoGO+egpZlll/0jS7Xz62he+T
rvYC2PevLmlz6hl8zdmnyoQvhfFJ9RO031COfPGSiZxTcXzTc0zPnNpsdhh0
Hc5LHy/65wY/4lfl82lyC2PfaNu8NRcf9a/iiTCUdd1azxG1R6mDy1EbmSVp
ZK67eH7YzHac+O4SbSbnor2XNv15ydPzcc/mGOr21Mpv12B1D40X5mjmsYaN
NZnXJP06yc/RHi/3MgbdZ/mefh34d9wnm8Qmt+pENtZ4fo31c2aPUL1elZ12
7fvfnpe0qyY+bc/1tXic9C0W53kIu3CvR9DWPHl9qzZP9T719/fSmmpf5F64
NqYx764RdDV5nvjuCF/8Y6D7m6MuGPKKZZ7BTFTy+hudptdoyVbWjvniw0TF
/0ja8tNS4x98bzv1fAd59IiM2Kc/C1l7Nb2t7DfM38OL2J+c6NOV8Q896idx
RMNzjq4XjPsmer012tRiPyLhEmNO68Pv5D6zp60d/y2jn1Kb/Lx+7Kien88Z
91P0Xr2/Mnml96w10rxxbbbHO6lBV/rCsg7qlIzfGOP43H36PM2bIM6smcsV
rGWf12Gsz+96eU04AsUTUzsG44ce089RmkISepO95kdDZsgr2/oMMvMh96+m
UDEzvdd5L3MBfndJoG5qSC4r+SUG7OUHqnov/ODZWo60cfHVK5sBcxDwPOIk
EWdRqzydaCEcxtwLpTPLkMmnB+hPeyQ/cM9OHeKXjEdwPfi6JOx/I7FeuzG1
4X7T35nsTpN/hbQozuasoUhjCINfwHUMtYGrtv/+HPdwZJ1M8dt+rg/21mTD
Phgh9yow9gv272mvXv2cf3Vk3DvPkbHaMTZ+3fvfe97gZ8j8OvRpcE9V+Kxj
jjnmLok1TYa8lOF3G1h7rtrD0vcAOn6Waw1VweROGMDFdVb9qzUZh3WueA88
Vz2OQvjl4hplwRZNT2l4rgvGXGcvZGsxrEky5G7u9c+xlbXrtDjmpeLnG8eF
IM5gr8ziHI/eyr+ykENX05ulf6Vkh6vvqRcGP2pcl4lfeCP/Sp3duKi3ZjQs
ysHW6w+WtocY09xGmMuh43p+hIqJqI/rBZCVzeQ3R32XtfFO1mTDzjLhlOy1
8a+s6PMcb4rHdeI847qCNI4g8C/cRpvPe3V+N5DXhAOQdDk/q6iOP/P+2QLM
t37S6zYeC52se7T7lFCpuoSHqr8SNfzzOmIVg5rH7LGus2CyL2Q2RpzVbA1S
q32pIaa/cU4J1kdWshYX80HU/qXaTwnSUvYbUB9h25lSn1XMU+xft3wtHmEL
+mj91ZacVe/7xyBltDWlN1yX3bMOlM12wCaf/LZvIPGFHuZ57+yZWWCgzQO2
/xn/ynadTGuu4m3DGW4n1sTEq5hfonjH9j0d1r16T4LX8K+kzB7sjivevz70
PT9H7WmUwWe4DE15xD2//BhCWdeLNd2qnT88T/b/i0TUBfGapqIe5NQR/6ot
kqE+D+sf6spMl4dtrLl/xXyFtJzpH24bNcO41mjJVtZu56rWkIaXaZ3X7CzF
Oc7w6DX+1S79rfhX5+nN1r9C30b6EzywPOZiZs3M1zHysZ1/td1LTNaXMjoq
16Zl4V+Ntp157gv/6oSe11EX6RD3UB89F+383pB5vPpcH8W/2qPPM7zJb98W
4MvcZ5/5ZKjHTP3T9vyra+Q1wR5qr3ker+rqDKJ0rIPHd+jOYnZt2x3zdRl9
mmp69z73q9URMapV32cnHxZjS6a8ll+HeFZn/QxVz7noCa/2vXf6NKu6rGhV
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
96/ic1CO6YuS07Q9i7Yg1mnZeG5vvkc4z+rMf65VQWB7un9P5+3qio77zd1J
yn2j5ofiheIW605vxO/nlvsPXePNqxj29Is450BacX3XFG/0381t3pWXXSxq
3xHGV686/jeFHOsfm2GDn/Z8XPXRqNcjvD/eP0MXcb61rZw3VVNpOU1ZVkN9
TNHNyf7bM/2rEMCO+PLU67/JvyIQCI/iA7fRcte+5LidC2UzmXbraifptXIZ
hH36Wdl59xUX0z5TtaYMXwWwHf+yiPtF/Ju5na/WbrNfmNO/168Y0G/KG8On
XJQd4PQZcmgLMT7sw8QqWFutxXsS8d86r3eR9cCKoB+x+mDvyiublU8FZxyq
d8FaAOhfZXVvXJW2j7sGhup0LNNVtFNY9lR8XQrVT8B+XGxGiTUd7TukG67z
p5VRcmy8v2OgPZ9Usm7EH6qVT1jb0i5dNmubfKWjpIP2e+b1nbmw7Ux5XXli
2uDg7+aejRGmWYjmcTlI5xP63Z/kqw8r+pH5/tWg6rGY1/oqEzSA7dr+JG02
E9dTWgwjznVznt1baQc2hjwI28+aR0uUP91o37enB/bGMA9nT2+gPYp71tuD
lPJh5nKA3gT6f6XnHpeXJlc+AfZD5tHn9dU4Hz0iV2H9GJqD07Xyxnc/v5W0
nLafeyROE/wgT1aTdX9c523qikLtw315Zuv0vVjyJmLOjX0NcY3PoST/Klm/
jNrHLK8jm4ZG+dBTorxsA+QWaLXusVR6fB+mgQ3aj/X5ie3A82Z3p6vMlRP+
e2L/8HzyzWcVW5dV2Wa5TtAowjIX182Jr34x/0r4y468kH9FIBAexocte0/a
BmZ8Pa6d+dm2Q209Jv/GuDWrKbWfa9qJW/4VtlUG7FC0t471KwbpH5nriKZC
qIaEopne51V/Z6fWirsauL2l/Sv3GQfoo+jhLvs20Fb+w6zWepOnQToH+xSn
m5ffw99RqrXaxYh+l3Pvmy8aK9btSB4Z7h2b7eH5SMhuhHXzFrD/KtNYwn4l
0nfqTg59d/izS/Pjz4A/4dt86xzTtFD7DC5/hA36JOu9CTplFbsZ8Tk/cBlK
q48p/WNzvi9K/sz5CHPhZNWWUzRz+O7KV5oeWHbG4PdRQs77r2o/F8PE/fJX
dT5jX4c9b1uW5T6IuHeYuF1u24/6fclytVFfx8uxU7ra0V94tu/S8sX8K69v
R3V/ROdFdIUr96tPd7f+PrU349mFnbN9HXNYv5hyr/qfLi+hDtz9ugwbOmMr
11LsnTh+CuyxFKpDqf1D/tTmxsaO/nIRk7kt3ZyaO/pS/hXo0t+drtY18q8I
BMLDiOjLQe3HYtwH6r/zEFmf1f58sG6PYYvjb1v+Fa6jofi+dV0+0K8YCdTe
ceisK9XevZZGrAxfN4rqbNl6z7Krd8ay+Yzan7TPFF7Hv9K2TcD+9Wxj3Z59
znA0h39W39Ad+pY1dcXKPNtcw+1407VPllwF5DLWL19e/tf+1czO+Rt51uE8
v8UfsAMvbcsul4vI4bg00saCMzu063XMU1Gx7jYG+xcCPo+xUWjXg70v3xKq
ERrnD/Y/VQ9Ex7Cs35KCmmGSBhfWqjhWOAvZFj1lC4KM1/wZ/exFx2baamc9
d4F43pAtnS5Xaf4VPufrXE4XI3no1f2rF9L9eH9UV5gjcPwrt/72J1nOqnPH
UtN7jugXn24H5cVvnfuB9l4P7oXkTrzulj+CtfIzvW8wsvLt11Zcbkr/gvUh
X9C/2pv7++9+Af9KnVe6Z9jkXxEIhIcR0Zfu+UPS+pywxpp7Rf4ajXZVualr
8Tfcn3vUbtDfgQ/km6TbyDPr25rlTl6CtgsDz5jbtS/qXyk6m+vXI/6Vla+/
5V8F5AfX+RMyCs9KnXuP+VcL6y8y10vkDvTcDlK5byn8D8rKQf/Kp+9j/tWu
HLjPqDMpaN+rIrLBn2+qlg13+zuaYENi/vqd25JoR+K/0JlRCBirKPIXoK/v
/sF6ldsj8q/GC/vFt+7eRRp/juiBzTEonfTpNzW73e8eDeJ59coe5XZme3O+
QwrPBvL9p1buS31aHPOvUuetz2Olv3Zq/qfqyVCNoRCe419Fdb9zf6quCOkg
qGHQ1qWd4+vEeYfxmH55jry4GBrp/zTivHeNo+xGp6VNf0T6aLr20a1mv/p7
f7h/z9kfcnFkbf4x/Ku5r4Ntkn9FIBAeBq5jAVvKjTNI0pUqvgHyQlzbAmta
xPYwh3MlYgagbp88k/ItlFtt55M8vC+r7NXQvcn2rrUXN7Ph2ujzga1nKsMe
+jHOr3DfO55/tbDLabUTvb1zldsf8k3n3olT3Fibj/hXaFOX7dqeHRM3qX3q
1/OvRC7H0wudXyXIgc8n3l7+FI2r1fyZtvmD77rkBTN/nYar3Mt+78/hrXdg
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
/gv7SuUG
    "], {{0, 329.}, {856., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{856., 329.},
  PlotRange->{{0, 856.}, {0, 329.}}]], "Text",
 CellChangeTimes->{
  3.936950058443796*^9},ExpressionUUID->"9a73d132-028f-47db-9e32-\
f291e34740a7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvb3T9EhyJ/a8L2eHy1nuksslTxHaoOLoyHwwjiLkKeQsRjKIiVPIXcxd
iLqQw564uwhQ/8DChCfQa29BD2abMGFiPZgwYcKENV2qrKosFIACUEB3P19v
/iJ65n268VEfmVmZWZlZ//CfTv/h//789PT0X3/O//Mf/mP0v/6X//If/9//
46/5H//nP//X/+c///M//V//2z//t3/6z//0X/7n//Rn/Mv/5dPT0//E//EV
/zcjEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAg
EAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgE
AoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFA
ILw/9B1r25bVdc3a/rUbQyAQvigY8qfpXrsx2+g7aG8j2vsOmnsIXV2yLE1Z
ml1uWxM+6NrSdS1rm5r3q33tpljQs46PecPHvH4PDEV4GIAO3i6dEggb6Cvm
Pz2xpx2fc92zOgv03/653nxNlUXMDyJWfSBx2VUZC/yAZR+pUwTCnXDtKhb5
Pouy6u7P7spEyx8vvf/z74ueZf4gP9Pq/or6a8uiOgtF38KT7OPfnC43PGvf
2vIucK1ZgGvoVz5zJ4GOZaeAfR9lD7WFr13BPGyfd2YfyJT8YlEl/i697rMP
896y+BCd3tDOD6gbEl4PfX0W9BtnJesU/YIuAvL3088CViKd9R2rLom2aeR3
8rpgc93p2dlT63n93qRlz/JTxGzNrlMpM/z0g6y7bw7LY094++jr9LE6krP8
eRvoq/NYft4RryqLlF/Mg3cr3f3vosLlxmX+fmdz64rqHIh1ddrna/Nv3Pa3
9JWPg/di+mXHztz2/uRnZNPcA5wXotNrjaX0o3wTxKw09t2A/qScKPV3XVux
NBjP+xKdPqKdb1c3JP3jPQJsml+fivGXnBdDZdNM57OKfZagcFXrl4svrSky
FkVn1rw7+mjZaWE96ZuCJVHMivfXqXeC5bEnvAP0DcuSf2HnonnM83fIn7eA
vs4eZtO8pizCfqW7Ha0r/P3O5tYVsAdlW1fb4sS8xLbf2LMyS1icFi+gG3M9
OPhENs290F3Y03P6ajbN+fmZFROWxP3Uma8AbGejrUt0+gi8Xd2Q9I/3iK6M
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
9Nu4lDVWwV9eGnvQV742iPnfvn9vv5fGfr0d26gttot8hqJ7Q7ZZ27CgSw/P
xU65zyH23x/56izr4sq7Z7bX2jP5WtVY2q75E9evzLxKxYgb69V6n+ftv5xw
P3+4CmxU04/Z5mrdNd7dZj/M/R0HbBr0y5my4draeM6dTvPwsxyDobks5/dO
5eISb5exp+43ZZnHQhykLXlnGwuXe1bQz+TEALR16sm197ZpXNaW+vyPs7EH
gE92sL23sD7X5hphkxH2/i/seeyQJy73bMv8/WvS0GZXmb6FW8b3fmvq1nuc
+or3TWhrrvMs2TSqjV40qkf2U5W8SM3CvTbNaE93SqcOepYL1vjHST/aof/c
zKuucG5TM+jaxjXhXl8dYR07bRp/smdqo4U5LQ0xM/D5yvNZlObO5+ddQmNv
j9N9EKVaRuC7MLblfD7zD/9/Itc/8M1g7fapXtt37SjmcZdNo/xtps/QvDYc
/Sb5yFXvWcXKmqj72Yxtydnz++H8BIjDk2N21jFqYl/E2KcV4+gHLM2VTepy
/85+L439da0dm1Dyyzqn8/Vzn01zXAYOtaM2ZO2Odzs/k81tGtQVIdYjy+Rc
Ai9hrBb6/9f7PH3XsPczpVSIc+6N++SZbzUrspTF0Y/M9yzy6Mg+jXiXPPuy
Knh/4oiFvre4zjnxZ9/JswrrimVpwqJTKPYJpnJgifeujYpFQX8k9Gu0xq3L
u6Wx2LxnBXhGjC3vf+oTeKRNs762KH4F3SHmskbLnLOOV3QLs1uf62yiP4WT
uX1Nm2ZT5h9Yk3SbnWX6Fm4Y3zuuqS7v2eyrHvctnWd5n6bNx7FJcDZLXjZO
I3kr9sSebfmQXPQsF6zxj5P8vVn/eZxN49SmTp4vDPmlaRKzH0N/NEe9ymca
feg81H3YadNM+cPNppF5WFkcjmMXR3vJa+i4vhMLXceUDyC38F3fRRmf+zEt
iHPH206egadjO5Yx64slj3WPTTOcRWfno3vbNM3U/75h03z9XczKup6NGebm
dXXB4vB3ozEX/XW8f0+/18Z+sR2bg7Vt05gxBC9t02zK2gM2jZv8ntg0SqeN
slLlweKnHp3vvsumUX69r/x03f7sG3Y+qRwfiDnn78sjy5wdsml6Vpx/FM+W
+VicVlXeics42ca0bwt2UnLolOZC5kQ7bBodo/czWaeoK06j2Di8ZkneLY/F
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
OFyzX2AHudR52ANcb0SMaTWed4jnCFX/pj7hVdm18K5O1VSc7qvuxyBzttab
KUBeTM8S+qlWtq7RKFxb9fxw3oC//3069BfWmaV9LrDtbHOF54usnTf5MrJI
rYf8/u+ibKKf9KzCfKvZ+QNHZJGqk2f1j9nhatd9aUD6wRy3qU0r4ycxJ0zm
QqVlzS7KVwbrfGvUKsV8KZg72Mc0v4P8uaatdE0J/N5XPADvigOVe4Xzm43l
LtSd1mfozHw4LcvVmSSQuyXafFL6jrJpzfea/pw69dlXXiBz77m+7ata8rlT
XNRQNx/fG5xLVqka5VJHVO/BWiqBvB7zAMLkMrPN91y72nfXeVQ+KbjfU+8a
9pUHv5k5fh2eDcPHFe+5tMPZJHitlF3dkAcchux0CoVdg3O5tc97nzZsY4nG
MCcUnwc6Ya9sDXPMLtru2KZn6/vrVOa7+5J2Aqz1k0/WTFX3HunWj1J2MvJK
0rq5C18u4bpKLzva+ac/6VhE3U5DrlfqXB1oG651YkrUuhaE8nukJd88F2qt
/TfzBGKd94SPI/p2JAf2Q9L+7PwmPANjoj+O8mRcrlHQ57gttAF0YdvZNQCM
n5iuJ645iSbaMhvy4Pm4hWGgc/qLpuV2cTA7p+4Iv6E/3dUnrvWIF81zuD8q
VZPX1g0Yx/AJz0SL9BxO9wiRptFUwXgFLZsnH5s9j74/k7+8US1+lWMVRixS
fA55N9Pz2WTDVb2+B0xO35actoY8Eli/cD1OikbYKrZYuEXZtQjpU9g6p82h
xSw/KV1kZ606QeOT+qFax+HfhyeZ5wm22fSsHZT1QXhiAeaaWIQenl1ro4m+
yXV94+UV6KVkEdguib4fdMNQ1X/6yk9Z3dUs8X8/2+M9Iosa8PfuqCsj4hpe
uC7eh0Ivz9Pedcz4je9ajc9ZbcuBthoGvNx7O9LRXrZr5d5RvO9GP/dca7Zh
te8vOY8TNFjj0fJuPA9wT/zxo7FOY3se5Dp3+gZjD6jbuBfnE32l3aimwdvB
7e208VY/DJQcp0Nsey+eeCxvifPGF/aNe0Ujopbtkz1edvua7dqqYk/aYe/6
XhB16aqKlWUh8sXdtnL38Bvk2zs+l6nzbu8Y2/Ra0DG5zdIVnTHur+wI7rEt
1Wo9dMEfD85tE/VNVd2FgrfHLbbALruW0NXuz918bwW5mXvto255rxtl5Wpf
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
PV3evtwvIk+O7crn+yhjTb/vHi9MWNmsT1ZbZcxX1/unmNs1GUtOvxN/x9wm
zE+f2D+k1a7+CF3LyxbjV+o8ZlG2rIO1Vc6iwGffPn/LglPKKmMK8ZnX5sw+
/+Zt6Vp1Fgxjnx7QMbn9mASfxP1hkrGiKtnlHMlnfh2yy4Yvvsoi/f5TnAob
9Udf8uylqljEv08F8xpyaOUTxmOaI8xx7Qrm4Zi9sO5/G5/1rMpTFvg+8/gn
PCWc3gZGe8t89h4AvOgHEavubea+m7X44+LaVSwOYla7jr2aszQvWMXl8PxT
szGZIG96zPN8FqUXdkyLaVjkR+wWb0dbXVgUyrXYD/6gfWL3v7djeRSyzHlQ
l59zScNhHUy4PZNnfBye2KefBayo5ToY5o3b43qD39QHnjPju+vkug/Im9fm
3xbXk+ociHG5efpeGG+93ei3THkDf6ozqZfvsMdfFX0leGLOL73WVcVvncs9
XJ7UF81jycIYVJnk/Z/5CZuqy+DLwPuD8z6pCPMAepCpa3V1wc5pou2npWcW
iS9lUVYJf2R2ktfnSrnGZ+I73hwpqjnZO2bXthBjI+TuVPZzuRorGz2zCkpl
y8N7k4JN1ai2PGtZezaYt6/k95/96Tj2rL4kWja/FxZ6PXTsDGumn724TXOM
z3h7gZ6eY1Y1LevamqWBsmPVmvXm+ewtgOsx0ck2570cX7UWPQJvfS3+eOhY
Yfj7rHrtAq5Nvu4/+vxsPKuRsp7L3bxq+BpYiWv+7Pt8f5M5ffqfvcO6dZ2d
pP5w4TZX37IilT47Fzex6711kbE0OVnXp72ANTRUz4ktMTrYJhjvva7uKv1e
rpXBZfn9XaHe/TFjddvixLzE7t8Gf+57lEdvvd3CT/5e7WMuf0IlK23jW6VS
1/+7qHC+B/xJyONTHu6qVPI312uW2Btl8T1smrbk68E5Z2Uh9ejAYu/3qk3B
2eSbliXeJ+0Df/O6lvLX+LvGbNg3WfRTrdivlbIDvbhYfENXJHObRtn9Pwvs
unhXyd8//SI66Cf8UtCzLPj0JmwaFz5Df8+vT4XxsErb1EAib57P3gK6C5ef
qXVsGq6rRdH5Yfucb30t/nhoWZamLC9K4T/aM/ZiXfs6ZGduE2X6k7Nc+SpD
zaPSNwLXahkPdsnRPWB+73cH9aFrV4r9Z3+0FvfSd/NXycxvdvTeKkvZOS+4
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
nUDYOJbnDXsRcvJkjYfXqRHy4rCsJ2Z+ntNaqWT919/FrKzr0RlN9c4zqzGH
SqjnfTmrz9AWKmZXxXbXlZ32brZpOH9l5eS8KeiLzsmCGvCxpiv8uPLyYZvG
wmO49uj9LdVPlzG5xabZU/feSd804pUw/tAl7xvyXCsVRwUxGK1tn2jp3ht1
ra6p+HqecLsjZjnXMWrla4U4lMO6Vt+w80nVPD6lrOB0l0cW2es0zzKvf+3s
rT01AjC/Ldrw92BMjBkDh35ozyU/kutz8d4aASqX1axLsI4tHt5v0zyK5x5t
02zJ7mtXsywOR3mPTvt1uv3H+Kxva1ZaamQgHd7mO1hq67pNszVWkGcdh78b
0ZQZn7WoZyoZibEpuMcXZaWqOTGcewjva1Us9XivwdqjGR2bef/LtNWNbKa+
jNnPfyhGz9xeJ1fWNKUz++LM345Fn71tX8leqDmb5mQLP88kHxLXmmW//vvD
LTYN7AtY1w207S1xTPU0ZsQV16M1At6fTbOkI4raGF3DEqzDUw5+CVzbvotz
WRtA1AJaZhYdAw+0fJXnBn0JWzQCM/ukYpFRO8ptrWyk3+wOZ1OjXPGSQszL
yNZStAR6q57NUfxMr2v/rLV7Sqcihta4Vuznr/EX1JUYxURynVqd+7d0zs8U
e20apGlbXgme5xHM9mkeb9M4s7XDPRhvOvaTqXiPDT0a6yvureN7X/+x2h9W
vsdjupbh6zJ8iLomJzSrVbWsHOcZ/b0zGbzAD2vAORrF0HN995JlLC8bfR3W
9RvNB+a7OOzzwP6sGcfpYtOgP8RJJ3HiYbtNgz5e+z7N27Fp0O+/nk+zLbv7
OmV+Ys5jyy7J7y1+7rX2H6zFoXh/epb2PfLWltu6NNbbY1WnwTiuoK1YMqkn
sijjlR8A5R/GjC7XnVnxV8DzeuO6abzhaajLu0ZbWGsiKWrBk+Y1m+skjsmi
Xq1yg34Vs6r812NnNW5A168qJnk74hzXsS0IOWnoT/upKa1nycP+1w6X2TI4
zY/8A46f/Xr0UZtG7c16tvNdjBjMfvw9+hq26mLOcNimkXLfFu+Gvt61/M0j
9x61aZrMsiZOgXrSZF8Ra9a42ts6dudciLPA77n/+eYxqREAcjVMLTaNeY8a
d3NuMI5jWs/h2mbusWeyQVqHhY/pR9Hxu6MlWuX9Zy27NmfmxdVyu/sVv6Vx
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
m2La9+N0uiAn8QHx0ef3KGD7YDbop6bf1/SU2i/IaWc5138M+7iD3Du759Y/
xEUc2yGu6xp+HGI74YG6w8t9Gsglme5JSxkIH6jT5eKm5XFSg5hnmcYkimMS
Kx+o2wkczhfQbyie/D3W2BM9hNx+Dp9G5MhcsF/bZIEY17Amv1XxqH/DePzj
tWPvNL5uDvGz8J6K+/HhQXqhPoI/0Ru2wWLJPh9bOvsj8OHeOQ9APnxPPmyy
/0XsHbznUB/NDfPdzzni0/Aaq4m9Zmejv8s9QRmjBrRlYrT3AD18eJ9wlbeg
xx6nJzsAPpzwXRRr7PoBi/y1wpP9bAx8mtnyXeDTyNq3ae2POWqWBwjjUkp9
SGLp926nPhnL07uL/d0s7lvfCnngUh1lqs8oX9k2CXf0yB7j/vPjqElI5YFj
rLdhnn/d3ot/QJTBG/GLjtKs7P+h1qS2vFaT0rLKB7VBTsS1AXUnKbUX0jQ1
/PyNJOk8J2wbl/k0ck96ujZSBjJZN/oDz93del4eenN69CjdWTwPxPW8mS25
qs8MbKnlfJRtW8rV7Hsf9mm65diRCWSMa6wPuA6e1k3370l5H10ZHqq33MI1
eQ/4I89z3ju8yEle1MOd6pL+uyQF/P3C5r3348Nj9NI1+awnKYsNrwhnSR/w
jree9RH4cO+clZsiHwqY6MCuLsi0jf8lgP5ZSWLKdynn07ze/ZxDPg30L7Nf
Znzn9LQ/+DT2pP5c9tpaqxFhvb5+nvpzHuMvuPb31Cb1dtpkaz4N0DnUxBz2
ab7z5ntHF/g0MhfzaM80ub+q5o11Fe+zUYwmObynYV1a1pvOu4eBK+yhoz2T
jqDKU6qjzPkKYlj50aLgd5gfR8vODzPX2ymTNdc4d+PegLPSQFTrZLTMnbbC
SawMcrg3alefF5f5NLA/O6qjkXddqr0TNs3dc16eaZ9GrtGbvj+TpF34wHkH
ljXuRdrv+VK7JIpD8sXl++9/70TzM0CE3QZ2F3+HNXv2vpilGa7Ke11LylTE
wMOUlNVwsyb3RI4HlVE3PCPt2thLL4Mdz2kPzsvwrcG+0uds8HoWZoNcsDTP
xIeH54x82MNEBxbBXzd7Zz0idvs0oqfx73+RNNyQxLd7WvBYrf1y3wdJ54fO
6Lgo92x9n+aRcs/kWAOdXyH58sTjKsB7o3jAeThTxgoiEgU+sQVvRpr7yWfJ
3glNCvVr99lXkOsaPCPjGOCjz+9xoK9r63vOjzZweT2gtq/Hh8AlPk3D93c1
1/a5Z7Pa1hUZaIDDtcnPVE+zMlY5Hqi1q3O+P//JiamNNPwy9V5E/WrF6oCh
vnfRtJf6TOynleHLTXOIr8l7LB9m0t+2SnxiUZvxgpKtd8NeeoFeP/O16UgR
LdRmiDqKS/0ZNtan4cML5ox8KGCiA+k6u89Zb7PXp2nzQHuuaiN6F3N9OPg0
0xrz3wzyJBdxQY+AxT4UD+zTLO1lAd91bU1Ccb5eXAw9LGQt70+szqnkfS+a
Zcrsa9lgj/dcsv++Vw6SjCscPK7v4fHR5/cwELw2zWllfTYme+6yRyiv6axJ
1p+5u8BrbXsV/172fd/1gfjN7ocf92lkb0hLd6aE5mwafhGPcd3dpxG2zaIt
taEngDZmeXRk0E+z/pjkCvs0G3tZUhaP6435+QfaXAAthO6lz8qL5MLzdAxw
Fd6T11isblnGSmPXIl5y5dqDu/HhXnrh7/m/a/f0eS/jsS3Bz7lUayQAEFu/
b9+ze/LhhXNGPuQj2+BDQFulxPGWc5eOAGhsN+8diK/v9WlgXK9/irTPKYNB
l87PpuGQvcEP9QO7wKeR/urMT5C+x0p+kDwXan6Oi6BbXf+IC3yauvczVq6V
vtjEL5cyeykPdYp+vzvOSeJd0Hv6AHLf2s5Z6VrSrPhk+9CR2NrJU0dplazP
T0vCdK5XSa2gtGHtnOOuvdoHg77/Lte1U95kOlHo0CZ1yL+yPfmGeFq50rE8
zP9xFZ7oSNvAGdut4adh5xkfwZpPw+oJ0nyeK0GU2I1W7ghZZ4VjWdfncxyL
6V1yLoY8M6wYPVjEcUfnZkIuZkZKZdKyZnHquzAbYOG8sv68kQNjLQJree+d
oSGBpc8xKsLP2jwRqDt1ZuPp+v487HmF6VtpSZGlpNxpD1/Oe8M1oaC9VpzL
Zie3CK7djw/X6WVKk9xm/jHItWNmPo3Cl7CnMz9rsiH+O5xPcy8+vMacH58P
IT8+I/nOQpZr8WGZfCHfWA6rr7L9gNmwuvyeQ2C23A7eY7/dT8xb59NAXU+a
D+fXA+3r8q0Bqk8j1zicvEtpr0+/Nxvs8dyz/rzaie8ifR2V5qZzlv0yvrHH
tNHnKurimtKnOZBj1/c9W8j7BDT5r2zc056Ecp6eZnMAzguf2ufy/bM9tj+G
xnZJWxUkzcoL/HjOb8t9EDqShw7rFRsFDrOlrsFZEHcHH8mUrxgPHprk8vxy
92V2Zi2gil5n/VOOAuRBY6y3+Zo8p0ejPwdBn0fM7Ya/+xn23GvGn3BNm/uj
PdhW8aHhTDh+j5YkgU/CKCK+55PkmsWTVwHPm+iakutkKiczTf/wTPSs1Mml
rV5DUlY6Suy8iM3kOeR8l1VFqskn9d/Iv/jJ7Hv22agHl2fiqf02ZQxStVma
zFNyCPpvWZ7dkO9O+r0oa2JXsnXtGjpW0Rc1q/h3q6OboBvOG4snda/gZ8o9
d10NMTtHfhKPa0S/HV3tuOSHIT98G+zsw4Xnr+FS3huu4bWHLL4WUB6zl3OE
yiQkfhiR0PdIeOV9nGvAhF50NCnfczihD7Az1f2OSsSFGe1PY3QbsYVn5cNL
5jzCg/Oh3CvX+VRruJwPuQ8mea6KfF573Q3nvQKPhtTPiaKQeF541f4B1wDn
u45UqewlllHbDb5Tf9XMzn3s6TfMR+9J9jQbeuQJH/GT2/MirLFrZDu3Il9x
wlsF16ksn3H6N/rdlu0JtfPjHAneE2K8lzmfM/tW+BBqn3i2FzWN6Yl1bSrR
w5za4lDXuPdsEsnDf3DjWS5xJfI95/ujfPxQP/eDum9I5SvswUz3bBmU+pyt
sz0H1ErPwIOELeVWqNdJVWIrufs8TgV+wKPzVY+F+YG/+lnthdIqeYMgz0Tu
xaPr7UdCFVuL+5XTnp2qbhxq/4a9NOgdA3zSvx9qx4eUwbsyYPvTgN+q8OZn
0e6F2v/905vV19lN+bpO/UUfRK7ZWry2Etd/Z7vEFfo/yJZ/L+7M9OjefUOT
/LlW2E6/dzwS+I7Yo570IKpTHs8Kx7EnkCVMH1GdIM+ZAJ0+Xpmm7/+q1i9u
7qNrwGwmpR+oAz2mHKsfc0Pn8rZwdnIpfEfrZ4f3e6JjzhbkdS1qmfeU8ck1
2rsPdRnvDehjixn/vj+reFZowfOj2RuWudIPlfRvRi9LNFkmnA7Bh/E8t38n
/RlQoiYEeFy3F7/eY/NJ+fCiOc/xyHwI9pjsC2GYasNwKR/KXrecQlsSyloa
Oh771WI2M9QE/WvIf1GFJ/K7X/IdE7s9ivAv/bxYjwctfUCfus+zfUXwX/qY
CqUHWZMeTfuudcP7gX6BTN/+FGzmFR7KedXJvxmoD+OIdxn82p/XNN721M8Z
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
Ub8uY69+rZOl/K/L1mtlhCwGJOVlk6e7cs/GPo0y2sV5CN9Z0Rvy9ycRW7m2
T8PoffZOl30alr/V5209o3/wjGO+PUBmTGXeFDJ2d9SncRb0LORMTE0SmY92
JIRyRObKGOM8X2PIw1lW9zWzYXQxoUrw7jw8Z0aHEJ8yy3nlsgPk+9JvZc7J
7hwkzRibzNffS9hT/+Tnhs9QLhUxZDeBuqqC5HlMZdOV7Jiuo//X8P1n2PNu
4d/XuPF7gus9XexXxV6+BT1/Yvp0zAts74O9n5o/XdC2ZJlLl/OIT3MJHR7i
+RU5pqIIDG0lEWv/s7f0WzoWj9utxiuzMsbMO2nliaQR/0AC2i35tgO+pfd3
hHxtyXPy7a30K9QHN42qJLk/re5RXptPUb/qf7Ffv4p8RM3zL1uvJfB8Q8hL
hDrlosiJb7tmPsSGT7M0DzbitiE1pVP1T7lv8fzXor2BT5OTcBZPWvZpmK7o
aWugG0BT8Zrutfp7+E2e5SQvIKfTYIDMFhl/tH+TX1FfOs8yKldL0miHMaf1
roXaKbru6rjpPSE/tV7wu8/0b2VO50E/z9qDpYfQgVtxxVv5NHM0JABb7WBf
knMdk5OV7LpGzm1RhqzF9kVewZrMna+ZmcyF+KdxPgIdh3/Sy10pb/1ZPcTq
DRfHCDJszZbcHzMYZI76GefIHIX+3s9eUydpdos29vLtua2Z/Jzt3dvjnCOW
3w56KUnYO/8kcgz8+FiMvk6oT2MkHwZcQoeHeN5QjjUGcfn+aSJ+o6uBSIR/
me6RuYtjHOa15NMs1wktjv52fCv3IWb33jvGd8Y99KtAKfK1baWe69p8ivr1
Wvp12Re4aL1WnjXlJeO9zwt8minaUtRnin236/cI0GHFp9H87h+ckCSBzeKf
QcDX7Qdv0m+C0kNg8fhBRHnLt3jsKd/YzGvyX0fvYKDRepRHCOPMg5/YusZp
SkKXj3/e+2VK69x+Pk32cKF/zZIMrbKAxzG9qK/5sIPr5sjcFULmbsnSe/k0
TeYaxYHaMiNRFJM4Vj6UtmJBg0GckCQe/z2KM218w0SGLE5b2E+3kLly3Yzj
p4rclbQs5e28vnvzZis+zcK8VtbivdHHvnbWZ12OmoQO9CRyiWv4cey/bvYE
ZjQL8fuNhb6GrST3TYf44NiWlWe3gb46beyPlCnw4ZgvoYYucLgMZjw8+Xuc
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
0dzXyH2rz99k163aArraLz6uEa1TvoR7bOVNqNePY3Yifi1uCPLLmenKjo1d
HQvkS0zrqcGelraGXFO17vO36v9W1smEPjomF6b6Vu4tT3l+jW718xp8mnFO
esN8rfH99b0xdM9cftbS+PjzGL0oYl76UlFhKvsb6rfzuEIV/5XbPBNd20L+
P+jTnkl4jvWmr3KBTyP9vD35TGPUnC7o2qm2dmJNa4P1diPbqzCsY/ptoVfC
2thCxyaO6xLX8OPYf71bXS6rAdmIpdfUvoU+XlKm7m0ptuXTQO8FkMGViANL
/ZFu+DVlyvsSx8onSRISONwmhDhJPPl7nC7vW5j4Gyaqcm29Dj1D8JZvTHRD
34X9tbJCBkxsBakX53U9Q3xttMfZFQ/h+7fl2MZhebTTOCDooh11jKv0LOqf
/uwP+5gyfjx+fXOfJg+4DEtl/2SR+6TGk6Tv8aOij0xtDoOZLfR3qnv942Y1
aURdIeszLuz+T844v6vU1NBdZqsZjF7j0+gg99mkjSd1/JJPA+t/dZ/GmE7M
36/Uo3ao7KF3Ivb7xD6N5Dfdnov0darJb6/u02jshumz+ncyUZBt7o/s+u2x
8Pc9qgMTOmDcR0Y3Lp7vO5a99awuoBa9llT+ZL69Rg6ujae/p9j7BF5R0fdc
EpPfej/T9wDx9dNE98kYn1HPSDFOy0tGeXCQF9Tbhgu267iWXuhUyyeFskf9
G5WFstdX5s3zsCEGLvccTOljKc4M+VJTm32Vbhfnpb+/rBcf7q/PRdY+c+tZ
mvHJelxPjUnQMRypKxEX9zG/4cwXXR4S9y1v6dPI/jpHe6ZJXaDaVBDfBDop
Rms52HoDT/F+Zp6hEyHPyDDP6W9JniYkTVPjT5Kkd9M/sD+15dN0kCsJOTxl
ymMFlEazHfsom7GZNB/bLkI+btk0eejNfUXP5WdI0Hfvet7EX3SIG+ab41z0
N0SuyuZ8V9br2DP4Xrht3MttoPO9se7envw0rXHi8a4fNTmHUuepPURqKsvu
do7VCmZ2R98HS+3nS/1qa0dO2wo9Sxmq6vZzo/v9sP8NYDF78OvVGJyQi9MY
AtQTqnFfI5vDbGYL9TSCnhSakLlx1VL/D2WPQ/7lMlvNYPQGPk0r8nLUnKE1
n8YR8eBr+zTmdGL6fkU8W7NfWpv2OXpQyH003T71lP5u6dNMY67TZ0l+/c4J
WL98FkNLkn4PzrSniNa3EO97HIPWx8FA/1RVxWo6ojAgX1x7pnNk3EpdJ7an
ovVplscj6a/PExY5VzyGSP835Gtiif2NvT6NrEmYvnuYo2l6auYqe8/ULnD8
aOSXmNrj0qfo960dn6RFLX497MHMfIWmEfsIZvSxRItyr0bdn7rIp5leI3yC
4f639WmkXTOcicj3Ty6pUx35lSJuNK+TrLR7SjNc4tNIma2zv9R8D0qPcMbA
SdWV56EHvxVEJAp8Ysv+rZr7yWfJeTapuy/nXzzPJEfuHpA16Hs+g3zgNLSn
Pghi2pbQnbXhNfv1zL59kSkeJfcMMF2vY8/g78k85j74NHq+5fbPlKfYXrRy
lhPkLg/7X2Iv9U/RjFb63FslNzpYsEHujTntDbnS8PnGsokfpWSl3NfgnmO0
rK6yImVO9RWVR67Ys9P5NKADQ5EfPrZ5lHcYxOysVP4eYi4Plb0mE5vDcGar
Ps3i91o+nftBl9pqm6Pf8Gmgryas55+9qY5e36e5Ve6ZGZ2YvV+dvaNe/9w+
zcL7Uf4mRePVfJqFHgGrPo3wvfyk4HVh/adi79n0WDdzm1HPJ5B/aJ9OfX5t
VWp0Tsf7Z3xjR8ye7ETPWaCf6TBNxiPX4ic/IWWlzr1kc+/rwWbvp5vwojPe
G7H357rP0ZI8CXq7cGYH7bDH4XwKV8nB6PcPRRwW1nNpqKb0scivQh6pvvUq
3e71M2b3v4FPM6k9leerwGWwpwf+zSWvWu5Vg84EG2d2Pokyz5vu06z2+uUx
wa6tSWiL3PhiqCuV+yY/BSnvDVBWml4V82exHgPnkv33rlC28GUfphdh147k
x9anKMpRfDp1Xxd9GtbfZXr+tOJjmq7Bmp4pqaxxqRwcP2Ww546cN3m0R8Cl
Po3Jeh31aWKTvVJ1LCKmZC3ulXQs1pUKe9qNCx73Ej7Np58CUlTVTDfpe/1w
OmL7H3nL4s2XyqZrQUd70I8lCdxx/ciO3Jx1vdyRPOb9sVkNTE7XMNXVoA80
3tc39vEq5e9UnyfFhI/hPSg14nt0zMbMru7TqDWNl9pqm6Nf8WmkzT+r6SZD
/PS+Po0pnZjalDyvRbeX++w+jew3r8ujLYJxHP9aPk0Z+UqOh5lPI3tNXNqX
8RI+kWOCmo5WuXaw4TpSgwyX93OGGnlXc4aZ6XjkvuNWLoEuXy9UHJbpsxZ5
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
AoFAIBAIBAKBQCAQCIQf/wfPk9MQ
    "], {{0, 319.}, {821., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{821., 319.},
  PlotRange->{{0, 821.}, {0, 319.}}]], "Text",
 CellChangeTimes->{
  3.936949085664617*^9},ExpressionUUID->"dc1d098d-6660-40c5-8e43-\
daaa7a242638"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numeric Analysis", "Subsection",
 CellChangeTimes->{{3.93745871703652*^9, 
  3.9374587246201468`*^9}},ExpressionUUID->"8620910d-26bd-4b22-a32b-\
680043caf8fa"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"charge", "[", 
     RowBox[{"eta", ",", "u"}], "]"}], "->", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"charge", "[", 
     RowBox[{"eta", ",", "d"}], "]"}], "->", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"charge", "[", 
     RowBox[{"eta", ",", "s"}], "]"}], "->", 
    RowBox[{
     RowBox[{"-", "2"}], "/", 
     RowBox[{"Sqrt", "[", "6", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"charge", "[", 
     RowBox[{"pi", ",", "u"}], "]"}], "->", 
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"charge", "[", 
     RowBox[{"pi", ",", "d"}], "]"}], "->", 
    RowBox[{
     RowBox[{"-", "1"}], "/", 
     RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", 
   RowBox[{"eqd", "->", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "3"}]}], ",", 
   RowBox[{"eqs", "->", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "3"}]}], ",", 
   RowBox[{"equ", "->", 
    RowBox[{"2", "/", "3"}]}], ",", 
   RowBox[{"eqc", "->", 
    RowBox[{"2", "/", "3"}]}], ",", 
   RowBox[{"eqb", "->", 
    RowBox[{
     RowBox[{"-", "1"}], "/", "3"}]}], ",", 
   RowBox[{"mqs", "->", 
    RowBox[{
     RowBox[{"(", "0.093", ")"}], "*", 
     RowBox[{"(", "1.35", ")"}]}]}], ",", 
   RowBox[{"mqu", "->", 
    RowBox[{"2.2", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "3"}], ")"}]}]}]}], ",", 
   RowBox[{"mqd", "->", 
    RowBox[{"4.7", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "3"}], ")"}]}]}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
    "bunlar", " ", "pole", " ", "mass", " ", "olarak", " ", "duzeltilmis", 
     " ", "halleri"}], "*)"}], 
   RowBox[{"mqc", "->", "1.28"}], ",", 
   RowBox[{"mqb", "->", "4.18"}], ",", 
   RowBox[{"m0", "->", 
    RowBox[{"Sqrt", "[", "0.8", "]"}]}], ",", 
   RowBox[{"ss", "->", 
    RowBox[{
     RowBox[{"-", "0.8"}], " ", 
     RowBox[{
      RowBox[{"(", "0.24", ")"}], "^", "3"}]}]}], ",", 
   RowBox[{"dd", "->", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", "0.24", ")"}], "^", "3"}]}]}], ",", 
   RowBox[{"uu", "->", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", "0.24", ")"}], "^", "3"}]}]}], ",", 
   RowBox[{"xi", "->", 
    RowBox[{"-", "3.15"}]}], ",", 
   RowBox[{"f3gamma", "->", 
    RowBox[{"-", "0.0039"}]}], ",", 
   RowBox[{"lam", "->", "0.5"}], ",", 
   RowBox[{"(*", 
    RowBox[{"lam", " ", "ve", " ", "LMB", " ", "ayni"}], "*)"}], 
   RowBox[{"LMB", "->", "0.5"}], ",", 
   RowBox[{"(*", "*)"}], 
   RowBox[{"gssqGG", "->", 
    RowBox[{"4", " ", 
     RowBox[{"Pi", "^", "2"}], " ", "0.012"}]}], ",", 
   RowBox[{"gssq", "->", 
    RowBox[{"4", " ", "Pi", " ", "0.32"}]}], ","}], "*)"}]], "Input",
 CellChangeTimes->{{3.936955058969205*^9, 3.93695505897256*^9}, 
   3.936958027526968*^9},ExpressionUUID->"1652231b-eed4-4d5e-a4e1-\
d9f039386585"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"eqd", "=", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "3"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"eqs", "=", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "3"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"equ", "=", 
     RowBox[{"2", "/", "3"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"eqc", "=", 
     RowBox[{"2", "/", "3"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"eqb", "=", 
     RowBox[{
      RowBox[{"-", "1"}], "/", "3"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"u0", "=", 
     RowBox[{"1", "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"u", "=", 
     RowBox[{"1", "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"v", "=", 
     RowBox[{"1", "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"zero", "=", "0"}], ";"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"constantrules", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eqd", "->", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"eqs", "->", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"equ", "->", 
       RowBox[{"2", "/", "3"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"eqc", "->", 
       RowBox[{"2", "/", "3"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"eqb", "->", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "3"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"u0", "->", 
       RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"u", "->", 
       RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"v", "->", 
       RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"zero", "->", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"EulerGamma", "->", "2"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.936957008628971*^9, 3.936957053506369*^9}, {
   3.9369570918936787`*^9, 3.936957095525468*^9}, {3.936957745400529*^9, 
   3.936957754039257*^9}, {3.936958110299264*^9, 3.936958117810157*^9}, {
   3.937153607829764*^9, 3.9371536266705513`*^9}, 3.937158612861409*^9, {
   3.93721201261546*^9, 3.937212017940464*^9}, {3.937449199186418*^9, 
   3.9374492133145037`*^9}, 3.937653182670115*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"9c445492-bcc5-4de4-aad3-c66f7aebbff2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<mqs\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.093", "*", "1.35"}], ",", "0.0"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<mqu\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2.2", "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "3"}], ")"}]}]}], ",", "0.0"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<mqd\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"4.7", "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "3"}], ")"}]}]}], ",", "0.0"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<mqc\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"1.28", ",", "0.0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<mqb\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"4.18", ",", "0.0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\"\<m0\>\"", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sqrt", "[", "0.8", "]"}], ",", "0.0"}], "}"}]}], ","}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<m0sq\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", "0.0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<dd\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", "0.246", ")"}], "^", "3"}]}], ",", 
        RowBox[{"0.028", "^", "3"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<uu\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", "0.246", ")"}], "^", "3"}]}], ",", 
        RowBox[{"0.028", "^", "3"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<ss\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.8"}], "*", 
         RowBox[{
          RowBox[{"(", "0.246", ")"}], "^", "3"}]}], ",", 
        RowBox[{"0.80", "*", 
         RowBox[{"0.028", "^", "3"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<xi\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3.15"}], ",", "0.30"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<f3gamma\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.0039"}], ",", "0"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<lam\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<LMB\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<gssqGG\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"4", "*", 
         RowBox[{"Pi", "^", "2"}], "*", "0.012"}], ",", "0.0"}], "}"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<gssq\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"4", "*", "Pi", "*", "0.32"}], ",", "0.0"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Msq\>\"", "->", " ", 
      RowBox[{"{", 
       RowBox[{"4.0", ",", "1.0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<s0\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"5.25", ",", "0.25"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<m3\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"1.76", ",", "0.01"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<f3\>\"", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1.17", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]]}], ",", 
        RowBox[{"0.01", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "2"}]]}]}], "}"}]}]}], "\[IndentingNewLine]", "|>"}]}],
   "\n"}]], "Input",
 CellChangeTimes->{{3.936955474439003*^9, 3.93695579484655*^9}, {
   3.93695583115161*^9, 3.936955891675682*^9}, {3.936955934437989*^9, 
   3.936955949391753*^9}, {3.936955985242476*^9, 3.93695622939316*^9}, {
   3.9369563475860357`*^9, 3.9369564358448477`*^9}, {3.936956475400648*^9, 
   3.936956504482212*^9}, {3.936956924066306*^9, 3.93695692718192*^9}, {
   3.936957766618685*^9, 3.9369577870141993`*^9}, {3.936957872831918*^9, 
   3.9369578739109793`*^9}, {3.936957963193899*^9, 3.936957964430249*^9}, 
   3.9371585963620853`*^9, 3.937449461512459*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"f37ded91-241b-4606-a343-7675ff3e2bfa"],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"mqs\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.12555`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"mqu\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.0022`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"mqd\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.0047`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"mqc\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.28`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"mqb\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"4.18`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"m0sq\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.8`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"dd\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.014886936`"}], ",", "0.000021952000000000003`"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"uu\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.014886936`"}], ",", "0.000021952000000000003`"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"ss\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.011909548800000001`"}], ",", "0.0000175616`"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"xi\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.15`"}], ",", "0.3`"}], "}"}]}], ",", 
    RowBox[{"\<\"f3gamma\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0039`"}], ",", "0"}], "}"}]}], ",", 
    RowBox[{"\<\"lam\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"LMB\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"gssqGG\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.4737410112522892`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"gssq\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"4.0212385965949355`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"Msq\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"4.`", ",", "1.`"}], "}"}]}], ",", 
    RowBox[{"\<\"s0\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"5.25`", ",", "0.25`"}], "}"}]}], ",", 
    RowBox[{"\<\"m3\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.76`", ",", "0.01`"}], "}"}]}], ",", 
    RowBox[{"\<\"f3\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.0117`", ",", "0.0001`"}], "}"}]}]}], "\[RightAssociation]"}],
   TraditionalForm]], "Output",
 CellChangeTimes->{3.937653190228959*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b2a85b2b-6710-45f9-b3de-725eb704a206"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
    "mqs_", ",", "mqu_", ",", "mqd_", ",", "mqc_", ",", "mqb_", ",", "m0sq_", 
     ",", "dd_", ",", "uu_", ",", "ss_", ",", "xi_", ",", "f3gamma_", ",", 
     "lam_", ",", "LMB_", ",", "gssqGG_", ",", "Msq_", ",", "s0_", ",", "m3_",
      ",", "f3_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"<<", "pi_rho3pl_gm53_spin3_monte_carlo_input"}], " ", "//.", 
       RowBox[{
        RowBox[{"ninteg", "[", 
         RowBox[{"x_", ",", "y_"}], "]"}], ":>", 
        RowBox[{"nintegrate", "[", 
         RowBox[{"y", ",", "x"}], "]"}]}]}], "//.", 
      RowBox[{
       RowBox[{"integrate", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":>", 
       RowBox[{"nintegrate", "[", 
        RowBox[{"y", ",", "x"}], "]"}]}]}], "//.", 
     RowBox[{"ninteg", "->", "NIntegrate"}]}], "//.", 
    RowBox[{"nintegrate", "->", "NIntegrate"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.936954661961307*^9, 3.936954681714924*^9}, {
   3.936956833287586*^9, 3.936956838405484*^9}, {3.9369569439660187`*^9, 
   3.936956945360365*^9}, {3.936958133047656*^9, 3.9369581334202433`*^9}, {
   3.936958202752178*^9, 3.93695820717246*^9}, 3.9369583437984457`*^9, {
   3.936958546958845*^9, 3.936958561009388*^9}, 3.936958768095724*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"8e4c0616-58e9-4504-a858-eced8eab2772"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.936974178438238*^9, 3.936974188157508*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"18c4df38-eed9-4f2c-87fb-3413cedb49be"],

Cell[BoxData[
 FormBox["\<\"/Users/sbilmis/physics_scripts\"\>", TraditionalForm]], "Output",\

 CellChangeTimes->{3.937653205807741*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"a0688590-9154-4560-ba36-7a66656a649b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fa", "[", 
   RowBox[{
   "mqs_", ",", "mqu_", ",", "mqd_", ",", "mqc_", ",", "mqb_", ",", "m0sq_", 
    ",", "dd_", ",", "uu_", ",", "ss_", ",", "xi_", ",", "f3gamma_", ",", 
    "lam_", ",", "LMB_", ",", "gssqGG_", ",", "gssq_", ",", "Msq_", ",", 
    "s0_", ",", "m3_", ",", "f3_"}], "]"}], "=", 
  RowBox[{"<<", "pi_rho3pl_gm53_spin3_monte_carlo_input", " "}]}]], "Input",
 CellChangeTimes->{{3.936958912445169*^9, 3.9369589167714777`*^9}, {
   3.93697394006805*^9, 3.936973971878188*^9}, {3.936974159878544*^9, 
   3.936974168125964*^9}, 3.936975341701682*^9, 3.937002858655422*^9, {
   3.9371587395648947`*^9, 3.93715874162007*^9}, {3.937161796895647*^9, 
   3.937161803930357*^9}, 3.937210673017983*^9, {3.937449960544394*^9, 
   3.93744996367879*^9}, 3.937450090781404*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"aeb53714-e2f1-476c-a04c-c33913b045d5"],

Cell[BoxData[
 FormBox[
  TemplateBox[<|"shortenedBoxes" -> TagBox[
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
           RowBox[{
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "e", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                   FractionBox[
                    SuperscriptBox["m3", "2"], "Msq"], "-", "zero"}]], " ", 
                "eqd", " ", "f3gamma", " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "u0"}], ")"}]}], "-", "1"}], ")"}], 
                    "2"]}], "-", "1"}], ")"}]}], "+", 
                    RowBox[{"3.1640625`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"35", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "u0"}], ")"}]}], "-", "1"}], ")"}], 
                    "4"]}], "-", 
                    RowBox[{"30", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "u0"}], ")"}]}], "-", "1"}], ")"}], 
                    "2"]}], "+", "3"}], ")"}]}]}], ")"}], " ", 
                RowBox[{"integrate", "(", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s", ",", "0", ",", "s0"}], "}"}], ",", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox["s", "Msq"]}]]}], ")"}], " ", 
                SuperscriptBox["u0", "5"]}], 
              RowBox[{"12", " ", 
                SuperscriptBox["f3", "2"], " ", 
                SuperscriptBox["m3", "4"]}]], "-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "e", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                   FractionBox[
                    SuperscriptBox["m3", "2"], "Msq"], "-", "zero"}]], " ", 
                "equ", " ", "f3gamma", " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"3", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], "2"]}], 
                    "-", "1"}], ")"}]}], "+", 
                    RowBox[{"3.1640625`", " ", 
                    RowBox[{"(", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ")"}]}]}],
                   ")"}], " ", 
                RowBox[{"integrate", "(", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"s", ",", "0", ",", "s0"}], "}"}], ",", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox["s", "Msq"]}]]}], ")"}], " ", 
                SuperscriptBox["u0", "5"]}], 
              RowBox[{"12", " ", 
                SuperscriptBox["f3", "2"], " ", 
                SuperscriptBox["m3", "4"]}]], "+", 
             TemplateBox[{"611"}, "OutputSizeLimit`Skeleton"], "+", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "e", " ", 
                TemplateBox[{"5"}, "OutputSizeLimit`Skeleton"], " ", "Msq"}], 
              
              RowBox[{"256", " ", 
                TemplateBox[{"2"}, "OutputSizeLimit`Skeleton"], " ", 
                SuperscriptBox["\[Pi]", "2"]}]], "+", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "e", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                   TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], 
                   TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], 
                   TemplateBox[{"4"}, "OutputSizeLimit`Skeleton"]}]], " ", 
                "equ", " ", 
                TagBox["\[DoubledGamma]", 
                 Function[{}, EulerGamma]], " ", "mqd", " ", "mqu", " ", 
                "Msq"}], 
              RowBox[{"256", " ", 
                SuperscriptBox["f3", "2"], " ", 
                SuperscriptBox["m3", "4"], " ", 
                SuperscriptBox["\[Pi]", "2"]}]], "-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "e", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{
                   FractionBox[
                    SuperscriptBox["m3", "2"], "Msq"], "-", 
                   FractionBox["s0", "Msq"], "-", "zero"}]], " ", "equ", " ", 
                
                TagBox["\[DoubledGamma]", 
                 Function[{}, EulerGamma]], " ", "mqd", " ", "mqu", " ", 
                "Msq"}], 
              RowBox[{"256", " ", 
                SuperscriptBox["f3", "2"], " ", 
                SuperscriptBox["m3", "4"], " ", 
                SuperscriptBox["\[Pi]", "2"]}]]}], ")"}]}], "e"], 
      Short[#, 8]& ], "line" -> 5, "sessionID" -> 31303167872655536489, 
    "byteCount" -> 792328, "size" -> 8, "stored" -> False, "expr" -> 
    Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
   "OutputSizeLimitTemplate"], TraditionalForm]], "Output",
 CellChangeTimes->{3.937653216122682*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"bf0f3184-9e4f-474b-a737-c3838fc1059e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fb", "[", 
    RowBox[{
    "mqs_", ",", "mqu_", ",", "mqd_", ",", "mqc_", ",", "mqb_", ",", "m0sq_", 
     ",", "dd_", ",", "uu_", ",", "ss_", ",", "xi_", ",", "f3gamma_", ",", 
     "lam_", ",", "LMB_", ",", "gssqGG_", ",", "gssq_", ",", "Msq_", ",", 
     "s0_", ",", "m3_", ",", "f3_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"fa", "[", 
        RowBox[{
        "mqs", ",", "mqu", ",", "mqd", ",", "mqc", ",", "mqb", ",", "m0sq", 
         ",", "dd", ",", "uu", ",", "ss", ",", "xi", ",", "f3gamma", ",", 
         "lam", ",", "LMB", ",", "gssqGG", ",", "gssq", ",", "Msq", ",", "s0",
          ",", "m3", ",", "f3"}], "]"}], "//.", 
       RowBox[{
        RowBox[{"ninteg", "[", 
         RowBox[{"x_", ",", "y_"}], "]"}], ":>", 
        RowBox[{"nintegrate", "[", 
         RowBox[{"y", ",", "x"}], "]"}]}]}], "//.", 
      RowBox[{
       RowBox[{"integrate", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":>", 
       RowBox[{"nintegrate", "[", 
        RowBox[{"y", ",", "x"}], "]"}]}]}], "//.", 
     RowBox[{"ninteg", "->", 
      RowBox[{"HoldForm", "[", "NIntegrate", "]"}]}]}], "//.", 
    RowBox[{"nintegrate", "->", 
     RowBox[{"HoldForm", "[", "NIntegrate", "]"}]}]}]}], " ", ";"}]], "Input",\

 CellChangeTimes->{{3.936975345729484*^9, 3.936975345733283*^9}, {
   3.936975378300894*^9, 3.9369753870285177`*^9}, 3.936975512271175*^9, 
   3.937001665026174*^9, 3.9370020580845737`*^9, {3.9371118337772503`*^9, 
   3.9371118343919163`*^9}, 3.937111900096225*^9, 3.937112368991295*^9, {
   3.937112427391164*^9, 3.9371124435913363`*^9}, 3.937112642431641*^9, {
   3.937113142202056*^9, 3.93711314275603*^9}, {3.937113521559819*^9, 
   3.937113541405658*^9}, {3.937113653659995*^9, 3.9371136669855337`*^9}, 
   3.937114024708393*^9, 3.9371150487008677`*^9, 3.937153041383952*^9, {
   3.937153198710783*^9, 3.937153230690184*^9}, 3.937153683684935*^9, {
   3.937153843482416*^9, 3.937153846796445*^9}, 3.937154350499833*^9, {
   3.9371582021780987`*^9, 3.9371582064812098`*^9}, {3.937158313627817*^9, 
   3.937158314841651*^9}, {3.937161815347102*^9, 3.937161824092532*^9}, 
   3.937211617488325*^9, {3.937449967217435*^9, 3.9374499701747637`*^9}, {
   3.937450136142583*^9, 3.93745013710073*^9}, {3.937653260454111*^9, 
   3.937653260826236*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e83a2d1d-1514-49ad-ac80-0d4223aa1fab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fc", "[", 
   RowBox[{
   "mqs_", ",", "mqu_", ",", "mqd_", ",", "mqc_", ",", "mqb_", ",", "m0sq_", 
    ",", "dd_", ",", "uu_", ",", "ss_", ",", "xi_", ",", "f3gamma_", ",", 
    "lam_", ",", "LMB_", ",", "gssqGG_", ",", "gssq_", ",", "Msq_", ",", 
    "s0_", ",", "m3_", ",", "f3_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"fb", "[", 
    RowBox[{
    "mqs", ",", "mqu", ",", "mqd", ",", "mqc", ",", "mqb", ",", "m0sq", ",", 
     "dd", ",", "uu", ",", "ss", ",", "xi", ",", "f3gamma", ",", "lam", ",", 
     "LMB", ",", "gssqGG", ",", "gssq", ",", "Msq", ",", "s0", ",", "m3", ",",
      "f3"}], "]"}], "//.", "constantrules", " "}]}]], "Input",
 CellChangeTimes->{{3.937211630523487*^9, 3.937211693767791*^9}, {
  3.937211935104463*^9, 3.9372119452144203`*^9}, {3.937449777615642*^9, 
  3.9374497869670362`*^9}, {3.937449982075246*^9, 3.9374499959109097`*^9}, {
  3.9374501186453238`*^9, 3.9374501440772123`*^9}, {3.937451071321719*^9, 
  3.937451072635455*^9}, {3.9376539548721247`*^9, 3.937653955200037*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"411335fb-0463-4e62-9fa4-02e63ce362a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fc", "[", 
    RowBox[{
    "mqs", ",", "mqu", ",", "mqd", ",", "mqc", ",", "mqb", ",", "m0sq", ",", 
     "dd", ",", "uu", ",", "ss", ",", "xi", ",", "f3gamma", ",", "lam", ",", 
     "LMB", ",", "gssqGG", ",", "gssq", ",", "Msq", ",", "s0", ",", "m3", ",",
      "f3"}], "]"}], "//", "InputForm"}], ";"}]], "Input",
 CellChangeTimes->{{3.9371543614792957`*^9, 3.937154441165533*^9}, {
   3.937156412139015*^9, 3.937156415379096*^9}, {3.9371566002397547`*^9, 
   3.937156602701811*^9}, {3.9371618312628613`*^9, 3.937161842453628*^9}, {
   3.937211031917678*^9, 3.9372110408727818`*^9}, {3.937449276509129*^9, 
   3.937449300980756*^9}, {3.9374500040897217`*^9, 3.937450005390191*^9}, {
   3.937653276181999*^9, 3.9376532843123293`*^9}, 3.937653959202168*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"998d631a-443c-4b2d-b964-cf2eb0328957"],

Cell[CellGroupData[{

Cell[BoxData["params"], "Input",
 CellChangeTimes->{{3.937653390104692*^9, 3.9376533907316*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c4eda289-dd60-4ec4-bdf5-38ec82add533"],

Cell[BoxData[
 FormBox[
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"mqs\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.12555`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"mqu\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.0022`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"mqd\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.0047`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"mqc\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.28`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"mqb\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"4.18`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"m0sq\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.8`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"dd\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.014886936`"}], ",", "0.000021952000000000003`"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"uu\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.014886936`"}], ",", "0.000021952000000000003`"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"ss\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.011909548800000001`"}], ",", "0.0000175616`"}], 
      "}"}]}], ",", 
    RowBox[{"\<\"xi\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.15`"}], ",", "0.3`"}], "}"}]}], ",", 
    RowBox[{"\<\"f3gamma\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0039`"}], ",", "0"}], "}"}]}], ",", 
    RowBox[{"\<\"lam\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"LMB\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.5`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"gssqGG\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.4737410112522892`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"gssq\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"4.0212385965949355`", ",", "0.`"}], "}"}]}], ",", 
    RowBox[{"\<\"Msq\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"4.`", ",", "1.`"}], "}"}]}], ",", 
    RowBox[{"\<\"s0\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"5.25`", ",", "0.25`"}], "}"}]}], ",", 
    RowBox[{"\<\"m3\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.76`", ",", "0.01`"}], "}"}]}], ",", 
    RowBox[{"\<\"f3\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.0117`", ",", "0.0001`"}], "}"}]}]}], "\[RightAssociation]"}],
   TraditionalForm]], "Output",
 CellChangeTimes->{3.937653391310915*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"81e59fb2-7837-4b70-9fac-454c96eef210"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.937653401656701*^9, 3.937653403356385*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7f9e6b46-b1d1-4afb-be14-b2a3983f0aec"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.12555`", ",", "0.`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9376534080302763`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"faf6c880-a080-4375-92e7-5707072308d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9376534123462477`*^9, 3.9376534200391693`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"54683993-38e2-4f51-991d-9ff970eb3dc8"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.0022`", ",", "0.`"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.937653420480782*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"27594d29-33b2-49a4-a8a1-2becfc041fa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"paramNames", "=", 
  RowBox[{"Keys", "[", "params", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"paramRanges", "=", 
  RowBox[{"Values", "[", "params", "]"}]}]}], "Input",
 CellChangeTimes->{{3.9376532973284807`*^9, 3.93765329917387*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"e7f19e6c-a535-483b-8875-1bf19c5edcc7"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"mqs\"\>", ",", "\<\"mqu\"\>", ",", "\<\"mqd\"\>", 
    ",", "\<\"mqc\"\>", ",", "\<\"mqb\"\>", ",", "\<\"m0sq\"\>", 
    ",", "\<\"dd\"\>", ",", "\<\"uu\"\>", ",", "\<\"ss\"\>", 
    ",", "\<\"xi\"\>", ",", "\<\"f3gamma\"\>", ",", "\<\"lam\"\>", 
    ",", "\<\"LMB\"\>", ",", "\<\"gssqGG\"\>", ",", "\<\"gssq\"\>", 
    ",", "\<\"Msq\"\>", ",", "\<\"s0\"\>", ",", "\<\"m3\"\>", 
    ",", "\<\"f3\"\>"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.937653299814684*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c92766af-c1f8-488d-9e99-ae7fe1af6960"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.12555`", "0.`"},
     {"0.0022`", "0.`"},
     {"0.0047`", "0.`"},
     {"1.28`", "0.`"},
     {"4.18`", "0.`"},
     {"0.8`", "0.`"},
     {
      RowBox[{"-", "0.014886936`"}], "0.000021952000000000003`"},
     {
      RowBox[{"-", "0.014886936`"}], "0.000021952000000000003`"},
     {
      RowBox[{"-", "0.011909548800000001`"}], "0.0000175616`"},
     {
      RowBox[{"-", "3.15`"}], "0.3`"},
     {
      RowBox[{"-", "0.0039`"}], "0"},
     {"0.5`", "0.`"},
     {"0.5`", "0.`"},
     {"0.4737410112522892`", "0.`"},
     {"4.0212385965949355`", "0.`"},
     {"4.`", "1.`"},
     {"5.25`", "0.25`"},
     {"1.76`", "0.01`"},
     {"0.0117`", "0.0001`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.937653299821047*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"a517fd47-0b85-431a-af2e-2e118314d4a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"param", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", 
    RowBox[{"param", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"param", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", 
    RowBox[{"param", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"c7b1dfb1-291c-4128-9508-fb9d2e93f407"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Part", "partd", 
    "\"Part specification \\!\\(\\*FormBox[RowBox[{\\\"param\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
TraditionalForm]\\) is longer than depth of object.\"", 2, 17, 1, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.9376534593328037`*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"22b7d05d-ee1f-4ec1-8b4d-aa426892ae9e"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Part", "partd", 
    "\"Part specification \\!\\(\\*FormBox[RowBox[{\\\"param\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \
TraditionalForm]\\) is longer than depth of object.\"", 2, 17, 2, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937653459361835*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"c707440d-b686-4cc8-a13d-b80f5e153aa0"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Part", "partd", 
    "\"Part specification \\!\\(\\*FormBox[RowBox[{\\\"param\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
TraditionalForm]\\) is longer than depth of object.\"", 2, 17, 3, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.93765345937815*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"10aa1e3b-54d5-4fd9-b346-2f07a40934a0"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \\!\\(\\*FormBox[StyleBox[RowBox[{\\\"Part\\\", \
\\\"::\\\", \\\"partd\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will \
be suppressed during this calculation.\"", 2, 17, 4, 31303167872655536489, 
    "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.9376534593943768`*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"eec2bf32-ca7f-4d18-a35d-8a5b70b42839"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"param", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "-", 
     RowBox[{
     "param", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ",", 
    RowBox[{
     RowBox[{"param", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "+", 
     RowBox[{
     "param", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
   "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.937653459411881*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"6da53191-af72-44eb-afa3-a6e3be13dedd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.9376535093116283`*^9, 3.9376535102881403`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"2732c9dc-11d6-4df4-9f59-f67df88c0750"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   StyleBox[
    FrameBox[
     DynamicModuleBox[{System`InformationDump`open$$ = False, 
      System`InformationDump`mouseOver$$ = False}, 
      PaneSelectorBox[{True->
       TagBox[GridBox[{
          {
           ItemBox[
            PaneBox[
             StyleBox["\<\" Symbol\"\>", "InformationTitleText",
              StripOnInput->False,
              BaseStyle -> None],
             FrameMargins->{{4, 0}, {-1, 1}}],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False], 
           ItemBox[
            PaneBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "InformationHelpIcon"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                 CurrentValue["MouseOver"]]],
               Appearance->None,
               BaseStyle->"Link",
               
               ButtonData->
                "http://reference.wolfram.com/language/ref/Table.html",
               
               ButtonNote->
                "http://reference.wolfram.com/language/ref/Table.html"],
              "\"http://reference.wolfram.com/language/ref/Table.html\""],
             FrameMargins->{{0, 4}, {0, 2}}],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False]},
          {
           ItemBox[
            PaneBox[
             
             StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
              StripOnInput->False,
              LineSpacing->{1.5, 1.5, 3.}],
             FrameMargins->{{10, 10}, {8, 10}}],
            BaseStyle->"InformationUsageSubtitleBackground",
            StripOnInput->False], 
           ItemBox["\<\"\"\>",
            BaseStyle->"InformationUsageSubtitleBackground",
            StripOnInput->False]},
          {
           PaneBox[GridBox[{
              {
               
               DynamicModuleBox[{System`InformationDump`open$$ = {
                False, False, False, False, False, False}}, 
                StyleBox[GridBox[{
                   {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Table.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Table.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                   {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                   {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Table\"\>"}
                  },
                  AutoDelete->False,
                  GridBoxAlignment->{"Columns" -> {Right, Left}},
                  GridBoxDividers->None,
                  GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                 StripOnInput->False],
                DynamicModuleValues:>{}]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.5599999999999999]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[3.6]}, 
                 Offset[0.2]}}],
            FrameMargins->{{6, 6}, {6, 3}}], ""},
          {
           ItemBox[
            TagBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "UpPointerOpener"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
               System`InformationDump`mouseOver$$]],
              Alignment->Left,
              Appearance->{"Default" -> None},
              
              ButtonFunction:>FEPrivate`Set[
               System`InformationDump`open$$, False],
              Evaluator->Automatic,
              FrameMargins->{{9, 0}, {0, 0}},
              ImageMargins->0,
              ImageSize->Full,
              Method->"Preemptive"],
             
             EventHandlerTag[{
              "MouseEntered" :> 
               FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
               "MouseExited" :> 
               FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
               Method -> "Preemptive", PassEventsDown -> Automatic, 
               PassEventsUp -> True}]],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         FrameStyle->Directive[
           GrayLevel[0.8], 
           Thickness[Tiny]],
         GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
         
         GridBoxDividers->{
          "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"], False->
       TagBox[GridBox[{
          {
           ItemBox[
            PaneBox[
             StyleBox["\<\" Symbol\"\>", "InformationTitleText",
              StripOnInput->False],
             FrameMargins->{{4, 0}, {-1, 1}}],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False], 
           ItemBox[
            PaneBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "InformationHelpIcon"],
                 ImageSizeCache->{13., {4., 9.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "InformationHelpIconHot"],
                 ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                 CurrentValue["MouseOver"]]],
               Appearance->None,
               BaseStyle->"Link",
               
               ButtonData->
                "http://reference.wolfram.com/language/ref/Table.html",
               
               ButtonNote->
                "http://reference.wolfram.com/language/ref/Table.html"],
              "\"http://reference.wolfram.com/language/ref/Table.html\""],
             FrameMargins->{{0, 4}, {0, 2}}],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False]},
          {
           ItemBox[
            PaneBox[
             
             StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "InformationUsageText",
              StripOnInput->False,
              LineSpacing->{1.5, 1.5, 3.}],
             FrameMargins->{{10, 10}, {8, 10}}],
            BaseStyle->"InformationUsageSubtitleBackground",
            StripOnInput->False], 
           ItemBox["\<\"\"\>",
            BaseStyle->"InformationUsageSubtitleBackground",
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "DownPointerOpener"],
                ImageSizeCache->{10., {2., 8.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "DownPointerOpenerHot"],
                ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
               System`InformationDump`mouseOver$$]],
              Alignment->Left,
              Appearance->{"Default" -> None},
              
              ButtonFunction:>FEPrivate`Set[
               System`InformationDump`open$$, True],
              Evaluator->Automatic,
              FrameMargins->{{9, 0}, {0, 0}},
              ImageMargins->0,
              ImageSize->Full,
              Method->"Preemptive"],
             
             EventHandlerTag[{
              "MouseEntered" :> 
               FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
               "MouseExited" :> 
               FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
               Method -> "Preemptive", PassEventsDown -> Automatic, 
               PassEventsUp -> True}]],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         FrameStyle->Directive[
           GrayLevel[0.8], 
           Thickness[Tiny]],
         GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
         
         GridBoxDividers->{
          "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}, Dynamic[System`InformationDump`open$$],
       BaselinePosition->Baseline,
       FrameMargins->0,
       ImageSize->Automatic],
      DynamicModuleValues:>{}],
     BaseStyle->"InformationGridFrame",
     StripOnInput->False], "InformationGridPlain",
    StripOnInput->False],
   InformationData[<|
    "ObjectType" -> "Symbol", "Usage" -> 
     "\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\
\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) copies of \!\(\*StyleBox[\"expr\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) generates \
a list of the values of \!\(\*StyleBox[\"expr\", \"TI\"]\) when \
\!\(\*StyleBox[\"i\", \"TI\"]\) runs from 1 to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]}], \"]\"}]\) starts with \!\(\*RowBox[{StyleBox[\"i\", \"TI\"], \
\"=\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]}]\). \
\n\!\(\*RowBox[{\"Table\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\
\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"di\", \"TI\"]}], \"}\"}]}], \"]\"}]\) uses steps \
\!\(\*StyleBox[\"di\", \"TI\"]\). \n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"}\"}]}], \"]\"}]\) uses the \
successive values \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\), \[Ellipsis].\n\!\(\*RowBox[{\"Table\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"j\", \"TI\"], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"j\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) gives a nested list. The list associated with \
\!\(\*StyleBox[\"i\", \"TI\"]\) is outermost.", 
     "Documentation" -> <|
      "Web" -> "http://reference.wolfram.com/language/ref/Table.html"|>, 
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
     "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
     "FormatValues" -> None, "Options" -> None, 
     "Attributes" -> {HoldAll, Protected}, "FullName" -> "System`Table"|>, 
    False]], TraditionalForm]], "Output",
 CellChangeTimes->{3.937653511040195*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"18febbde-d5c5-40d3-b6b6-75b08b03cb00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3", ",", "4"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.937653541676716*^9, 3.937653596477028*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"7cff089d-5b32-41c5-a4ed-9aac0536ba31"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3", ",", "4"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.937653552933168*^9, 3.937653596809836*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"203a0479-70eb-4503-9fca-1d618b66f98d"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.937653552933168*^9, 3.937653596814308*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"aa4abdee-1028-492a-9cd7-7b624d9f14d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["paramRanges"], "Input",
 CellChangeTimes->{{3.937653713516623*^9, 3.937653719596259*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"dfdab8e6-02f4-4e92-9b8e-fa5450367f2f"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.12555`", "0.`"},
     {"0.0022`", "0.`"},
     {"0.0047`", "0.`"},
     {"1.28`", "0.`"},
     {"4.18`", "0.`"},
     {"0.8`", "0.`"},
     {
      RowBox[{"-", "0.014886936`"}], "0.000021952000000000003`"},
     {
      RowBox[{"-", "0.014886936`"}], "0.000021952000000000003`"},
     {
      RowBox[{"-", "0.011909548800000001`"}], "0.0000175616`"},
     {
      RowBox[{"-", "3.15`"}], "0.3`"},
     {
      RowBox[{"-", "0.0039`"}], "0"},
     {"0.5`", "0.`"},
     {"0.5`", "0.`"},
     {"0.4737410112522892`", "0.`"},
     {"4.0212385965949355`", "0.`"},
     {"4.`", "1.`"},
     {"5.25`", "0.25`"},
     {"1.76`", "0.01`"},
     {"0.0117`", "0.0001`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.937653720301016*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"858e791d-1e2b-41e0-aea7-2b79bf3abf0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomParams", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"param", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"param", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"param", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", 
         RowBox[{"param", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "5"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"param", ",", "paramRanges"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.937653625725021*^9, 3.93765362934918*^9}, {
  3.937653777828494*^9, 3.937653787333146*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"5e5f5105-f279-4dff-a4dc-7bd070319034"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.12555`", "0.12555`", "0.12555`", "0.12555`", "0.12555`"},
     {"0.0022`", "0.0022`", "0.0022`", "0.0022`", "0.0022`"},
     {"0.0047`", "0.0047`", "0.0047`", "0.0047`", "0.0047`"},
     {"1.28`", "1.28`", "1.28`", "1.28`", "1.28`"},
     {"4.18`", "4.18`", "4.18`", "4.18`", "4.18`"},
     {"0.8`", "0.8`", "0.8`", "0.8`", "0.8`"},
     {
      RowBox[{"-", "0.014895202934261836`"}], 
      RowBox[{"-", "0.014899608790452556`"}], 
      RowBox[{"-", "0.014891087735097812`"}], 
      RowBox[{"-", "0.014874638404517417`"}], 
      RowBox[{"-", "0.014900017610111975`"}]},
     {
      RowBox[{"-", "0.01488098813482759`"}], 
      RowBox[{"-", "0.014877881318641557`"}], 
      RowBox[{"-", "0.014879945071294988`"}], 
      RowBox[{"-", "0.014870969400649973`"}], 
      RowBox[{"-", "0.014878968968251185`"}]},
     {
      RowBox[{"-", "0.011926763259072855`"}], 
      RowBox[{"-", "0.011902952326903292`"}], 
      RowBox[{"-", "0.011915483625751701`"}], 
      RowBox[{"-", "0.011923958921421392`"}], 
      RowBox[{"-", "0.01191082657008341`"}]},
     {
      RowBox[{"-", "3.3712049558967485`"}], 
      RowBox[{"-", "3.201692326954418`"}], 
      RowBox[{"-", "3.084629212629067`"}], 
      RowBox[{"-", "3.1955291698619486`"}], 
      RowBox[{"-", "3.3911542190244086`"}]},
     {
      RowBox[{"-", "0.0039`"}], 
      RowBox[{"-", "0.0039`"}], 
      RowBox[{"-", "0.0039`"}], 
      RowBox[{"-", "0.0039`"}], 
      RowBox[{"-", "0.0039`"}]},
     {"0.5`", "0.5`", "0.5`", "0.5`", "0.5`"},
     {"0.5`", "0.5`", "0.5`", "0.5`", "0.5`"},
     {"0.4737410112522892`", "0.4737410112522892`", "0.4737410112522892`", 
      "0.4737410112522892`", "0.4737410112522892`"},
     {"4.0212385965949355`", "4.0212385965949355`", "4.0212385965949355`", 
      "4.0212385965949355`", "4.0212385965949355`"},
     {"4.288432015892639`", "3.4632485248040985`", "3.743960281581207`", 
      "3.5648462709207966`", "3.2283806405263977`"},
     {"5.338392867795816`", "5.133615925689227`", "5.462691031239264`", 
      "5.114042436006665`", "5.315529548185065`"},
     {"1.75990809800604`", "1.7589185722082143`", "1.7694701214216213`", 
      "1.7533693777813817`", "1.7544144546229041`"},
     {"0.011614574698347285`", "0.011783771341547289`", 
      "0.011753538420412539`", "0.011654234670091895`", 
      "0.011771606214388518`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.9376536298114767`*^9, {3.937653778456311*^9, 3.937653787763259*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"989bc4c8-d755-46a5-b6fb-01dc40a37b5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"results", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"fc", " ", "@@", 
       RowBox[{"(", 
        RowBox[{"randomParams", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"results2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Chop", "[", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"fc", " ", "@@", 
       RowBox[{"(", 
        RowBox[{"randomParams", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.937653877626892*^9, 3.937653899118471*^9}, {
  3.9376539786345377`*^9, 3.9376539853580236`*^9}, {3.937654024429084*^9, 
  3.937654033306137*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"45a602aa-c66a-44fb-8136-b09bcf532f85"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 37, 30, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654034309566*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"7db99510-0b62-46ab-b80f-529eaa0960c2"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"0.03417191667973381`\\\", \\\"}\
\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[\\\"2.463307335887066`*^-16\\\", TraditionalForm]\\) and \\!\
\\(\\*FormBox[\\\"2.0026569378522874`*^-16\\\", TraditionalForm]\\) for the \
integral and error estimates.\"", 2, 37, 31, 31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.9376540343307657`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"0bcc03db-a49f-4d46-b3a0-766558de043f"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 37, 32, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654034349551*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"9f298969-6c7b-43fa-ad22-f8012698fdf6"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"0.5429609791797338`\\\", \
\\\"}\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[RowBox[{\\\"-\\\", \\\"2.2898349882893854`*^-16\\\"}], \
TraditionalForm]\\) and \\!\\(\\*FormBox[\\\"1.1825225806292314`*^-16\\\", \
TraditionalForm]\\) for the integral and error estimates.\"", 2, 37, 33, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654034364748*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"31f96d16-006a-4836-ba71-ec6b20e23795"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
\\\"0.499999991032408920092499988658123221720031015280483188689686357975`65.\
954589770191\\\", \\\"}\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[RowBox[{\\\"-\\\", \\\"6.869504964868156`*^-16\\\"}], \
TraditionalForm]\\) and \\!\\(\\*FormBox[\\\"6.524311502604667`*^-13\\\", \
TraditionalForm]\\) for the integral and error estimates.\"", 2, 37, 34, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654034519103*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"94f0e727-f1cb-4913-9890-abf70e07a805"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \
\\!\\(\\*FormBox[StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"ncvb\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be suppressed \
during this calculation.\"", 2, 37, 35, 31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654034539331*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"b27644ad-feac-4b7f-b57b-5dc21449e62d"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 37, 36, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654034746318*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"3064b75b-72a9-462f-b0b9-b5814d3c3837"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \
\\!\\(\\*FormBox[StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be \
suppressed during this calculation.\"", 2, 37, 37, 31303167872655536489, 
    "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654034761715*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"7e6e7b42-5413-4636-81f5-4e24070e43e2"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"5.644181664640586`", ",", "6.996598424790134`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.937653885801167*^9, 3.937653900800578*^9}, {
   3.937653966164569*^9, 3.9376539867837257`*^9}, 3.9376540350908422`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"d644fe18-de44-423d-a300-10afa6795ea2"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 38, 38, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654035162736*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"ca96691c-9bf6-4c72-8bb2-9ced06dddb83"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"0.03417191667973381`\\\", \\\"}\
\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[\\\"2.463307335887066`*^-16\\\", TraditionalForm]\\) and \\!\
\\(\\*FormBox[\\\"2.0026569378522874`*^-16\\\", TraditionalForm]\\) for the \
integral and error estimates.\"", 2, 38, 39, 31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.9376540351818447`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"5775a440-6c19-4743-8eb8-8392eec22613"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 38, 40, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654035202366*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"918880d0-3e80-44de-a65f-586e0236a773"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"0.5429609791797338`\\\", \
\\\"}\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[RowBox[{\\\"-\\\", \\\"2.2898349882893854`*^-16\\\"}], \
TraditionalForm]\\) and \\!\\(\\*FormBox[\\\"1.1825225806292314`*^-16\\\", \
TraditionalForm]\\) for the integral and error estimates.\"", 2, 38, 41, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654035219419*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"01386b7c-014a-47c9-9f6f-fa803ec21afc"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
\\\"0.499999991032408920092499988658123221720031015280483188689686357975`65.\
954589770191\\\", \\\"}\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[RowBox[{\\\"-\\\", \\\"6.869504964868156`*^-16\\\"}], \
TraditionalForm]\\) and \\!\\(\\*FormBox[\\\"6.524311502604667`*^-13\\\", \
TraditionalForm]\\) for the integral and error estimates.\"", 2, 38, 42, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.93765403538468*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"7d8df142-238e-491a-9d06-31ba7fe428a2"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \
\\!\\(\\*FormBox[StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"ncvb\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be suppressed \
during this calculation.\"", 2, 38, 43, 31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654035404499*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"cc1f7051-ac0f-4d88-a533-84c106cda5b8"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 38, 44, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.9376540356109324`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"0b820f72-511b-4a40-982e-43748ef9a712"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \
\\!\\(\\*FormBox[StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be \
suppressed during this calculation.\"", 2, 38, 45, 31303167872655536489, 
    "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.937653899820161*^9, {3.9376539653307667`*^9, 3.937653985962379*^9}, 
   3.937654035625916*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"9d41713a-118d-47dd-84ce-d6c248bee510"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"5.644181664640586`", ",", "6.996598424790134`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.937653885801167*^9, 3.937653900800578*^9}, {
   3.937653966164569*^9, 3.9376539867837257`*^9}, 3.937654035949795*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"d433d861-f678-490b-b8bb-e8facf5d3e49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Define", " ", "a", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function", " ", "with", " ", "user"}], "-", 
    RowBox[{
    "defined", " ", "iterations", " ", "and", " ", "bin", " ", "size"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"MonteCarloUncertaintyPropagation", "[", 
     RowBox[{"f_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "100"}], ",", 
      RowBox[{"binSize_", ":", "10"}], ",", 
      RowBox[{"outputFileName_", ":", "\"\<HistogramFit.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramRanges", ",", "randomParams", ",", "results", 
        ",", "fit", ",", "histogramPlot"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Extract", " ", "parameter", " ", "names", " ", "and", " ", "their", 
        " ", "uncertainty", " ", "ranges"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"paramRanges", "=", 
        RowBox[{"Values", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "values", " ", "for", " ", "each", 
         " ", "parameter", " ", "based", " ", "on", " ", "their", " ", 
         "uncertainty", " ", "ranges"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            "iterations"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"param", ",", "paramRanges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "function", " ", "for", " ", "each", 
         " ", "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Chop", "[", 
           RowBox[{"ReleaseHold", "[", 
            RowBox[{"f", " ", "@@", 
             RowBox[{"(", 
              RowBox[{"randomParams", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal",
          " ", 
         RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
          "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", 
          " ", "publication"}], "-", 
         RowBox[{"quality", " ", "styling"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{"results", ",", "binSize", ",", "\"\<PDF\>\"", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Gaussian Fit to Function Values\>\"", ",", "Bold", ",", 
               "16"}], "]"}]}], ",", 
            RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "results", "]"}], ",", 
              RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Function Value\>\"", ",", "Bold", ",", "14"}], 
              "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], 
              "]"}]}], "}"}]}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", "\n", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"histogramPlot", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"Histogram", "[", 
             RowBox[{"results", ",", "binSize", ",", "\"\<PDF\>\"", ",", 
              RowBox[{"PlotLabel", "->", 
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<Gaussian Fit to Function Values\>\"", ",", "Bold", ",", 
                 "16"}], "]"}]}], ",", 
              RowBox[{"AxesLabel", "->", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Function Value\>\"", ",", "Bold", ",", "14"}], 
                  "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], 
                  "]"}]}], "}"}]}], ",", 
              RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
              RowBox[{"ChartStyle", "->", 
               RowBox[{"ColorData", "[", 
                RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"PDF", "[", 
               RowBox[{
                RowBox[{"NormalDistribution", "[", 
                 RowBox[{
                  RowBox[{"fit", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"fit", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
                "x"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"Min", "[", "results", "]"}], ",", 
                RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
              RowBox[{"PlotStyle", "->", 
               RowBox[{"{", 
                RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"Frame", "->", "True"}], ",", 
            RowBox[{"FrameStyle", "->", 
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
            RowBox[{"LabelStyle", "->", 
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
            RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"outputFileName", ",", "histogramPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "fitted", " ", "parameters", " ", "and", 
         " ", "the", " ", "plot", " ", "object"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{"results", ",", "fit", ",", "histogramPlot"}], "}"}]}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Example", " ", "usage"}], "*)"}], "\[IndentingNewLine]", "\n", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function", " ", "with", " ", "optional", " ", "iterations", " ", "and", 
     " ", "bin", " ", "size"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MonteCarloUncertaintyPropagation", "[", 
    RowBox[{
    "fc", ",", "params", ",", "100", ",", "100", ",", 
     "\"\<CustomHistogramFit.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.936932375075263*^9, 3.9369323750795937`*^9}, {
   3.937003054401269*^9, 3.9370030623508368`*^9}, 3.937111869916812*^9, {
   3.9371131143619347`*^9, 3.937113128447266*^9}, {3.937154491941575*^9, 
   3.9371545003848743`*^9}, {3.937154956146409*^9, 3.937154964620062*^9}, {
   3.937155260751665*^9, 3.937155279109153*^9}, {3.937210733546541*^9, 
   3.937210738782731*^9}, {3.9372109552792463`*^9, 3.937210964820471*^9}, {
   3.937450377236281*^9, 3.93745038994142*^9}, {3.937450715440688*^9, 
   3.9374507493012466`*^9}, {3.937450797540538*^9, 3.9374507978029003`*^9}, {
   3.937450995434053*^9, 3.93745099642372*^9}, {3.937451060624259*^9, 
   3.9374510608862743`*^9}, {3.9374512475249968`*^9, 3.937451248922167*^9}, 
   3.9374515745977573`*^9, {3.937455276203497*^9, 3.937455301318345*^9}, {
   3.9374554080884666`*^9, 3.9374554143032007`*^9}, {3.93745545711794*^9, 
   3.9374554615815783`*^9}, {3.937455561326383*^9, 3.937455563880272*^9}, {
   3.937653999098832*^9, 3.9376540080983553`*^9}, {3.937654057024776*^9, 
   3.9376540586248093`*^9}, {3.9376549336420116`*^9, 3.937654941213567*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"9d391523-cace-4c84-8827-0ad06d9d9f1f"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 42, 54, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937654185937882*^9, 3.937654942301598*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"1025dccc-42be-432f-a905-f0ddb38a98cd"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"0.03417191667973381`\\\", \\\"}\
\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[\\\"2.463307335887066`*^-16\\\", TraditionalForm]\\) and \\!\
\\(\\*FormBox[\\\"2.0026569378522874`*^-16\\\", TraditionalForm]\\) for the \
integral and error estimates.\"", 2, 42, 55, 31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937654185937882*^9, 3.937654942318874*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"381fe7bd-f5fb-4435-8826-1792c60345e6"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 42, 56, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937654185937882*^9, 3.937654942338394*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"1be0feb2-a143-4158-bf78-7b38b6828a27"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"0.5429609791797338`\\\", \
\\\"}\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[RowBox[{\\\"-\\\", \\\"2.2898349882893854`*^-16\\\"}], \
TraditionalForm]\\) and \\!\\(\\*FormBox[\\\"1.1825225806292314`*^-16\\\", \
TraditionalForm]\\) for the integral and error estimates.\"", 2, 42, 57, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937654185937882*^9, 3.937654942354073*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"6d6fa495-8314-48d7-a758-8b120566db9b"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "ncvb", 
    "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) recursive bisections in \
\\!\\(\\*FormBox[\\\"up\\\", TraditionalForm]\\) near \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", \\\"up\\\", \\\"}\\\"}], TraditionalForm]\
\\) = \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
\\\"0.499999991032408920092499988658123221720031015280483188689686357975`65.\
954589770191\\\", \\\"}\\\"}], TraditionalForm]\\). NIntegrate obtained \
\\!\\(\\*FormBox[RowBox[{\\\"-\\\", \\\"6.869504964868156`*^-16\\\"}], \
TraditionalForm]\\) and \\!\\(\\*FormBox[\\\"6.524311502604667`*^-13\\\", \
TraditionalForm]\\) for the integral and error estimates.\"", 2, 42, 58, 
    31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937654185937882*^9, 3.937654942521768*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"c31c21dc-4bba-4854-a1db-de225de40d99"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \
\\!\\(\\*FormBox[StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"ncvb\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be suppressed \
during this calculation.\"", 2, 42, 59, 31303167872655536489, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937654185937882*^9, 3.9376549425477962`*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"10da0d86-9a29-4256-a8ed-05f03e77ea79"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "NIntegrate", "slwcon", 
    "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"", 2, 42, 60, 31303167872655536489,
     "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937654185937882*^9, 3.937654942739952*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"6dc429b2-798b-45a4-b7a6-2f009dc7cce8"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "General", "stop", 
    "\"Further output of \
\\!\\(\\*FormBox[StyleBox[RowBox[{\\\"NIntegrate\\\", \\\"::\\\", \
\\\"slwcon\\\"}], \\\"MessageName\\\"], TraditionalForm]\\) will be \
suppressed during this calculation.\"", 2, 42, 61, 31303167872655536489, 
    "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.937654185937882*^9, 3.937654942754765*^9},
 CellLabel->
  "During evaluation of \
In[41]:=",ExpressionUUID->"fdd56005-35d3-450d-9052-16022ef47226"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "6.411971316532496`", ",", "7.01477217729877`", ",", 
      "7.976216526697623`", ",", "5.985577596579965`", ",", 
      "5.63645328663101`", ",", "7.197686028688512`", ",", "7.0119062912595`",
       ",", "5.796372488661628`", ",", "5.694089618280598`", ",", 
      "6.366962145933311`", ",", "5.4111608061832825`", ",", 
      "6.995711185294764`", ",", "6.550358656954046`", ",", 
      "5.268523778407454`", ",", "6.187071249397738`", ",", 
      "4.857051957440554`", ",", "5.20154479484143`", ",", 
      "6.297893009021394`", ",", "6.416479104216455`", ",", 
      "7.872596826734693`", ",", "5.785238105319086`", ",", 
      "5.86350829850651`", ",", "5.611303392676893`", ",", 
      "4.577069035202575`", ",", "4.840829111577143`", ",", 
      "5.365417712297017`", ",", "7.578175505786181`", ",", 
      "7.8110874967338475`", ",", "6.234973982656964`", ",", 
      "7.343191224925754`", ",", "7.068570542568132`", ",", 
      "5.323494050335507`", ",", "6.055041473037953`", ",", 
      "6.09395557617513`", ",", "4.75813076262966`", ",", 
      "6.117791401004077`", ",", "5.820184585711861`", ",", 
      "5.66041817757141`", ",", "5.604583987219833`", ",", 
      "5.6342572818020145`", ",", "5.740297038297694`", ",", 
      "6.56986323283404`", ",", "6.535405686470792`", ",", 
      "5.901831638414455`", ",", "7.015054150926058`", ",", 
      "7.000992156143461`", ",", "5.565847822217611`", ",", 
      "5.149129994556812`", ",", "7.157681675855031`", ",", 
      "6.292075242829778`", ",", "6.010219832525834`", ",", 
      "7.376272419102719`", ",", "6.955056555614602`", ",", 
      "6.658857663876104`", ",", "6.338901162680152`", ",", 
      "6.195464589473575`", ",", "5.879407455226474`", ",", 
      "7.207707001168288`", ",", "7.623627906828617`", ",", 
      "6.64752199958159`", ",", "7.213827865544086`", ",", 
      "7.642996052228689`", ",", "6.505351256759692`", ",", 
      "6.134872048199952`", ",", "5.254386747617888`", ",", 
      "5.737968632133931`", ",", "5.368723449988625`", ",", 
      "5.651523116583398`", ",", "6.399375140504876`", ",", 
      "6.675402702825323`", ",", "6.27852731367101`", ",", 
      "6.753096756035289`", ",", "4.944564200981938`", ",", 
      "6.756068769043374`", ",", "6.331793498862966`", ",", 
      "5.291866821842273`", ",", "4.953750809197166`", ",", 
      "6.6686177818539605`", ",", "5.509403203352186`", ",", 
      "5.653045022595451`", ",", "6.874751367655014`", ",", 
      "6.055576953710709`", ",", "5.793050003313519`", ",", 
      "6.799591881325668`", ",", "5.718594618589201`", ",", 
      "5.998400334675569`", ",", "5.657859232021941`", ",", 
      "4.686537419738819`", ",", "5.106155721342848`", ",", 
      "6.1400352333604395`", ",", "6.678734308673459`", ",", 
      "6.122273509893468`", ",", "5.852612049834061`", ",", 
      "6.126438016063183`", ",", "6.2003163618154655`", ",", 
      "7.89332084508127`", ",", "6.7028542340768205`", ",", 
      "4.8289322692505845`", ",", "5.548965197665634`", ",", 
      "5.525571095684052`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "6.171545676170103`"}], ",", 
      RowBox[{"\[Sigma]", "\[Rule]", "0.7926110928223045`"}]}], "}"}], ",", 
    GraphicsBox[{{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[Opacity[0.]], {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[Opacity[0.]], 
         RectangleBox[{4.56, 0}, {4.58, 0.5},
          RoundingRadius->0], RectangleBox[{4.68, 0}, {4.7, 0.5},
          RoundingRadius->0], RectangleBox[{4.74, 0}, {4.76, 0.5},
          RoundingRadius->0], RectangleBox[{4.82, 0}, {4.84, 0.5},
          RoundingRadius->0], RectangleBox[{4.84, 0}, {4.86, 1.},
          RoundingRadius->0], RectangleBox[{4.94, 0}, {4.96, 1.},
          RoundingRadius->0], RectangleBox[{5.1, 0}, {5.12, 0.5},
          RoundingRadius->0], RectangleBox[{5.14, 0}, {5.16, 0.5},
          RoundingRadius->0], RectangleBox[{5.2, 0}, {5.22, 0.5},
          RoundingRadius->0], RectangleBox[{5.24, 0}, {5.26, 0.5},
          RoundingRadius->0], RectangleBox[{5.26, 0}, {5.28, 0.5},
          RoundingRadius->0], RectangleBox[{5.28, 0}, {5.3, 0.5},
          RoundingRadius->0], RectangleBox[{5.32, 0}, {5.34, 0.5},
          RoundingRadius->0], RectangleBox[{5.36, 0}, {5.38, 1.},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.42, 0.5},
          RoundingRadius->0], RectangleBox[{5.5, 0}, {5.52, 0.5},
          RoundingRadius->0], RectangleBox[{5.52, 0}, {5.54, 0.5},
          RoundingRadius->0], RectangleBox[{5.54, 0}, {5.56, 0.5},
          RoundingRadius->0], RectangleBox[{5.56, 0}, {5.58, 0.5},
          RoundingRadius->0], RectangleBox[{5.6, 0}, {5.62, 1.},
          RoundingRadius->0], RectangleBox[{5.62, 0}, {5.64, 1.},
          RoundingRadius->0], RectangleBox[{5.64, 0}, {5.66, 1.5},
          RoundingRadius->0], RectangleBox[{5.66, 0}, {5.68, 0.5},
          RoundingRadius->0], RectangleBox[{5.68, 0}, {5.7, 0.5},
          RoundingRadius->0], RectangleBox[{5.7, 0}, {5.72, 0.5},
          RoundingRadius->0], RectangleBox[{5.72, 0}, {5.74, 0.5},
          RoundingRadius->0], RectangleBox[{5.74, 0}, {5.76, 0.5},
          RoundingRadius->0], RectangleBox[{5.78, 0}, {5.8, 1.5},
          RoundingRadius->0], RectangleBox[{5.82, 0}, {5.84, 0.5},
          RoundingRadius->0], RectangleBox[{5.84, 0}, {5.86, 0.5},
          RoundingRadius->0], RectangleBox[{5.86, 0}, {5.88, 1.},
          RoundingRadius->0], RectangleBox[{5.9, 0}, {5.92, 0.5},
          RoundingRadius->0], RectangleBox[{5.98, 0}, {6., 1.},
          RoundingRadius->0], RectangleBox[{6., 0}, {6.02, 0.5},
          RoundingRadius->0], RectangleBox[{6.04, 0}, {6.06, 1.},
          RoundingRadius->0], RectangleBox[{6.08, 0}, {6.1, 0.5},
          RoundingRadius->0], RectangleBox[{6.1, 0}, {6.12, 0.5},
          RoundingRadius->0], RectangleBox[{6.12, 0}, {6.14, 1.5},
          RoundingRadius->0], RectangleBox[{6.14, 0}, {6.16, 0.5},
          RoundingRadius->0], RectangleBox[{6.18, 0}, {6.2, 1.},
          RoundingRadius->0], RectangleBox[{6.2, 0}, {6.22, 0.5},
          RoundingRadius->0], RectangleBox[{6.22, 0}, {6.24, 0.5},
          RoundingRadius->0], RectangleBox[{6.26, 0}, {6.28, 0.5},
          RoundingRadius->0], RectangleBox[{6.28, 0}, {6.3, 1.},
          RoundingRadius->0], RectangleBox[{6.32, 0}, {6.34, 1.},
          RoundingRadius->0], RectangleBox[{6.36, 0}, {6.38, 0.5},
          RoundingRadius->0], RectangleBox[{6.38, 0}, {6.4, 0.5},
          RoundingRadius->0], RectangleBox[{6.4, 0}, {6.42, 1.},
          RoundingRadius->0], RectangleBox[{6.5, 0}, {6.52, 0.5},
          RoundingRadius->0], RectangleBox[{6.52, 0}, {6.54, 0.5},
          RoundingRadius->0], RectangleBox[{6.54, 0}, {6.56, 0.5},
          RoundingRadius->0], RectangleBox[{6.56, 0}, {6.58, 0.5},
          RoundingRadius->0], RectangleBox[{6.64, 0}, {6.66, 1.},
          RoundingRadius->0], RectangleBox[{6.66, 0}, {6.68, 1.5},
          RoundingRadius->0], RectangleBox[{6.7, 0}, {6.72, 0.5},
          RoundingRadius->0], RectangleBox[{6.74, 0}, {6.76, 1.},
          RoundingRadius->0], RectangleBox[{6.78, 0}, {6.8, 0.5},
          RoundingRadius->0], RectangleBox[{6.86, 0}, {6.88, 0.5},
          RoundingRadius->0], RectangleBox[{6.94, 0}, {6.96, 0.5},
          RoundingRadius->0], RectangleBox[{6.98, 0}, {7., 0.5},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.02, 2.},
          RoundingRadius->0], RectangleBox[{7.06, 0}, {7.08, 0.5},
          RoundingRadius->0], RectangleBox[{7.14, 0}, {7.16, 0.5},
          RoundingRadius->0], RectangleBox[{7.18, 0}, {7.2, 0.5},
          RoundingRadius->0], RectangleBox[{7.2, 0}, {7.22, 1.},
          RoundingRadius->0], RectangleBox[{7.34, 0}, {7.36, 0.5},
          RoundingRadius->0], RectangleBox[{7.36, 0}, {7.38, 0.5},
          RoundingRadius->0], RectangleBox[{7.56, 0}, {7.58, 0.5},
          RoundingRadius->0], RectangleBox[{7.62, 0}, {7.64, 0.5},
          RoundingRadius->0], RectangleBox[{7.64, 0}, {7.66, 0.5},
          RoundingRadius->0], RectangleBox[{7.8, 0}, {7.82, 0.5},
          RoundingRadius->0], RectangleBox[{7.86, 0}, {7.88, 0.5},
          RoundingRadius->0], RectangleBox[{7.88, 0}, {7.9, 0.5},
          RoundingRadius->0], RectangleBox[{7.96, 0}, {7.98, 0.5},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
          LineBox[CompressedData["
1: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
LmlwUCtkVcZ7Hu7dGWslbp0G/wc97/Vt
           "]]},
         Annotation[#, "Charting`Private`Tag$328882#1"]& ]}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{False, False},
     AxesLabel->{None, None},
     AxesOrigin->{4.4916, 0},
     BaseStyle->{FontFamily -> "Arial"},
     Frame->True,
     FrameLabel->{
       FormBox[
        StyleBox["\"Function Value\"", Bold, 14, StripOnInput -> False], 
        TraditionalForm], 
       FormBox[
        StyleBox["\"Probability\"", Bold, 14, StripOnInput -> False], 
        TraditionalForm]},
     FrameStyle->Directive[
       GrayLevel[0], 14],
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{{0}, {0}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->Large,
     LabelStyle->Directive[
       GrayLevel[0], 14],
     PlotLabel->FormBox[
       StyleBox[
       "\"Gaussian Fit to Function Values\"", Bold, 16, StripOnInput -> 
        False], TraditionalForm],
     PlotRange->{{4.56, 7.98}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.937654243145673*^9, 3.9376549817517967`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"bb66e4bc-fa11-4bf5-8cf0-14f18f05e00a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another Way:", "Section",
 CellChangeTimes->{{3.937455814209564*^9, 
  3.9374558168975286`*^9}},ExpressionUUID->"79d10ec3-a10d-46c6-b3aa-\
dc106e998409"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "General", " ", "function", " ", "for", " ", "generating", " ", 
     "histogram"}], ",", "uncertainty", ",", 
    RowBox[{"Gaussian", " ", "fit"}], ",", 
    RowBox[{"and", " ", "exporting", " ", "PDF"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
     RowBox[{"func_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "1000"}], ",", 
      RowBox[{"binSize_", ":", "20"}], ",", 
      RowBox[{"exportPath_", ":", "\"\<Histogram.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramMeans", ",", "paramSigmas", ",", 
        "randomParams", ",", "results", ",", "uncertainty", ",", "fit", ",", 
        "fitMean", ",", "fitSigma", ",", "pdfFit", ",", "histogramPlot", ",", 
        "gaussianFitPlot", ",", "combinedPlot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Extract", " ", "parameter", " ", "names"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Extract", " ", "means", " ", "and", " ", "sigmas", " ", "from", " ", 
         "the", " ", "params", " ", "association"}], "*)"}], 
       RowBox[{"paramMeans", "=", 
        RowBox[{"AssociationMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"params", "[", "#", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "paramNames"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "the", " ", "first", " ", "element", " ", 
         RowBox[{"(", "mean", ")"}]}], "*)"}], 
       RowBox[{"paramSigmas", "=", 
        RowBox[{"AssociationMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"params", "[", "#", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "paramNames"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "the", " ", "second", " ", "element", " ", 
         RowBox[{"(", "sigma", ")"}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas", " ", "from", " ", "associations"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "-", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "+", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}]}], "}"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"param", ",", "paramNames"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters", " ", "and", " ",
          "print", " ", "the", " ", "output", " ", "for", " ", "each", " ", 
         "iteration"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"output", "=", 
              RowBox[{"func", "@@", 
               RowBox[{"randomParams", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<Iteration \>\"", ",", "i", ",", "\"\<: \>\"", ",", 
               "output"}], "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{"Print", " ", "the", " ", "output"}], "*)"}], 
             "output"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meanResult", "=", 
        RowBox[{"Mean", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "a", " ", "Gaussian", " ", "distribution", " ", "to", " ",
          "the", " ", "results"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitMean", "=", 
        RowBox[{"\[Mu]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fitSigma", "=", 
        RowBox[{"\[Sigma]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Create", " ", "the", " ", "fitted", " ", "Gaussian", " ", 
         "function"}], "*)"}], 
       RowBox[{
        RowBox[{"pdfFit", "[", "x_", "]"}], ":=", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"fitMean", ",", "fitSigma"}], "]"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
         "results", " ", "using", " ", "Scientific", " ", "plot", " ", 
         "theme"}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Histogram", "[", 
         RowBox[{"results", ",", "binSize", ",", "\"\<PDF\>\"", ",", 
          RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Function Output\>\"", ",", "\"\<Probability\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "->", "\"\<Histogram with Fitted Gaussian\>\""}], ",", 
          
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Real Part of Function\>\"", ",", 
             "\"\<Probability Density\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "fitted", " ", "Gaussian", " ", "curve"}], 
        "*)"}], 
       RowBox[{"gaussianFitPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"pdfFit", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Min", "[", "results", "]"}], ",", 
            RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Combine", " ", "the", " ", "histogram", " ", "and", " ", "the", " ", 
         "Gaussian", " ", "fit", " ", "plot"}], "*)"}], 
       RowBox[{"combinedPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"histogramPlot", ",", "gaussianFitPlot", ",", 
          RowBox[{"PlotLegends", "->", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", "\"\<Fitted Gaussian\>\"", "}"}], ",", "Below"}], 
            "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Display", " ", "the", " ", "combined", " ", "plot", " ", "on", " ", 
         "the", " ", "screen"}], "*)"}], 
       RowBox[{"Print", "[", "combinedPlot", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"exportPath", ",", "combinedPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compare", " ", "the", " ", "Monte", " ", "Carlo", " ", "mean", " ", 
         "and", " ", "uncertainty", " ", "with", " ", "the", " ", "Gaussian", 
         " ", "fit"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Monte Carlo mean: \>\"", ",", "meanResult"}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Monte Carlo uncertainty (std dev): \>\"", ",", "uncertainty"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Fitted Gaussian mean: \>\"", ",", "fitMean"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Fitted Gaussian standard deviation: \>\"", ",", "fitSigma"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "Gaussian", " ", "fit", " ", "parameters", 
         " ", "and", " ", "the", " ", "uncertainty"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "fitMean", ",", "fitSigma", ",", "meanResult", ",", "uncertainty"}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function", " ", "with", " ", "combined", " ", "means", " ", "and", " ", 
     "sigmas"}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"(*", 
     RowBox[{"Example", " ", "function"}], "*)"}], 
    RowBox[{
     RowBox[{
      RowBox[{"exampleFunc", "[", 
       RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], 
       "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"13", " ", "*", 
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "10"}], " ", 
              RowBox[{"(", 
               RowBox[{"up", "-", 
                RowBox[{"1", "/", "2"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"6", " ", 
                 RowBox[{"up", "^", "2"}]}], "-", 
                RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"up", ",", 
               RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", 
           "mqd"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"96", " ", 
           RowBox[{"f3", "^", "2"}], "*", 
           RowBox[{"m3", "^", "4"}]}], ")"}]}], "\[IndentingNewLine]", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Define", " ", "the", " ", "parameters", " ", "with", " ", "both", 
          " ", "means", " ", "and", " ", "uncertainties", " ", "in", " ", 
          "one", " ", "association"}], "*)"}], "\[IndentingNewLine]", 
        "params"}], "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<m3\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0.1"}], "}"}]}], ",", 
         RowBox[{"\"\<Msq\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"5", ",", "0.1"}], "}"}]}], ",", 
         RowBox[{"\"\<uu\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1.1", ",", "0.05"}], "}"}]}], ",", 
         RowBox[{"\"\<mqd\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"3", ",", "0.1"}], "}"}]}], ",", 
         RowBox[{"\"\<f3\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"4", ",", "0.1"}], "}"}]}]}], "|>"}]}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", 
        " ", "custom", " ", "iterations"}], ",", 
       RowBox[{"bin", " ", "size"}], ",", 
       RowBox[{"and", " ", "PDF", " ", "export"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
      RowBox[{
      "exampleFunc", ",", "params", ",", "1000", ",", "200", ",", 
       "\"\<MyHistogram.pdf\>\""}], "]"}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.937111398705511*^9, 3.937111398708593*^9}, {
  3.937111461606247*^9, 3.9371114646801033`*^9}, {3.9371120072400017`*^9, 
  3.937112012413361*^9}},ExpressionUUID->"30ea76e0-f815-44aa-8486-\
80129b2e0ce1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Tests", "Subsection"]], "Section",
 CellChangeTimes->{{3.937109529026423*^9, 3.9371095295154953`*^9}, {
  3.937458808520603*^9, 
  3.937458832203217*^9}},ExpressionUUID->"c29b3290-a8e3-4ddc-bd00-\
41043aa54508"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "General", " ", "function", " ", "for", " ", "generating", " ", 
    "histogram", " ", "and", " ", "uncertainty"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertainty", "[", 
     RowBox[{"func_", ",", "paramsMeans_", ",", "paramsSigmas_", ",", 
      RowBox[{"iterations_", ":", "1000"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numParams", ",", "randomParams", ",", "results", ",", "realResults", 
        ",", "uncertainty"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Number", " ", "of", " ", "parameters"}], "*)"}], 
      RowBox[{
       RowBox[{"numParams", "=", 
        RowBox[{"Length", "[", "paramsMeans", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramsMeans", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "-", 
                RowBox[{"paramsSigmas", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramsMeans", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "+", 
                RowBox[{"paramsSigmas", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "numParams"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"func", "@@", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
         "real", " ", "part", " ", "of", " ", "the", " ", "results"}], "*)"}], 
       RowBox[{"Histogram", "[", 
        RowBox[{"results", ",", "20", ",", "\"\<PDF\>\"", ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Real(func)\>\"", ",", "\"\<Probability\>\""}], 
           "}"}]}], ",", 
         RowBox[{
         "PlotLabel", "->", "\"\<Histogram of Real Part of Function\>\""}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "histogram", " ", "and", " ", "the", " ", 
         "uncertainty"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<The uncertainty in the real part of the function is: \>\"", ",", 
         "uncertainty"}], "]"}], ";", "\[IndentingNewLine]", 
       "uncertainty"}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.937109531473916*^9, 3.937109531478194*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"68116133-bcec-428a-b77b-94d6596afa4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "I", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "means", " ", "and", " ", "uncertainties", " ",
      "for", " ", "the", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "1.1", ",", "3", ",", "4"}], "}"}]}], ";"}],
    " ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"m3", ",", "Msq", ",", "uu", ",", "mqd", ",", "f3"}], "}"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"sigmas", "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.1", ",", "0.05", ",", "0.1", ",", "0.1"}], 
      "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Corresponding", " ", "uncertainties"}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Call", " ", "the", " ", "generalized", " ", "function"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{"GenerateHistogramAndUncertainty", "[", 
    RowBox[{"exampleFunc", ",", "means", ",", "sigmas", ",", "1000"}], "]"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.937109552887102*^9, 3.937109552891658*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f7c29984-61e3-4c2d-a79f-05acd1782d04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "General", " ", "function", " ", "for", " ", "generating", " ", 
     "histogram"}], ",", "uncertainty", ",", 
    RowBox[{"and", " ", "fitting", " ", "a", " ", "Gaussian"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertaintyWithFit", "[", 
     RowBox[{"func_", ",", "paramsMeans_", ",", "paramsSigmas_", ",", 
      RowBox[{"iterations_", ":", "1000"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numParams", ",", "randomParams", ",", "results", ",", "realResults", 
        ",", "uncertainty", ",", "fit", ",", "fitMean", ",", "fitSigma"}], 
       "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Number", " ", "of", " ", "parameters"}], "*)"}], 
      RowBox[{
       RowBox[{"numParams", "=", 
        RowBox[{"Length", "[", "paramsMeans", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramsMeans", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "-", 
                RowBox[{"paramsSigmas", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramsMeans", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "+", 
                RowBox[{"paramsSigmas", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "numParams"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"func", "@@", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meanResult", "=", 
        RowBox[{"Mean", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
         "real", " ", "part", " ", "of", " ", "the", " ", "results"}], "*)"}], 
       RowBox[{"Histogram", "[", 
        RowBox[{"results", ",", "20", ",", "\"\<PDF\>\"", ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<Real(func)\>\"", ",", "\"\<Probability\>\""}], 
           "}"}]}], ",", 
         RowBox[{
         "PlotLabel", "->", "\"\<Histogram of Real Part of Function\>\""}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "a", " ", "Gaussian", " ", "distribution", " ", "to", " ",
          "the", " ", "results"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitMean", "=", 
        RowBox[{"\[Mu]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fitSigma", "=", 
        RowBox[{"\[Sigma]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Compare", " ", "the", " ", "Monte", " ", "Carlo", " ", "mean", " ", 
         "and", " ", "uncertainty", " ", "with", " ", "the", " ", "Gaussian", 
         " ", "fit"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Monte Carlo mean: \>\"", ",", "meanResult"}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Monte Carlo uncertainty (std dev): \>\"", ",", "uncertainty"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Fitted Gaussian mean: \>\"", ",", "fitMean"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Fitted Gaussian standard deviation: \>\"", ",", "fitSigma"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "Gaussian", " ", "fit", " ", "parameters", 
         " ", "and", " ", "the", " ", "uncertainty"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "fitMean", ",", "fitSigma", ",", "meanResult", ",", "uncertainty"}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.937109665323174*^9, 3.937109665326784*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"303812dc-f7ed-48be-a26f-f0cbca113302"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "means", " ", "and", " ", "uncertainties", " ",
      "for", " ", "the", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "1.1", ",", "3", ",", "4"}], "}"}]}], ";"}],
    " ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"m3", ",", "Msq", ",", "uu", ",", "mqd", ",", "f3"}], "}"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"sigmas", "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.1", ",", "0.05", ",", "0.1", ",", "0.1"}], 
      "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Corresponding", " ", "uncertainties"}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", " ",
      "Gaussian", " ", "fit"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"GenerateHistogramAndUncertaintyWithFit", "[", 
    RowBox[{"exampleFunc", ",", "means", ",", "sigmas", ",", "1000"}], "]"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.9371097104228163`*^9, 3.937109713515189*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"ff8565c5-2752-4e7d-bd1e-076c29d482ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "General", " ", "function", " ", "for", " ", "generating", " ", 
     "histogram"}], ",", "uncertainty", ",", 
    RowBox[{"Gaussian", " ", "fit"}], ",", 
    RowBox[{"and", " ", "exporting", " ", "PDF"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
     RowBox[{"func_", ",", "paramsMeans_", ",", "paramsSigmas_", ",", 
      RowBox[{"iterations_", ":", "1000"}], ",", 
      RowBox[{"exportPath_", ":", "\"\<Histogram.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numParams", ",", "randomParams", ",", "results", ",", "realResults", 
        ",", "uncertainty", ",", "fit", ",", "fitMean", ",", "fitSigma", ",", 
        "pdfFit", ",", "histogramPlot", ",", "plot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Number", " ", "of", " ", "parameters"}], "*)"}], 
      RowBox[{
       RowBox[{"numParams", "=", 
        RowBox[{"Length", "[", "paramsMeans", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramsMeans", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "-", 
                RowBox[{"paramsSigmas", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramsMeans", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "+", 
                RowBox[{"paramsSigmas", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "numParams"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"func", "@@", 
           RowBox[{"randomParams", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meanResult", "=", 
        RowBox[{"Mean", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "a", " ", "Gaussian", " ", "distribution", " ", "to", " ",
          "the", " ", "results"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitMean", "=", 
        RowBox[{"\[Mu]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fitSigma", "=", 
        RowBox[{"\[Sigma]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Create", " ", "the", " ", "fitted", " ", "Gaussian", " ", 
         "function"}], "*)"}], 
       RowBox[{
        RowBox[{"pdfFit", "[", "x_", "]"}], ":=", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"fitMean", ",", "fitSigma"}], "]"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "and", " ", "the", " ", 
         "fitted", " ", "Gaussian", " ", "function", " ", "on", " ", "top"}], 
        "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{"results", ",", "20", ",", "\"\<PDF\>\"", ",", 
            RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<Real(func)\>\"", ",", "\"\<Probability\>\""}], 
              "}"}]}], ",", 
            RowBox[{
            "PlotLabel", "->", "\"\<Histogram with Fitted Gaussian\>\""}], 
            ",", 
            RowBox[{"Frame", "->", "True"}], ",", 
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Real part of the function\>\"", ",", 
               "\"\<Probability\>\""}], "}"}]}], ",", 
            RowBox[{"ImageSize", "->", "Large"}], ",", 
            RowBox[{"PlotLegends", "->", "None"}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"pdfFit", "[", "x", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "results", "]"}], ",", 
              RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
            RowBox[{"PlotRange", "->", "All"}], ",", 
            RowBox[{"PlotLegends", "->", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"{", "\"\<Fitted Gaussian\>\"", "}"}], ",", "Below"}], 
              "]"}]}], ",", 
            RowBox[{"AxesOrigin", "->", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Display", " ", "the", " ", "plot", " ", "on", " ", "the", " ", 
         "screen"}], "*)"}], 
       RowBox[{"Print", "[", "histogramPlot", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"exportPath", ",", "histogramPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compare", " ", "the", " ", "Monte", " ", "Carlo", " ", "mean", " ", 
         "and", " ", "uncertainty", " ", "with", " ", "the", " ", "Gaussian", 
         " ", "fit"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Monte Carlo mean: \>\"", ",", "meanResult"}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Monte Carlo uncertainty (std dev): \>\"", ",", "uncertainty"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Fitted Gaussian mean: \>\"", ",", "fitMean"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Fitted Gaussian standard deviation: \>\"", ",", "fitSigma"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "Gaussian", " ", "fit", " ", "parameters", 
         " ", "and", " ", "the", " ", "uncertainty"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "fitMean", ",", "fitSigma", ",", "meanResult", ",", "uncertainty"}], 
        "}"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.937109790072123*^9, 3.937109790075873*^9}, {
  3.9371098728778887`*^9, 3.937109884623555*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"9c73288c-0f24-47aa-b9db-cab29109c637"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "means", " ", "and", " ", "uncertainties", " ",
      "for", " ", "the", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "1.1", ",", "3", ",", "4"}], "}"}]}], ";"}],
    " ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"m3", ",", "Msq", ",", "uu", ",", "mqd", ",", "f3"}], "}"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"sigmas", "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.1", ",", "0.05", ",", "0.1", ",", "0.1"}], 
      "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Corresponding", " ", "uncertainties"}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", " ",
      "PDF", " ", "export"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
    RowBox[{
    "exampleFunc", ",", "means", ",", "sigmas", ",", "1000", ",", 
     "\"\<MyHistogram.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.937109804246821*^9, 3.9371098209297533`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"98e505cc-918d-4dc4-8af6-e53a6a70d88c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "General", " ", "function", " ", "for", " ", "generating", " ", 
     "histogram"}], ",", "uncertainty", ",", 
    RowBox[{"Gaussian", " ", "fit"}], ",", 
    RowBox[{"and", " ", "exporting", " ", "PDF"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
     RowBox[{"func_", ",", "paramsMeans_", ",", "paramsSigmas_", ",", 
      RowBox[{"iterations_", ":", "1000"}], ",", 
      RowBox[{"exportPath_", ":", "\"\<Histogram.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numParams", ",", "randomParams", ",", "results", ",", "realResults", 
        ",", "uncertainty", ",", "fit", ",", "fitMean", ",", "fitSigma", ",", 
        "pdfFit", ",", "histogramPlot", ",", "gaussianFitPlot", ",", 
        "combinedPlot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Number", " ", "of", " ", "parameters"}], "*)"}], 
      RowBox[{
       RowBox[{"numParams", "=", 
        RowBox[{"Length", "[", "paramsMeans", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramsMeans", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "-", 
                RowBox[{"paramsSigmas", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramsMeans", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "+", 
                RowBox[{"paramsSigmas", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "numParams"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"func", "@@", 
           RowBox[{"randomParams", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meanResult", "=", 
        RowBox[{"Mean", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "a", " ", "Gaussian", " ", "distribution", " ", "to", " ",
          "the", " ", "results"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitMean", "=", 
        RowBox[{"\[Mu]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fitSigma", "=", 
        RowBox[{"\[Sigma]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Create", " ", "the", " ", "fitted", " ", "Gaussian", " ", 
         "function"}], "*)"}], 
       RowBox[{
        RowBox[{"pdfFit", "[", "x_", "]"}], ":=", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"fitMean", ",", "fitSigma"}], "]"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
         "results"}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Histogram", "[", 
         RowBox[{"results", ",", "20", ",", "\"\<PDF\>\"", ",", 
          RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Real(func)\>\"", ",", "\"\<Probability\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "->", "\"\<Histogram with Fitted Gaussian\>\""}], ",", 
          
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Real part of the function\>\"", ",", "\"\<Probability\>\""}],
             "}"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "fitted", " ", "Gaussian", " ", "curve"}], 
        "*)"}], 
       RowBox[{"gaussianFitPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"pdfFit", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Min", "[", "results", "]"}], ",", 
            RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Combine", " ", "the", " ", "histogram", " ", "and", " ", "the", " ", 
         "Gaussian", " ", "fit", " ", "plot"}], "*)"}], 
       RowBox[{"combinedPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"histogramPlot", ",", "gaussianFitPlot", ",", 
          RowBox[{"PlotLegends", "->", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", "\"\<Fitted Gaussian\>\"", "}"}], ",", "Below"}], 
            "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Display", " ", "the", " ", "combined", " ", "plot", " ", "on", " ", 
         "the", " ", "screen"}], "*)"}], 
       RowBox[{"Print", "[", "combinedPlot", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"exportPath", ",", "combinedPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compare", " ", "the", " ", "Monte", " ", "Carlo", " ", "mean", " ", 
         "and", " ", "uncertainty", " ", "with", " ", "the", " ", "Gaussian", 
         " ", "fit"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Monte Carlo mean: \>\"", ",", "meanResult"}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Monte Carlo uncertainty (std dev): \>\"", ",", "uncertainty"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Fitted Gaussian mean: \>\"", ",", "fitMean"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Fitted Gaussian standard deviation: \>\"", ",", "fitSigma"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "Gaussian", " ", "fit", " ", "parameters", 
         " ", "and", " ", "the", " ", "uncertainty"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "fitMean", ",", "fitSigma", ",", "meanResult", ",", "uncertainty"}], 
        "}"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9371100052665243`*^9, 3.937110005269993*^9}, {
  3.937110143939157*^9, 3.937110147961546*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"99ed9c1c-d0c2-4823-9f61-b5d60d44a185"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "means", " ", "and", " ", "uncertainties", " ",
      "for", " ", "the", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "1.1", ",", "3", ",", "4"}], "}"}]}], ";"}],
    " ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"m3", ",", "Msq", ",", "uu", ",", "mqd", ",", "f3"}], "}"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"sigmas", "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.1", ",", "0.05", ",", "0.1", ",", "0.1"}], 
      "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Corresponding", " ", "uncertainties"}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", " ",
      "PDF", " ", "export"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
    RowBox[{
    "exampleFunc", ",", "means", ",", "sigmas", ",", "1000", ",", 
     "\"\<MyHistogram.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.937110011728655*^9, 3.9371100117337*^9}, 
   3.937110154619692*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"c5013900-330d-4d12-805e-a165c0e261e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "General", " ", "function", " ", "for", " ", "generating", " ", 
     "histogram"}], ",", "uncertainty", ",", 
    RowBox[{"Gaussian", " ", "fit"}], ",", 
    RowBox[{"and", " ", "exporting", " ", "PDF"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
     RowBox[{
     "func_", ",", "paramMeans_Association", ",", "paramSigmas_Association", 
      ",", 
      RowBox[{"iterations_", ":", "1000"}], ",", 
      RowBox[{"exportPath_", ":", "\"\<Histogram.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "randomParams", ",", "results", ",", "uncertainty", 
        ",", "fit", ",", "fitMean", ",", "fitSigma", ",", "pdfFit", ",", 
        "histogramPlot", ",", "gaussianFitPlot", ",", "combinedPlot"}], "}"}],
       ",", 
      RowBox[{"(*", 
       RowBox[{
       "Extract", " ", "parameter", " ", "names", " ", "from", " ", "the", 
        " ", "association", " ", "keys"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "paramMeans", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas", " ", "from", " ", "associations"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "-", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "+", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}]}], "}"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"param", ",", "paramNames"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"func", "@@", 
           RowBox[{"randomParams", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meanResult", "=", 
        RowBox[{"Mean", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "a", " ", "Gaussian", " ", "distribution", " ", "to", " ",
          "the", " ", "results"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitMean", "=", 
        RowBox[{"\[Mu]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fitSigma", "=", 
        RowBox[{"\[Sigma]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Create", " ", "the", " ", "fitted", " ", "Gaussian", " ", 
         "function"}], "*)"}], 
       RowBox[{
        RowBox[{"pdfFit", "[", "x_", "]"}], ":=", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"fitMean", ",", "fitSigma"}], "]"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
         "results", " ", "using", " ", "Scientific", " ", "plot", " ", 
         "theme"}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Histogram", "[", 
         RowBox[{"results", ",", "20", ",", "\"\<PDF\>\"", ",", 
          RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Function Output\>\"", ",", "\"\<Probability\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "->", "\"\<Histogram with Fitted Gaussian\>\""}], ",", 
          
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Real Part of Function\>\"", ",", 
             "\"\<Probability Density\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "fitted", " ", "Gaussian", " ", "curve"}], 
        "*)"}], 
       RowBox[{"gaussianFitPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"pdfFit", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Min", "[", "results", "]"}], ",", 
            RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Combine", " ", "the", " ", "histogram", " ", "and", " ", "the", " ", 
         "Gaussian", " ", "fit", " ", "plot"}], "*)"}], 
       RowBox[{"combinedPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"histogramPlot", ",", "gaussianFitPlot", ",", 
          RowBox[{"PlotLegends", "->", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", "\"\<Fitted Gaussian\>\"", "}"}], ",", "Below"}], 
            "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Display", " ", "the", " ", "combined", " ", "plot", " ", "on", " ", 
         "the", " ", "screen"}], "*)"}], 
       RowBox[{"Print", "[", "combinedPlot", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"exportPath", ",", "combinedPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compare", " ", "the", " ", "Monte", " ", "Carlo", " ", "mean", " ", 
         "and", " ", "uncertainty", " ", "with", " ", "the", " ", "Gaussian", 
         " ", "fit"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Monte Carlo mean: \>\"", ",", "meanResult"}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Monte Carlo uncertainty (std dev): \>\"", ",", "uncertainty"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Fitted Gaussian mean: \>\"", ",", "fitMean"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Fitted Gaussian standard deviation: \>\"", ",", "fitSigma"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "Gaussian", " ", "fit", " ", "parameters", 
         " ", "and", " ", "the", " ", "uncertainty"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "fitMean", ",", "fitSigma", ",", "meanResult", ",", "uncertainty"}], 
        "}"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function", " ", "using", " ", "associations"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.937110832703289*^9, 3.937110832706697*^9}, {
  3.937110864583269*^9, 
  3.937110868628001*^9}},ExpressionUUID->"c314c71b-b2e0-4147-ab1c-\
ea2ea394c68f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "means", " ", "and", " ", "uncertainties", " ",
      "using", " ", "associations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramMeans", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<m3\>\"", "->", "2"}], ",", 
       RowBox[{"\"\<Msq\>\"", "->", "5"}], ",", 
       RowBox[{"\"\<uu\>\"", "->", "1.1"}], ",", 
       RowBox[{"\"\<mqd\>\"", "->", "3"}], ",", 
       RowBox[{"\"\<f3\>\"", "->", "4"}]}], "|>"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"paramSigmas", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<m3\>\"", "->", "0.1"}], ",", 
       RowBox[{"\"\<Msq\>\"", "->", "0.1"}], ",", 
       RowBox[{"\"\<uu\>\"", "->", "0.05"}], ",", 
       RowBox[{"\"\<mqd\>\"", "->", "0.1"}], ",", 
       RowBox[{"\"\<f3\>\"", "->", "0.1"}]}], "|>"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", " ",
      "PDF", " ", "export"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
    RowBox[{
    "exampleFunc", ",", "paramMeans", ",", "paramSigmas", ",", "1000", ",", 
     "\"\<MyHistogram.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.937110844052539*^9, 3.93711084405614*^9}, 
   3.937110874628605*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"9630d594-ac2e-4a85-89dc-053f6c7bf067"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "General", " ", "function", " ", "for", " ", "generating", " ", 
     "histogram"}], ",", "uncertainty", ",", 
    RowBox[{"Gaussian", " ", "fit"}], ",", 
    RowBox[{"and", " ", "exporting", " ", "PDF"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
     RowBox[{"func_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "1000"}], ",", 
      RowBox[{"exportPath_", ":", "\"\<Histogram.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramMeans", ",", "paramSigmas", ",", 
        "randomParams", ",", "results", ",", "uncertainty", ",", "fit", ",", 
        "fitMean", ",", "fitSigma", ",", "pdfFit", ",", "histogramPlot", ",", 
        "gaussianFitPlot", ",", "combinedPlot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Extract", " ", "parameter", " ", "names"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Extract", " ", "means", " ", "and", " ", "sigmas", " ", "from", " ", 
         "the", " ", "params", " ", "association"}], "*)"}], 
       RowBox[{"paramMeans", "=", 
        RowBox[{"AssociationMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"params", "[", "#", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "paramNames"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "the", " ", "first", " ", "element", " ", 
         RowBox[{"(", "mean", ")"}]}], "*)"}], 
       RowBox[{"paramSigmas", "=", 
        RowBox[{"AssociationMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"params", "[", "#", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "paramNames"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "the", " ", "second", " ", "element", " ", 
         RowBox[{"(", "sigma", ")"}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas", " ", "from", " ", "associations"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "-", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "+", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}]}], "}"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"param", ",", "paramNames"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"func", "@@", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meanResult", "=", 
        RowBox[{"Mean", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "a", " ", "Gaussian", " ", "distribution", " ", "to", " ",
          "the", " ", "results"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitMean", "=", 
        RowBox[{"\[Mu]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fitSigma", "=", 
        RowBox[{"\[Sigma]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Create", " ", "the", " ", "fitted", " ", "Gaussian", " ", 
         "function"}], "*)"}], 
       RowBox[{
        RowBox[{"pdfFit", "[", "x_", "]"}], ":=", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"fitMean", ",", "fitSigma"}], "]"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
         "results", " ", "using", " ", "Scientific", " ", "plot", " ", 
         "theme"}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Histogram", "[", 
         RowBox[{"results", ",", "20", ",", "\"\<PDF\>\"", ",", 
          RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Function Output\>\"", ",", "\"\<Probability\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "->", "\"\<Histogram with Fitted Gaussian\>\""}], ",", 
          
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Real Part of Function\>\"", ",", 
             "\"\<Probability Density\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "fitted", " ", "Gaussian", " ", "curve"}], 
        "*)"}], 
       RowBox[{"gaussianFitPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"pdfFit", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Min", "[", "results", "]"}], ",", 
            RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Combine", " ", "the", " ", "histogram", " ", "and", " ", "the", " ", 
         "Gaussian", " ", "fit", " ", "plot"}], "*)"}], 
       RowBox[{"combinedPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"histogramPlot", ",", "gaussianFitPlot", ",", 
          RowBox[{"PlotLegends", "->", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", "\"\<Fitted Gaussian\>\"", "}"}], ",", "Below"}], 
            "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Display", " ", "the", " ", "combined", " ", "plot", " ", "on", " ", 
         "the", " ", "screen"}], "*)"}], 
       RowBox[{"Print", "[", "combinedPlot", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"exportPath", ",", "combinedPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compare", " ", "the", " ", "Monte", " ", "Carlo", " ", "mean", " ", 
         "and", " ", "uncertainty", " ", "with", " ", "the", " ", "Gaussian", 
         " ", "fit"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Monte Carlo mean: \>\"", ",", "meanResult"}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Monte Carlo uncertainty (std dev): \>\"", ",", "uncertainty"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Fitted Gaussian mean: \>\"", ",", "fitMean"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Fitted Gaussian standard deviation: \>\"", ",", "fitSigma"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "Gaussian", " ", "fit", " ", "parameters", 
         " ", "and", " ", "the", " ", "uncertainty"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "fitMean", ",", "fitSigma", ",", "meanResult", ",", "uncertainty"}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function", " ", "with", " ", "combined", " ", "means", " ", "and", " ", 
     "sigmas"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9371110687089376`*^9, 3.937111068714839*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f25889e3-091b-45cc-9b1e-2d360120aa90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "parameters", " ", "with", " ", "both", " ", 
     "means", " ", "and", " ", "uncertainties", " ", "in", " ", "one", " ", 
     "association"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<m3\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<Msq\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"5", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<uu\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0.05"}], "}"}]}], ",", 
       RowBox[{"\"\<mqd\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"3", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<f3\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.1"}], "}"}]}]}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", " ",
      "PDF", " ", "export"}], "*)"}], "\n", 
   RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
    RowBox[{
    "exampleFunc", ",", "params", ",", "1000", ",", 
     "\"\<MyHistogram.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9371110747923822`*^9, 3.9371110810035*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8c9838c5-87b5-4c53-9cca-86e4fe117292"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "General", " ", "function", " ", "for", " ", "generating", " ", 
     "histogram"}], ",", "uncertainty", ",", 
    RowBox[{"Gaussian", " ", "fit"}], ",", 
    RowBox[{"and", " ", "exporting", " ", "PDF"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
     RowBox[{"func_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "1000"}], ",", 
      RowBox[{"binSize_", ":", "20"}], ",", 
      RowBox[{"exportPath_", ":", "\"\<Histogram.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramMeans", ",", "paramSigmas", ",", 
        "randomParams", ",", "results", ",", "uncertainty", ",", "fit", ",", 
        "fitMean", ",", "fitSigma", ",", "pdfFit", ",", "histogramPlot", ",", 
        "gaussianFitPlot", ",", "combinedPlot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Extract", " ", "parameter", " ", "names"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Extract", " ", "means", " ", "and", " ", "sigmas", " ", "from", " ", 
         "the", " ", "params", " ", "association"}], "*)"}], 
       RowBox[{"paramMeans", "=", 
        RowBox[{"AssociationMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"params", "[", "#", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "paramNames"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "the", " ", "first", " ", "element", " ", 
         RowBox[{"(", "mean", ")"}]}], "*)"}], 
       RowBox[{"paramSigmas", "=", 
        RowBox[{"AssociationMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"params", "[", "#", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "paramNames"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "the", " ", "second", " ", "element", " ", 
         RowBox[{"(", "sigma", ")"}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas", " ", "from", " ", "associations"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "-", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "+", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}]}], "}"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"param", ",", "paramNames"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"func", "@@", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meanResult", "=", 
        RowBox[{"Mean", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "a", " ", "Gaussian", " ", "distribution", " ", "to", " ",
          "the", " ", "results"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitMean", "=", 
        RowBox[{"\[Mu]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fitSigma", "=", 
        RowBox[{"\[Sigma]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Create", " ", "the", " ", "fitted", " ", "Gaussian", " ", 
         "function"}], "*)"}], 
       RowBox[{
        RowBox[{"pdfFit", "[", "x_", "]"}], ":=", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"fitMean", ",", "fitSigma"}], "]"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
         "results", " ", "using", " ", "Scientific", " ", "plot", " ", 
         "theme"}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Histogram", "[", 
         RowBox[{"results", ",", "binSize", ",", "\"\<PDF\>\"", ",", 
          RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Function Output\>\"", ",", "\"\<Probability\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "->", "\"\<Histogram with Fitted Gaussian\>\""}], ",", 
          
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Real Part of Function\>\"", ",", 
             "\"\<Probability Density\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "fitted", " ", "Gaussian", " ", "curve"}], 
        "*)"}], 
       RowBox[{"gaussianFitPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"pdfFit", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Min", "[", "results", "]"}], ",", 
            RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Combine", " ", "the", " ", "histogram", " ", "and", " ", "the", " ", 
         "Gaussian", " ", "fit", " ", "plot"}], "*)"}], 
       RowBox[{"combinedPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"histogramPlot", ",", "gaussianFitPlot", ",", 
          RowBox[{"PlotLegends", "->", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", "\"\<Fitted Gaussian\>\"", "}"}], ",", "Below"}], 
            "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Display", " ", "the", " ", "combined", " ", "plot", " ", "on", " ", 
         "the", " ", "screen"}], "*)"}], 
       RowBox[{"Print", "[", "combinedPlot", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"exportPath", ",", "combinedPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compare", " ", "the", " ", "Monte", " ", "Carlo", " ", "mean", " ", 
         "and", " ", "uncertainty", " ", "with", " ", "the", " ", "Gaussian", 
         " ", "fit"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Monte Carlo mean: \>\"", ",", "meanResult"}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Monte Carlo uncertainty (std dev): \>\"", ",", "uncertainty"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Fitted Gaussian mean: \>\"", ",", "fitMean"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Fitted Gaussian standard deviation: \>\"", ",", "fitSigma"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "Gaussian", " ", "fit", " ", "parameters", 
         " ", "and", " ", "the", " ", "uncertainty"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "fitMean", ",", "fitSigma", ",", "meanResult", ",", "uncertainty"}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function", " ", "with", " ", "combined", " ", "means", " ", "and", " ", 
     "sigmas"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9371112435233107`*^9, 3.937111243527141*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0b979fb3-1e30-4986-b306-a80986181ff0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "parameters", " ", "with", " ", "both", " ", 
     "means", " ", "and", " ", "uncertainties", " ", "in", " ", "one", " ", 
     "association"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<m3\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<Msq\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"5", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<uu\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0.05"}], "}"}]}], ",", 
       RowBox[{"\"\<mqd\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"3", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<f3\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.1"}], "}"}]}]}], "|>"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", 
      " ", "custom", " ", "iterations"}], ",", 
     RowBox[{"bin", " ", "size"}], ",", 
     RowBox[{"and", " ", "PDF", " ", "export"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
    RowBox[{
    "exampleFunc", ",", "params", ",", "2000", ",", "30", ",", 
     "\"\<MyHistogram.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.937111249587542*^9, 3.937111255002274*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"88495d0b-f4d6-4f42-b9a4-30d041fec0da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "General", " ", "function", " ", "for", " ", "generating", " ", 
     "histogram"}], ",", "uncertainty", ",", 
    RowBox[{"Gaussian", " ", "fit"}], ",", 
    RowBox[{"and", " ", "exporting", " ", "PDF"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
     RowBox[{"func_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "1000"}], ",", 
      RowBox[{"binSize_", ":", "20"}], ",", 
      RowBox[{"exportPath_", ":", "\"\<Histogram.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramMeans", ",", "paramSigmas", ",", 
        "randomParams", ",", "results", ",", "uncertainty", ",", "fit", ",", 
        "fitMean", ",", "fitSigma", ",", "pdfFit", ",", "histogramPlot", ",", 
        "gaussianFitPlot", ",", "combinedPlot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Extract", " ", "parameter", " ", "names"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Extract", " ", "means", " ", "and", " ", "sigmas", " ", "from", " ", 
         "the", " ", "params", " ", "association"}], "*)"}], 
       RowBox[{"paramMeans", "=", 
        RowBox[{"AssociationMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"params", "[", "#", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", "paramNames"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "the", " ", "first", " ", "element", " ", 
         RowBox[{"(", "mean", ")"}]}], "*)"}], 
       RowBox[{"paramSigmas", "=", 
        RowBox[{"AssociationMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"params", "[", "#", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "paramNames"}], 
         "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Extract", " ", "the", " ", "second", " ", "element", " ", 
         RowBox[{"(", "sigma", ")"}]}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "parameter", " ", "sets", " ", 
         "based", " ", "on", " ", "the", " ", "means", " ", "and", " ", 
         "sigmas", " ", "from", " ", "associations"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "-", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}], ",", 
               RowBox[{
                RowBox[{"paramMeans", "[", "param", "]"}], "+", 
                RowBox[{"paramSigmas", "[", "param", "]"}]}]}], "}"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"param", ",", "paramNames"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Evaluate", " ", "the", " ", "function", " ", "for", " ", "each", " ",
          "set", " ", "of", " ", "random", " ", "parameters", " ", "and", " ",
          "print", " ", "the", " ", "output", " ", "for", " ", "each", " ", 
         "iteration"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"output", "=", 
              RowBox[{"func", "@@", 
               RowBox[{"randomParams", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<Iteration \>\"", ",", "i", ",", "\"\<: \>\"", ",", 
               "output"}], "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{"Print", " ", "the", " ", "output"}], "*)"}], 
             "output"}]}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "func", " ", "to", " ", "each", " ", "set", " ", 
            "of", " ", "parameters", " ", "and", " ", "get", " ", "the", " ", 
            "real", " ", "part"}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "the", " ", "uncertainty", " ", 
         RowBox[{"(", 
          RowBox[{"standard", " ", "deviation"}], ")"}], " ", "of", " ", 
         "the", " ", "real", " ", "part"}], "*)"}], 
       RowBox[{"uncertainty", "=", 
        RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"meanResult", "=", 
        RowBox[{"Mean", "[", "results", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "a", " ", "Gaussian", " ", "distribution", " ", "to", " ",
          "the", " ", "results"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitMean", "=", 
        RowBox[{"\[Mu]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fitSigma", "=", 
        RowBox[{"\[Sigma]", "/.", " ", "fit"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Create", " ", "the", " ", "fitted", " ", "Gaussian", " ", 
         "function"}], "*)"}], 
       RowBox[{
        RowBox[{"pdfFit", "[", "x_", "]"}], ":=", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"fitMean", ",", "fitSigma"}], "]"}], ",", "x"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
         "results", " ", "using", " ", "Scientific", " ", "plot", " ", 
         "theme"}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Histogram", "[", 
         RowBox[{"results", ",", "binSize", ",", "\"\<PDF\>\"", ",", 
          RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
          RowBox[{"AxesLabel", "->", 
           RowBox[{"{", 
            RowBox[{"\"\<Function Output\>\"", ",", "\"\<Probability\>\""}], 
            "}"}]}], ",", 
          RowBox[{
          "PlotLabel", "->", "\"\<Histogram with Fitted Gaussian\>\""}], ",", 
          
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameLabel", "->", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Real Part of Function\>\"", ",", 
             "\"\<Probability Density\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Plot", " ", "the", " ", "fitted", " ", "Gaussian", " ", "curve"}], 
        "*)"}], 
       RowBox[{"gaussianFitPlot", "=", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"pdfFit", "[", "x", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"Min", "[", "results", "]"}], ",", 
            RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Combine", " ", "the", " ", "histogram", " ", "and", " ", "the", " ", 
         "Gaussian", " ", "fit", " ", "plot"}], "*)"}], 
       RowBox[{"combinedPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{"histogramPlot", ",", "gaussianFitPlot", ",", 
          RowBox[{"PlotLegends", "->", 
           RowBox[{"Placed", "[", 
            RowBox[{
             RowBox[{"{", "\"\<Fitted Gaussian\>\"", "}"}], ",", "Below"}], 
            "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Display", " ", "the", " ", "combined", " ", "plot", " ", "on", " ", 
         "the", " ", "screen"}], "*)"}], 
       RowBox[{"Print", "[", "combinedPlot", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"exportPath", ",", "combinedPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compare", " ", "the", " ", "Monte", " ", "Carlo", " ", "mean", " ", 
         "and", " ", "uncertainty", " ", "with", " ", "the", " ", "Gaussian", 
         " ", "fit"}], "*)"}], 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Monte Carlo mean: \>\"", ",", "meanResult"}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Monte Carlo uncertainty (std dev): \>\"", ",", "uncertainty"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Fitted Gaussian mean: \>\"", ",", "fitMean"}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Fitted Gaussian standard deviation: \>\"", ",", "fitSigma"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "Gaussian", " ", "fit", " ", "parameters", 
         " ", "and", " ", "the", " ", "uncertainty"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{
        "fitMean", ",", "fitSigma", ",", "meanResult", ",", "uncertainty"}], 
        "}"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Example", " ", "usage", " ", "of", " ", "the", " ", "generalized", " ", 
     "function", " ", "with", " ", "combined", " ", "means", " ", "and", " ", 
     "sigmas"}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"(*", 
     RowBox[{"Example", " ", "function"}], "*)"}], 
    RowBox[{
     RowBox[{
      RowBox[{"exampleFunc", "[", 
       RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], 
       "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"13", " ", "*", 
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "10"}], " ", 
              RowBox[{"(", 
               RowBox[{"up", "-", 
                RowBox[{"1", "/", "2"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"6", " ", 
                 RowBox[{"up", "^", "2"}]}], "-", 
                RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"up", ",", 
               RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", 
           "mqd"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"96", " ", 
           RowBox[{"f3", "^", "2"}], "*", 
           RowBox[{"m3", "^", "4"}]}], ")"}]}], "\[IndentingNewLine]", "\n", 
        RowBox[{"(*", 
         RowBox[{
         "Define", " ", "the", " ", "parameters", " ", "with", " ", "both", 
          " ", "means", " ", "and", " ", "uncertainties", " ", "in", " ", 
          "one", " ", "association"}], "*)"}], "\[IndentingNewLine]", 
        "params"}], "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<m3\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0.1"}], "}"}]}], ",", 
         RowBox[{"\"\<Msq\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"5", ",", "0.1"}], "}"}]}], ",", 
         RowBox[{"\"\<uu\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1.1", ",", "0.05"}], "}"}]}], ",", 
         RowBox[{"\"\<mqd\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"3", ",", "0.1"}], "}"}]}], ",", 
         RowBox[{"\"\<f3\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"4", ",", "0.1"}], "}"}]}]}], "|>"}]}]}], ";", 
     "\[IndentingNewLine]", "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", 
        " ", "custom", " ", "iterations"}], ",", 
       RowBox[{"bin", " ", "size"}], ",", 
       RowBox[{"and", " ", "PDF", " ", "export"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
      RowBox[{
      "exampleFunc", ",", "params", ",", "1000", ",", "200", ",", 
       "\"\<MyHistogram.pdf\>\""}], "]"}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.937111398705511*^9, 3.937111398708593*^9}, {
  3.937111461606247*^9, 3.9371114646801033`*^9}, {3.9371120072400017`*^9, 
  3.937112012413361*^9}},ExpressionUUID->"88e3058d-2940-4b32-a153-\
01ef90834cef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "parameters", " ", "with", " ", "both", " ", 
     "means", " ", "and", " ", "uncertainties", " ", "in", " ", "one", " ", 
     "association"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<m3\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"2", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<Msq\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"5", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<uu\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"1.1", ",", "0.05"}], "}"}]}], ",", 
       RowBox[{"\"\<mqd\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"3", ",", "0.1"}], "}"}]}], ",", 
       RowBox[{"\"\<f3\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"4", ",", "0.1"}], "}"}]}]}], "|>"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Call", " ", "the", " ", "generalized", " ", "function", " ", "with", 
      " ", "custom", " ", "iterations"}], ",", 
     RowBox[{"bin", " ", "size"}], ",", 
     RowBox[{"and", " ", "PDF", " ", "export"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"GenerateHistogramAndUncertaintyWithFitExport", "[", 
    RowBox[{
    "exampleFunc", ",", "params", ",", "1000", ",", "200", ",", 
     "\"\<MyHistogram.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.937111404099783*^9, 3.9371114144111137`*^9}, {
  3.937111493798152*^9, 3.937111508406801*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"de3707e1-94ff-4207-b23d-bf82188e9e70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"exampleFunc", "[", 
     RowBox[{"m3_", ",", "Msq_", ",", "uu_", ",", "mqd_", ",", "f3_"}], "]"}],
     ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"13", " ", "I", "*", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"m3", "^", "2"}], "/", "Msq"}], ")"}]}], "*", "uu", "*", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "10"}], " ", 
          RowBox[{"(", 
           RowBox[{"up", "-", 
            RowBox[{"1", "/", "2"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             RowBox[{"up", "^", "2"}]}], "-", 
            RowBox[{"6", " ", "up"}], "+", "1"}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"up", ",", 
           RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "]"}], "*", "mqd"}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"96", " ", 
       RowBox[{"f3", "^", "2"}], "*", 
       RowBox[{"m3", "^", "4"}]}], ")"}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Test", " ", "with", " ", "specific", " ", "values", " ", "for", " ", 
     "the", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testParams", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "1.1", ",", "3", ",", "4"}], "}"}]}], ";"}],
    " ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"m3", ",", "Msq", ",", "uu", ",", "mqd", ",", "f3"}], "}"}], 
    "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Apply", " ", "the", " ", "parameters", " ", "to", " ", "the", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"output", "=", 
     RowBox[{"exampleFunc", "@@", "testParams"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Print", " ", "the", " ", "result"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Output for specific test parameters: \>\"", ",", "output"}], 
    "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9371116962085247`*^9, 3.9371116962120857`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2286c2dd-b7e8-4afb-926a-168aa3162b78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Another", " ", "test", " ", "case", " ", "with", " ", "different", " ", 
    "parameters"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"testParams2", "=", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "4.8", ",", "1.2", ",", "2.5", ",", "3.8"}], 
      "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"output2", "=", 
     RowBox[{"exampleFunc", "@@", "testParams2"}]}], ";"}], "\n", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Output for testParams2: \>\"", ",", "output2"}], "]"}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.9371117111016808`*^9, 3.9371117111058407`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"fa4807c9-b79c-4614-872c-ac5282e5b9c8"]
}, Closed]]
},
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"51ce0123-1677-4a9b-9dec-770ec096f44a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 158, 3, 69, "Section",ExpressionUUID->"1bf09f4b-fb1d-4958-b4a5-42a4a78be399"],
Cell[741, 27, 744, 20, 41, "Input",ExpressionUUID->"5e29f74a-d2e8-4252-b1b7-89a49e993a5a"],
Cell[1488, 49, 162, 3, 34, "Text",ExpressionUUID->"e6457ff9-c7b5-44aa-8aff-f612a81e45e2"],
Cell[1653, 54, 443, 11, 41, "Input",ExpressionUUID->"532567d9-bbc8-427e-ade2-39a6caf2ae3d"],
Cell[2099, 67, 152, 3, 34, "Text",ExpressionUUID->"0f269869-012d-4128-8ecb-8fff750ad842"],
Cell[2254, 72, 422, 10, 41, "Input",ExpressionUUID->"a55d9e39-c00a-44e9-9ffe-b15c66063bc3"],
Cell[2679, 84, 670, 15, 63, "Input",ExpressionUUID->"3634dbd2-4595-4851-a5f6-0fca02a36ee5"],
Cell[3352, 101, 569, 14, 63, "Input",ExpressionUUID->"7ff254a6-a5f7-43ee-a33c-6fb9dd28fac8"],
Cell[3924, 117, 166, 3, 34, "Text",ExpressionUUID->"7aafc06a-1903-4a6d-8be2-0c7b567caff3"],
Cell[4093, 122, 567, 13, 63, "Input",ExpressionUUID->"09476bc6-dd2b-42a5-a965-c9a14fddca7e"],
Cell[4663, 137, 268, 5, 41, "Input",ExpressionUUID->"acd2d19f-6c35-4896-95f6-eb4b8fc1aa4d"],
Cell[4934, 144, 364, 8, 41, "Input",ExpressionUUID->"46cf7c5b-e3eb-453f-bc51-895788c9a3dc"],
Cell[5301, 154, 366, 8, 41, "Input",ExpressionUUID->"2c5762fd-a297-48cb-856a-bc06286b0ba5"],
Cell[5670, 164, 460, 9, 41, "Input",ExpressionUUID->"e4beea3e-89c8-4ad8-85ca-5d5f8ba73cfc"],
Cell[6133, 175, 159, 3, 34, "Text",ExpressionUUID->"68751675-b168-4542-8a69-6f91b2327d6e"],
Cell[6295, 180, 192, 3, 41, "Input",ExpressionUUID->"cc4186a2-d4fe-4880-b4ef-3f2cae48bc50"],
Cell[6490, 185, 392, 9, 41, "Input",ExpressionUUID->"47916008-7ea2-4da8-b236-71a67889b7cc"],
Cell[6885, 196, 286, 5, 41, "Input",ExpressionUUID->"8f992770-d002-4039-9459-54cee53a8b1c"],
Cell[7174, 203, 203, 5, 41, "Input",ExpressionUUID->"81cd12e7-d107-4d9f-b424-6b514264dcda"]
}, Closed]],
Cell[CellGroupData[{
Cell[7414, 213, 159, 3, 55, "Section",ExpressionUUID->"e985ddc7-e7c0-45bf-9570-d8cc36e5b961"],
Cell[7576, 218, 304, 7, 80, "Text",ExpressionUUID->"c5877190-8c5e-480b-922e-d4b465413252"],
Cell[7883, 227, 370, 8, 63, "Input",ExpressionUUID->"9d8c304b-aabb-4532-b64b-12efa57d2381"],
Cell[8256, 237, 19804, 331, 123, "Text",ExpressionUUID->"a3074c38-24bd-4e44-8dfe-301ae7fd6cee"],
Cell[28063, 570, 63894, 1054, 461, "Text",ExpressionUUID->"b2754362-59ba-4c62-b03d-67da63842c9f"],
Cell[91960, 1626, 474, 11, 58, "Input",ExpressionUUID->"9c82c4ce-cc0e-4f1f-90e4-ac3d9e34f672"],
Cell[92437, 1639, 713, 17, 126, "Input",ExpressionUUID->"b45441fe-aa0b-4996-95eb-ff20ded43aa9"],
Cell[93153, 1658, 272, 6, 34, "Text",ExpressionUUID->"919d2d16-c100-4d1c-956c-e812c9bd480c"],
Cell[93428, 1666, 495, 11, 105, "Input",ExpressionUUID->"b46320e6-88c8-49a7-af9f-f875448c6018"],
Cell[93926, 1679, 2489, 64, 378, "Input",ExpressionUUID->"2580178e-67dd-4a24-8b0e-de936b7594fc"],
Cell[96418, 1745, 1072, 30, 147, "Input",ExpressionUUID->"5fc18c0b-922b-4154-a2e8-cfb0f359670a"],
Cell[97493, 1777, 197, 3, 41, "Input",ExpressionUUID->"6ceee677-a5a4-4841-908c-4f22fca45046"],
Cell[97693, 1782, 3638, 93, 523, "Input",ExpressionUUID->"5d7471ee-a11c-4361-9ab6-763be5182e2f"],
Cell[101334, 1877, 4441, 118, 504, "Input",ExpressionUUID->"e3e4c6c4-3489-4120-981b-e2421d9e80bb"],
Cell[105778, 1997, 5545, 145, 588, "Input",ExpressionUUID->"b19efd39-8eb6-4da5-b432-a3ef2a846990"],
Cell[111326, 2144, 196, 3, 34, "Text",ExpressionUUID->"edf0d7ad-95da-45bb-9bad-5259f06d4f33"],
Cell[111525, 2149, 7734, 195, 630, "Input",ExpressionUUID->"8c2f56b0-a262-4507-821b-b7ff97f555bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119296, 2349, 161, 3, 69, "Section",ExpressionUUID->"d0882d2e-74d6-4dfc-800c-6841f5c7c248"],
Cell[119460, 2354, 8144, 201, 588, "Input",ExpressionUUID->"3c2bf1d4-d161-491d-83f8-4118f4cd47ca"],
Cell[127607, 2557, 175, 3, 34, "Text",ExpressionUUID->"1cefcfb4-2f4a-430a-b02e-968191d808f5"],
Cell[127785, 2562, 8645, 214, 672, "Input",ExpressionUUID->"05fd9704-2e59-4b87-9e2a-0d83e5c54ce8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136467, 2781, 160, 3, 69, "Section",ExpressionUUID->"f49f1549-671d-4e59-9491-d17c5ec0b66c"],
Cell[CellGroupData[{
Cell[136652, 2788, 156, 3, 34, "Subsection",ExpressionUUID->"5eaa0d07-0dc2-4e05-81cb-065238d5cbee"],
Cell[136811, 2793, 56002, 924, 412, "Text",ExpressionUUID->"868a515e-eca1-4fea-8bce-bb0e1426c639"],
Cell[192816, 3719, 33044, 548, 296, "Text",ExpressionUUID->"858c82e7-8aeb-4ffe-9c1b-5dc005e31c4b"],
Cell[225863, 4269, 9206, 158, 139, "Text",ExpressionUUID->"03e479f5-5c7a-46e3-87a4-7f2e0bd803ad"],
Cell[235072, 4429, 81552, 1344, 343, "Text",ExpressionUUID->"9a73d132-028f-47db-9e32-f291e34740a7"],
Cell[316627, 5775, 81023, 1335, 333, "Text",ExpressionUUID->"dc1d098d-6660-40c5-8e43-daaa7a242638"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397687, 7115, 165, 3, 34, "Subsection",ExpressionUUID->"8620910d-26bd-4b22-a32b-680043caf8fa"],
Cell[397855, 7120, 2958, 94, 105, "Input",ExpressionUUID->"1652231b-eed4-4d5e-a4e1-d9f039386585"],
Cell[400816, 7216, 2417, 56, 462, "Input",ExpressionUUID->"9c445492-bcc5-4de4-aad3-c66f7aebbff2"],
Cell[CellGroupData[{
Cell[403258, 7276, 4526, 119, 506, "Input",ExpressionUUID->"f37ded91-241b-4606-a343-7675ff3e2bfa"],
Cell[407787, 7397, 2592, 71, 55, "Output",ExpressionUUID->"b2a85b2b-6710-45f9-b3de-725eb704a206"]
}, Open  ]],
Cell[410394, 7471, 1410, 31, 63, "Input",ExpressionUUID->"8e4c0616-58e9-4504-a858-eced8eab2772"],
Cell[CellGroupData[{
Cell[411829, 7506, 248, 4, 41, "Input",ExpressionUUID->"18c4df38-eed9-4f2c-87fb-3413cedb49be"],
Cell[412080, 7512, 215, 4, 37, "Output",ExpressionUUID->"a0688590-9154-4560-ba36-7a66656a649b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412332, 7521, 894, 15, 41, "Input",ExpressionUUID->"aeb53714-e2f1-476c-a04c-c33913b045d5"],
Cell[413229, 7538, 5966, 133, 263, "Output",ExpressionUUID->"bf0f3184-9e4f-474b-a737-c3838fc1059e"]
}, Open  ]],
Cell[419210, 7674, 2435, 49, 84, "Input",ExpressionUUID->"e83a2d1d-1514-49ad-ac80-0d4223aa1fab"],
Cell[421648, 7725, 1126, 20, 63, "Input",ExpressionUUID->"411335fb-0463-4e62-9fa4-02e63ce362a6"],
Cell[422777, 7747, 885, 15, 41, "Input",ExpressionUUID->"998d631a-443c-4b2d-b964-cf2eb0328957"],
Cell[CellGroupData[{
Cell[423687, 7766, 175, 2, 41, "Input",ExpressionUUID->"c4eda289-dd60-4ec4-bdf5-38ec82add533"],
Cell[423865, 7770, 2593, 71, 55, "Output",ExpressionUUID->"81e59fb2-7837-4b70-9fac-454c96eef210"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426495, 7846, 227, 4, 41, "Input",ExpressionUUID->"7f9e6b46-b1d1-4afb-be14-b2a3983f0aec"],
Cell[426725, 7852, 235, 5, 37, "Output",ExpressionUUID->"faf6c880-a080-4375-92e7-5707072308d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426997, 7862, 231, 4, 41, "Input",ExpressionUUID->"54683993-38e2-4f51-991d-9ff970eb3dc8"],
Cell[427231, 7868, 232, 5, 37, "Output",ExpressionUUID->"27594d29-33b2-49a4-a8a1-2becfc041fa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427500, 7878, 340, 6, 63, "Input",ExpressionUUID->"e7f19e6c-a535-483b-8875-1bf19c5edcc7"],
Cell[427843, 7886, 616, 11, 37, "Output",ExpressionUUID->"c92766af-c1f8-488d-9e99-ae7fe1af6960"],
Cell[428462, 7899, 1205, 37, 345, "Output",ExpressionUUID->"a517fd47-0b85-431a-af2e-2e118314d4a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429704, 7941, 439, 13, 41, "Input",ExpressionUUID->"c7b1dfb1-291c-4128-9508-fb9d2e93f407"],
Cell[430146, 7956, 516, 12, 28, "Message",ExpressionUUID->"22b7d05d-ee1f-4ec1-8b4d-aa426892ae9e"],
Cell[430665, 7970, 514, 12, 28, "Message",ExpressionUUID->"c707440d-b686-4cc8-a13d-b80f5e153aa0"],
Cell[431182, 7984, 513, 12, 28, "Message",ExpressionUUID->"10aa1e3b-54d5-4fd9-b346-2f07a40934a0"],
Cell[431698, 7998, 514, 12, 28, "Message",ExpressionUUID->"eec2bf32-ca7f-4d18-a35d-8a5b70b42839"],
Cell[432215, 8012, 598, 16, 37, "Output",ExpressionUUID->"6da53191-af72-44eb-afa3-a6e3be13dedd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432850, 8033, 197, 3, 41, "Input",ExpressionUUID->"2732c9dc-11d6-4df4-9f59-f67df88c0750"],
Cell[433050, 8038, 21079, 419, 222, "Output",ExpressionUUID->"18febbde-d5c5-40d3-b6b6-75b08b03cb00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454166, 8462, 421, 11, 63, "Input",ExpressionUUID->"7cff089d-5b32-41c5-a4ed-9aac0536ba31"],
Cell[454590, 8475, 248, 5, 37, "Output",ExpressionUUID->"203a0479-70eb-4503-9fca-1d618b66f98d"],
Cell[454841, 8482, 271, 6, 37, "Output",ExpressionUUID->"aa4abdee-1028-492a-9cd7-7b624d9f14d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455149, 8493, 182, 2, 41, "Input",ExpressionUUID->"dfdab8e6-02f4-4e92-9b8e-fa5450367f2f"],
Cell[455334, 8497, 1205, 37, 345, "Output",ExpressionUUID->"858e791d-1e2b-41e0-aea7-2b79bf3abf0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456576, 8539, 832, 22, 41, "Input",ExpressionUUID->"5e5f5105-f279-4dff-a4dc-7bd070319034"],
Cell[457411, 8563, 2930, 65, 345, "Output",ExpressionUUID->"989bc4c8-d755-46a5-b6fb-01dc40a37b5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460378, 8633, 1061, 28, 63, "Input",ExpressionUUID->"45a602aa-c66a-44fb-8136-b09bcf532f85"],
Cell[461442, 8663, 594, 14, 28, "Message",ExpressionUUID->"7db99510-0b62-46ab-b80f-529eaa0960c2"],
Cell[462039, 8679, 992, 19, 28, "Message",ExpressionUUID->"0bcc03db-a49f-4d46-b3a0-766558de043f"],
Cell[463034, 8700, 594, 14, 28, "Message",ExpressionUUID->"9f298969-6c7b-43fa-ad22-f8012698fdf6"],
Cell[463631, 8716, 1016, 20, 28, "Message",ExpressionUUID->"31f96d16-006a-4836-ba71-ec6b20e23795"],
Cell[464650, 8738, 1081, 21, 49, "Message",ExpressionUUID->"94f0e727-f1cb-4913-9890-abf70e07a805"],
Cell[465734, 8761, 592, 14, 28, "Message",ExpressionUUID->"b27644ad-feac-4b7f-b57b-5dc21449e62d"],
Cell[466329, 8777, 594, 14, 28, "Message",ExpressionUUID->"3064b75b-72a9-462f-b0b9-b5814d3c3837"],
Cell[466926, 8793, 599, 15, 28, "Message",ExpressionUUID->"7e6e7b42-5413-4636-81f5-4e24070e43e2"],
Cell[467528, 8810, 361, 7, 37, "Output",ExpressionUUID->"d644fe18-de44-423d-a300-10afa6795ea2"],
Cell[467892, 8819, 594, 14, 28, "Message",ExpressionUUID->"ca96691c-9bf6-4c72-8bb2-9ced06dddb83"],
Cell[468489, 8835, 992, 19, 28, "Message",ExpressionUUID->"5775a440-6c19-4743-8eb8-8392eec22613"],
Cell[469484, 8856, 594, 14, 28, "Message",ExpressionUUID->"918880d0-3e80-44de-a65f-586e0236a773"],
Cell[470081, 8872, 1016, 20, 28, "Message",ExpressionUUID->"01386b7c-014a-47c9-9f6f-fa803ec21afc"],
Cell[471100, 8894, 1080, 21, 49, "Message",ExpressionUUID->"7d8df142-238e-491a-9d06-31ba7fe428a2"],
Cell[472183, 8917, 592, 14, 28, "Message",ExpressionUUID->"cc1f7051-ac0f-4d88-a533-84c106cda5b8"],
Cell[472778, 8933, 596, 14, 28, "Message",ExpressionUUID->"0b820f72-511b-4a40-982e-43748ef9a712"],
Cell[473377, 8949, 599, 15, 28, "Message",ExpressionUUID->"9d41713a-118d-47dd-84ce-d6c248bee510"],
Cell[473979, 8966, 359, 7, 37, "Output",ExpressionUUID->"d433d861-f678-490b-b8bb-e8facf5d3e49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474375, 8978, 10897, 244, 735, "Input",ExpressionUUID->"9d391523-cace-4c84-8827-0ad06d9d9f1f"],
Cell[485275, 9224, 539, 12, 28, "Message",ExpressionUUID->"1025dccc-42be-432f-a905-f0ddb38a98cd"],
Cell[485817, 9238, 935, 17, 28, "Message",ExpressionUUID->"381fe7bd-f5fb-4435-8826-1792c60345e6"],
Cell[486755, 9257, 539, 12, 28, "Message",ExpressionUUID->"1be0feb2-a143-4158-bf78-7b38b6828a27"],
Cell[487297, 9271, 961, 18, 28, "Message",ExpressionUUID->"6d6fa495-8314-48d7-a758-8b120566db9b"],
Cell[488261, 9291, 1026, 19, 49, "Message",ExpressionUUID->"c31c21dc-4bba-4854-a1db-de225de40d99"],
Cell[489290, 9312, 539, 12, 28, "Message",ExpressionUUID->"10da0d86-9a29-4256-a8ed-05f03e77ea79"],
Cell[489832, 9326, 539, 12, 28, "Message",ExpressionUUID->"6dc429b2-798b-45a4-b7a6-2f009dc7cce8"],
Cell[490374, 9340, 544, 13, 28, "Message",ExpressionUUID->"fdd56005-35d3-450d-9052-16022ef47226"],
Cell[490921, 9355, 15182, 264, 554, "Output",ExpressionUUID->"bb66e4bc-fa11-4bf5-8cf0-14f18f05e00a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506164, 9626, 159, 3, 69, "Section",ExpressionUUID->"79d10ec3-a10d-46c6-b3aa-dc106e998409"],
Cell[506326, 9631, 13476, 323, 883, "Input",ExpressionUUID->"30ea76e0-f815-44aa-8486-80129b2e0ce1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519839, 9959, 235, 4, 59, "Section",ExpressionUUID->"c29b3290-a8e3-4ddc-bd00-41043aa54508"],
Cell[520077, 9965, 4406, 104, 336, "Input",ExpressionUUID->"68116133-bcec-428a-b77b-94d6596afa4b"],
Cell[524486, 10071, 2320, 64, 210, "Input",ExpressionUUID->"f7c29984-61e3-4c2d-a79f-05acd1782d04"],
Cell[526809, 10137, 6104, 142, 483, "Input",ExpressionUUID->"303812dc-f7ed-48be-a26f-f0cbca113302"],
Cell[532916, 10281, 2374, 65, 210, "Input",ExpressionUUID->"ff8565c5-2752-4e7d-bd1e-076c29d482ca"],
Cell[535293, 10348, 8651, 202, 630, "Input",ExpressionUUID->"9c73288c-0f24-47aa-b9db-cab29109c637"],
Cell[543947, 10552, 2417, 66, 210, "Input",ExpressionUUID->"98e505cc-918d-4dc4-8af6-e53a6a70d88c"],
Cell[546367, 10620, 8881, 209, 630, "Input",ExpressionUUID->"99ed9c1c-d0c2-4823-9f61-b5d60d44a185"],
Cell[555251, 10831, 2438, 67, 210, "Input",ExpressionUUID->"c5013900-330d-4d12-805e-a165c0e261e7"],
Cell[557692, 10900, 8982, 213, 630, "Input",ExpressionUUID->"c314c71b-b2e0-4147-ab1c-ea2ea394c68f"],
Cell[566677, 11115, 2615, 69, 210, "Input",ExpressionUUID->"9630d594-ac2e-4a85-89dc-053f6c7bf067"],
Cell[569295, 11186, 9973, 233, 672, "Input",ExpressionUUID->"f25889e3-091b-45cc-9b1e-2d360120aa90"],
Cell[579271, 11421, 2577, 71, 189, "Input",ExpressionUUID->"8c9838c5-87b5-4c53-9cca-86e4fe117292"],
Cell[581851, 11494, 10023, 234, 672, "Input",ExpressionUUID->"0b979fb3-1e30-4986-b306-a80986181ff0"],
Cell[591877, 11730, 2709, 74, 189, "Input",ExpressionUUID->"88495d0b-f4d6-4f42-b9a4-30d041fec0da"],
Cell[594589, 11806, 13476, 323, 882, "Input",ExpressionUUID->"88e3058d-2940-4b32-a153-01ef90834cef"],
Cell[608068, 12131, 2762, 75, 189, "Input",ExpressionUUID->"de3707e1-94ff-4207-b23d-bf82188e9e70"],
Cell[610833, 12208, 2312, 64, 252, "Input",ExpressionUUID->"2286c2dd-b7e8-4afb-926a-168aa3162b78"],
Cell[613148, 12274, 714, 19, 105, "Input",ExpressionUUID->"fa4807c9-b79c-4614-872c-ac5282e5b9c8"]
}, Closed]]
}
]
*)

