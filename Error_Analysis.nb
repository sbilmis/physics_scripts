(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    287986,       5915]
NotebookOptionsPosition[    283262,       5831]
NotebookOutlinePosition[    283730,       5848]
CellTagsIndexPosition[    283687,       5845]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Error Analysis", "Section",
 CellChangeTimes->{{3.936928495241518*^9, 
  3.936928502391624*^9}},ExpressionUUID->"e985ddc7-e7c0-45bf-9570-\
d8cc36e5b961"],

Cell["\<\
Prepared with the help of chatgpt: \[LineSeparator]See \
https://chatgpt.com/share/66fe55e3-ecd0-8007-9d39-ae15c09faa08 \
\[LineSeparator]for the chat\
\>", "Text",
 CellChangeTimes->{{3.9369329947129917`*^9, 
  3.9369330090454483`*^9}},ExpressionUUID->"c5877190-8c5e-480b-922e-\
d4b465413252"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Set", " ", "Directoy", " ", "to", " ", "the", " ", "one", " ", "notebook",
     " ", "is", " ", "running"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]], "Input",
 CellLabel->
  "In[104]:=",ExpressionUUID->"9d8c304b-aabb-4532-b64b-12efa57d2381"],

Cell[BoxData[
 FormBox["\<\"/Users/sbilmis/Desktop\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.936931576986638*^9, 3.936931609979105*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"b41584e4-fc4f-4ad4-94b6-a2ad2191c4e9"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3QewNEXV/3EFVELJ+0JBGUotEUssUQqQUtAyoJQKakkQEUMpSFQBJQiI
EcREUhEDBowoillQDIiYESOKOaGYIygqoPP3M77n/vv2nd2d3b1hL8/5Vg08
d3d2pqenw69Pnz692b6H7X7AWje60Y2OWPc//9l9n6N3PPzwfY7d43//88ee
hx5x8IGH7r/fzoceuf+B+x++/b5r/+fDQ/5z7Pqf89f5z/+bJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSZI3n2muvbS6//PLmRS96UXPggQe2/77mmmtWOllJkiRJkiQz
y+mnn97c7373a4/b3/72zSabbNKcdtppzd///veVTlqSJEmSJMnM8a53vat5
3vOe1/zkJz9pfvWrXzU/+MEPmgc96EHNhhtu2FxxxRUrnbwkSZIkSZKZ4z73
uc+Cz973vvc1tqCkqUr+/e9/N//85z/bI0mSJEmSJPn/0E+3ve1tmyuvvHLu
s9/97nfNBz/4webFL35x89KXvrQ566yzmq997WvNH/7whxVMaZIkSZIkyWxw
+OGHNy984Qtbv3L85je/aR796Ec3u+66a/PlL3+5efe7393apx7wgAe0GipJ
kiRJkmRN5973vnfrCxWwNW2wwQbNF77whfbvyy67rNVPxx133EolcWz22muv
Ns2zctzsZjdrNt9887m/b3nLW7b++/L0uc997txhPeQk1996q63nXafP8ZSn
PKVNx7DrlucpJ+PeI44nPelJzf/8z/+M/Vxbbrnl3L/lnzxTNmP9w6D7jXsv
1yrrQJIkSZIM4tvf/nazxx57ND/96U/nff6Sl7ykWXvttdt/i2tw4okntn3M
xRdfvBLJHBv95+Mf//jO7/hy0YMf/vCHm3e84x29Dud3wff+r3/9a+/r5DG7
xyc/+cmM4ZEkSZKM5Jvf/GZz8sknd87HsTvd+ta3br8X64DP+dFHH70CqZwM
tqdXvepVK52MJEmSJEluQPz2t79tjjnmmAV2pze84Q3t/63DM1fykY98pPUj
N6+xmmJDmStjU5gE2lEsLMdFF120yCmbjp///OdzaXvb29620slZ1Zx33nlz
eckOmyRLxT/+8Y+5suZIkllltfX1yw09dNe73rV5+MMf3tqeHBdeeGHzzGc+
s3n5y1/enmP+y3zdkUce2Xzve99r/vSnP61wqvtjDkbaJ0E/ys726le/uvWf
tybx0ksvXXDe9ddfv+wxHa6++urWN0raDj744Dbm6Wtf+9plTcO4/OUvf2nT
yjdLnNa73OUuza9//euVTlbzoQ99qDniiCPavORfpT4o50my2GiPHvvYx7Zl
TZnju3fAAQesdLI6US/Cf/Azn/nMWL81XvW7wFjvU5/6VOdRx8kZxrDf1vdY
Lf6Lf/vb35q3vvWtc/aKWUAfr4zuuOOOrb/rpz/96ZVO0kwij8L3tj6UP7pA
Pdhhhx2ae97zns1tbnObZs899xyrzK8k/Fj01ZPgGUMr0pn3uMc92npZ8rOf
/axtK8r8oBPEgJBvfMfYsP71r39NlAY66Stf+cqCMUDEOw3o37K9mkW+9KUv
Nd/5znfaf9OmW2yxRbtnUNd5nrvkuuuua/P5jDPOWPAO+sJvrWt+urye96m8
THqPWUU99uyeSz/TB2Uu+qJZQbmZtTSVKLfq5qD6rs4qY8ETnvCEtq2dJaTv
gQ98YDsmi/UU6oRxdR8++9nPNre73e3mjVuN7aw56TrGeZfnn39+O8bxO2Pa
8rc/+tGPmv3337/to2jU1bI2/Pvf/36z3XbbtVp6FqDn2E4+8IEPtOvt2U3u
fOc7r3SyZpKYj+s62FXMayj7v/jFL9rjzW9+c1uXzOetBvS5xnnTwk7Cj6q0
S/z4xz9uttpqq+ZjH/vYPPuTPHvqU5/a2od22WWX1ncs5v60TU972tNaG8zj
Hve4eTG2Ap/5zjkHHXRQc8ghhzRPfOITh6ZPbAnjxeXEeEkaHd/97ncHnnP3
u9+92XnnnZv3vOc983SgfsOccIl5SPEz+OGX7Lfffs0znvGM5qEPfWjbdopB
Ni7Kr7UPZf9V89WvfrUdK9T6bbWj7LKfyrvtt99+aB7gW9/6VmuHiz5OeV5p
rNlUl7/+9a+360Hsm9AH5c5vtXVLjXr+xje+sdX7fVCeTznllCVOVX/ovte8
5jXNRz/60bYOqnPWDtFCtN4oxLzRXoXuCp7//Oc36623XrsO1mF/i3XWWadZ
f/31x06jdLi2deFd3PzmNx/YHi0X4/qLXHDBBWPZ+Lynk046aUns5Po668CN
YwP3mvXx+SzSNT54/etf39aB1QBd0WXjGAf+Cvr1N73pTXOf0QHGOB//+McX
nM+nodQyfNfvf//7z/3NPqX+G3MYM9Vo732vHQiU53PPPXcuJlfgb22ddm4S
1BFrByYl2rJXvvKV8z4Xq56+vO9977sg1oXvlKm6PbYG0tqEX/7yl/M+106q
u/Hs7HnO++EPfzh2esUu81vvoObPf/5zO6a9Ifk/GUtuu+22c/5xyon3cdhh
hw38jTJNn9CS3oX8msaHMKCzJ+Woo45q01CibWI/H2TrUa49h3q0HPEolOvX
ve51bTkehbHp5z73uVbXzhLKCxtxWdeMl9daa63m2c9+9sjfi7G80047LdBP
2rpTTz21tcs7lEf2fGPMcYk2h32ki5Xum7R7k/qM9IUNWdu6FDY2fZs+TH01
r6hdhPeWjAe7gbwM3yi22b333ntm8pLdhwbv8j/ia/CQhzxkbs5oEtgh9N/1
+j39sHaitpPgve99bzufxi71xz/+sf1M2xHIT/Vro402mqfxQfsrt3Ufx17A
fmC/wsAzs3WJCT8pnm2adykGlLTW7SDNue+++861o6W9g+4xnik/0+Zss802
nWMwn4nValwcddlnl1xyyURpftSjHtWmrdRQ8p1Ni23jhoS531of8zsbpp/k
bemX5u+V1E/2ODD+qLWGMifeStSxGs9OBzhvOfQT7XHssce2ZXkY9N7nP//5
dm5/1jEONI9Hg9bjmhrPrb94xStesUA/1etb2ILpX/MZ4xL6KdqCmlo/ffGL
X2ztUbSd8TQtLiZ0ibGp7+IQiybQJogn7fOyDrimfsGcofEhvxb2dJpd+pwb
ZUEZNSemDLtXOYdOR2sPyzxyHdfTb7i+e7tXlPV99tmnWXfdddt64XvXeMxj
HtPsvvvuc+cZB5rrMH80rn+usvysZz2rtT2y3dZz/uWzs7eecMIJY11/TcFc
vjFe+BGyPc1KH6N8mh/beuut2zTWXH755c3d7na3BZ/zg4n64991WY4yT3+x
XZ1zzjnt37GHDeyxrE4ZR9b4nXmrW9ziFm1dqttTWkCZVsdq296DH/zgOf30
iU98Yt535rCMOSK97FTSZ7zgnny9BvUlg5hGP6mfm266aXOnO91pgX6iC80T
acvKuXP1zvxc2N3C1vPkJz+59WsYBPu2fr9rHtMzR0wu7YT2MpBX4pSV7Qdd
qz+I9wp2GXYXfZv3JS+hjOmHJ0Vb6Xr6nlnZN1KdKG2po5AX8quv39QgJtVP
/G5udatbLZg/UOaUiVF6ZVz9pO/Un6nv+jz9WMS6i37W3GE9dmKrUUeNHSDf
6HRtpjoW+kPdOPTQQ5vf//737d/Rv88a5kojxi/fnFHj0PDj0qbU+qmGflce
Jhnbhn4aRKmfzI9GWtzT4d/lukfaJ9Lu3dN1UVbZDOLZI250jD1iHBzjR2MM
ZZRfZ8QaDvuQ68d8o99r52M+OeIRR0wgfULEMeZz7Dp+77pxPef4vrQ/Oace
57iXsf64uL5yHs9Xjl0ij/hGxdr8SW1+feMZJ4uLd6u8KD9RJ2p8V7a5YldF
3G/lI9qGmEdyPX8rx/wX2OLr9xh6Z9j8O8o2RLkPfxplT9qVu1o/qccO6ZG2
ur03FlRu2QOi/tSxwcdlGv1Eu7mnOl7mf7Q5xiSRn/Hs0q/tCD2ufXO+PBoW
U4xGLOuz38T13MtzGCdF7HXtXeSRa9d5WbaD8d5LX9nyPXu+cddLGD9GPPnQ
w32v4f592pRJ1nDIo3HWU9BM0j/uHHisnygP78mcd/lZn/4z6lKXfqr7kC7G
0U+x14Lr8kOOtoUNJt5n9N+1PU76oi7Jr+iT6SrlVJmQ1q5Y97MI+4I5Nn5K
0qn+XXXVVQvO07bxb2J3Rx/9dMc73rG9Xtc8+ijG0U9wrvGR8Yv1QNqfaPO9
L++5tGXRzuw2MF57+tOf3pZTBx1Bs/P5RlfZinaqhJ0+5hpq7ej//i7bP/YA
zxH+oaHdos/p0k/0unlW/mcBbTauNj/77LNbn1Xjc8T4RTrFOOIfysYI41/t
ybQ+MouJcYq53ZgrXtMPay6GrXPnb6CsKbfsjoHfsnUE6rk5MPYqWordURk0
b6RMaw/9rd9nVyptuCUxxuhqt42F2VDZV+Ec9pkY7xsLsMmGfmK/ZvMwLyoN
0q88ukbdtqj7fuO5BsVAH0W0A3GwocmL+vM+sC8ZO7PZR3vBDsaWZJ7RdX3O
pgfvyfOWcb7VP8/DvhHnlcgPtjw++No1v5H3+mH34pOhbzJWpnfNm8o/9kHn
quvagtpeb16XLopx5SDY+s2zdM3TDoKtzLpfczTwzNYZ1GkYBBtnnxjp46TJ
XKd+QF9xk5vcpG1jw/4xCOk218nv11wBX4i+sWCUizq93kv9WR+b1nLqJ+jL
lLewFymXZd+l7io79RworRHPoz3SzpingvxnxxxlK5s1PKuYI+W4pMa4Th6b
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
tUWgdeRNrJuBNHjH/Lxq3yPvmt/GMJ2sz/A+tNFXXHFFr7yRPu2edPBh80zK
XZcP1nJgnXzEDw+7Ff+Tcn5G3dC+azc9J5+QzTbbbO58z0KD9o2N4T2xNUVs
+kGHc/r6U/Pl1k5bkxAx/PWJUQbVI++07Meg3CgntFafNl5fpS+jHbQl/lYG
y77rBS94QauvlHltmNixNFSJ/pZm0l87R93umpMv0Q+W8zwrBR+52NvYmK9r
jZzn5evYNR+k/e7aG1n5V47quCzgq+38cWJwl/unD9rfnS06vvcc5fm19vOZ
8lJT7vfcB+XfuF+7E22iZ/Z7/3c9fq6TxP8tobNrOx70N3RX/W70QWz20yAP
3XPUPOCsIL18Y0rdyFamjVanu8ZU+oSYI6al2fjGgb7vimu02GgvlOFBWsXY
QLs3LhHzI/pWKKtlfVcGyvqgzPs74juNwrW1j+EjHLi++7hWzCO5t/WedT3X
J3i/3pf7lnW7qx4bC1gLs5ho68apx5FvZXtS1mPpLr/3XH187/iie74utLlx
vUirfCvbdm0pu3XZJjqfBoo2LLBugKboam9r+LCwY/W1CchPbSft5L7SYww8
KvbgUiG/yj6kq+9iMzSWrutGHOPGffLcrldeo+twTtgr+zKor4y+sSzLYRcq
j1F7tJbPrnzVeVH2pY6TTz659aGp7Zhlnju6xoo16o4yPG2crWTNRL3T1lq/
VcfApwHEMqjbwhsy2gQato4vXcbCYcMoMQ+r3rOxmbct41X3xZzTtNq4D+bM
jOm61q1rp6xHn2RvKHPuxvx13iwmxrLSvlxx7/QXtOQsrRNdTNR3Nqil3jtF
nWJ77huznY3aeGXcfj5ZM1CejBHqcVSSLCfaTXYDtlbzLuUcJluz+dE1TZfT
MV2+7eps7I1dz3mEz4jv2IK74lqMooybupSwO9FI5olrzCmIPTBpzGa2raXe
Y4at2frcQXGiFgtjBvPfN1TtFHg+bcBSjpHMR1lv3Cdunzkh54+KnZEkSbKS
RJzb8EtK/uvH2DXnSlv4ritmM9tT+LDWa0L6slz6CV0xNuiS1bBWJVjKtNLO
8ma53sdKwx8r9qRZbOhcZTvX2iZJktxwsd6ZrujyDxNfiJ9k7LMT8CegPyNe
bLmOfhwm0U98A/V9bIdixsXeT9ZJW/8Te6HbL632x6L32MqsjzDmtzbBM/Ih
4Ac+7b6lqxk+u9Psv7YaWaq94sp9D5MkSZIbJuYxrTfpmsvgB2PdCp0S+sk6
j4g3yn/V58P2PAlcp94vxe/FRys/66OnYq9uPrvWqJhz4ockXfyY+Aj7vvbR
NjfLH55fL9tTHX98VHyXJEmSJEkSmH/rWsdubWvEkSvjdFmfJx6sOQprj8Xf
6YP1ufXeHeJQRFzVOOrYPF1YM2m9N5sR/++Ig2ENoHXR5mW6bGo0UhmfLUmS
JEmSZBIG6ScaJOKDhH5ivxFDn1/HxRdf3OlXPg6TzN+xEbFbiV9oLQD9JHYh
u5K5vGHPlPopSZIkSZLFoEtrREztgG5ae+2159l0xJ2hn+qYw+MwiX6KGPTs
VqCh+GeFD7vvxTPs8rVO/ZQkSZIkyWJAP9nruPRhElv/2GOPnfubXzXdIc56
+NuG31S9/8I4TKKf2L34OkUsJ/7vYvhG+mPPIjHtar+sY445JvVTkiRJkiRT
w3+7tCuJ48QHe4cddpjbU/fcc89tfbMhfhv/a7rLGrxp9JM5wnFjDYnRbJ8L
2khcJ3GbxUYqv2cXY3/qWn8nHnSSJEmSJMk0iG+90UYbtXuBwL5t9hlzxH7y
1nlH7MbLL7987nvHNLEWXbNPfMESPlkOfk+0nLiD5T5O/k07xfMEnmGbbbZZ
sLd6kiRJkiTJJNiv5sgjj1ySWDizgv2o+HSFTS1JkiRJkmQaaAq+QcuxF91K
IOb8TjvtdIPflyRJkiRJkuXFvqriiYtzeUNCXO3TTz99wT7RSZIkSZIki4EY
5N/97ndXOhmLinhRF1100UonI0mSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEnWWOyBuN122zU3u9nNpj72
3nvv9v/2tD7ooIOaW9/61s26667brLfeeu3nG2ywwaLcp+u4+c1v3u7jPe3h
OuVR3yOeZ9r7bLjhhm1+uN6w51p//fUnvodru09cK0mSJEmS6RFfnyZ43/ve
tySHPYLOP//85jOf+czc30t1r+9973tT58ff//73Nsbsz372s/Z6/l/ew55O
F1xwQXPhhRdOfa+rrrqq+c53vtN84AMfGPpcX/ziFye+h7TajyqulSRJkiTJ
9LzjHe9o7nrXu650MpIkSZIkSVYN9NNxxx031m9+9KMfNaeeeuoSpWg07Clv
fvObmxe96EXNq171qhVLxyj22Wef5qtf/eqK3f/jH/94m0eveMUr2neWJEmS
JMnisOuuuzZnnHFG7/PNb5144okr5ktDO+21117NS1/60uaYY45pNtlkk/bf
s4b5Sml79atf3fn9n/70p0W5zz/+8Y/muuuuW/D5pz71qeaEE05ozjrrrObu
d797s/XWWzc/+MEPFuWeSZIkSbIm84tf/KLZYYcdxurLP/vZzzaHHXZY6zPV
xS9/+cvmIx/5yLzP/vKXvzSnn356+7tnPetZ7b7co/CbD37wg80111yzIM3f
/va35/5+1KMe1V53lmDrectb3tJsuummnfpJHh199NHzPvOc8u0Zz3hGc8QR
RzQXX3xxr3vRaV3nsnvxrwKfrT322OMGtxd6kiRJkqwEX/va15qHP/zhc/3s
KL7whS+0/f773//+dm1XzUUXXdTstttuC/TY85///Oaxj31sq3PYQvbbb7/m
D3/4w9B7XX/99c3b3va25pxzzhl63rOf/ezmve99b6/0LxeHH35463d++9vf
foF+op2OPPLI5le/+tW8zz/3uc81D37wg5unPe1pzb777tvc5S53macTB/HX
v/61Oeqoo5pLLrlk4Dn0E1vdqDxPkiRJkmQ07DsHHnhgOyc3ij/+8Y+tXUS/
//a3v71dE/+b3/ym+ec//9l+7/P73//+nf34tttuO9d3W9t2n/vcp7XP9IEe
e93rXrfADmXe6rzzzmvtNZNgXmsp1qNJK5uQ/LjNbW7TvPjFL26uvvrq9js6
lU8UW1zN8ccf37znPe9pdaNnoznZ1vpCq9GvNfTVmWee2fq5JUmSJEnSD/Ng
bB5d0BDsN9dee+3I63zsYx9rbUhiRfk//6eTTjqp+clPftJ+f8ABBzRPetKT
5rRCCY0mLtRll13W/s3u9e53v7tX+r/0pS81N7rRjZpzzz137jP6gvZ52cte
1usaXSyVfrrnPe/Z5pGDje6hD31o64sEfmb8zX79618v+J38EDNLusCGN45f
l9/Tr/E+4hp8x1M7JUmSJEk/zB+x8ejP2TbCThT4m97p0hDhi6Mvp3U++clP
NpdffnnbNzve9KY3tf5PV1xxRWu7Er/opje9aWuX6oI/0BOe8IRm6622bu0q
JWwmru8+1orxDfd3id/SIWHD+tCHPtS88Y1vnLNJmeeq58NGMY1+olU8szSb
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
kiRJkiRJkiRJkqwZ/D/6UbYQ
     "], {{0, 109.}, {592., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{72., 72.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{592., 109.},
   PlotRange->{{0, 592.}, {0, 109.}}], "Text"]], "Text",
 CellChangeTimes->{
  3.93693156847891*^9},ExpressionUUID->"a3074c38-24bd-4e44-8dfe-301ae7fd6cee"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQewnUUZ9+nNAT4YGcoAA5IBh5IJgaHI0BmkZegllEEQUUqo0hFpIiWg
lABKC9JBmqBIFSQ0UTR0EOkIAlKlC/vx22+e8+19OeU9J/fe3MTfb+ZN7jnn
LVuf/e+zu+8uuvPem+063TTTTLP/LF/+s9lOB6253347HbL5//nyw5Z77b/b
9/f63i7r7/XD733/e/uttPP0X375h2mnmea+L8+f4cu/k4iIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiISMF///vf9NFHH6WP
P/44ff75511dy/mffPJJ+uKLLwYodFMPn3322eQOwpCFMjiUyxHlvFXd4Hvq
jvkrIt2Aveu2zRWRgQU98vDDD6ef/vSnaZNNNknbbbdduuCCC9Knn35a+x7n
nXdeOvLII9N//vOf/Pmxxx7L92h28NukhPWdd97p+rq33nqr52d2olU8q8ff
//73dMUVV6RLL710wMISPPfcc+mBBx4Y8Of0J3/961/Tcccdl48oR0OFf//7
3+m3v/1t+tWvfpVeeumlpuc88sgj6Xvf+1768Y9/PLiBmwxcf/316b777sv1
cajx5z//Ode3a665pisbJv0Ldpp2hXqN7WuVFy+88EI+h+PVV18d1DC+9tpr
+bmvv/76oD63ys0335xtdrcQ7quuuirdeuutHc8jnv9rUOYog9hvkW755z//
mTXx9ttvn775zW8mtkCcffbZc9tXh1//+tdpjjnmSN/+9rfT22+/nb/72c9+
lu9TPeaZZ56sMXrl3XffTb/85S9b6pNWHHzwwT0/sxOzzTZbTjt07ymnnJLj
ucgii6Rrr702nX/++WndddfN3z344INp+PDhae+99x6wsAB+V/TZN77xjbbn
PfnkkwMajm554okn0qqrrprLYpSjoQLt/C677JJGDB+Rw9kM+nxLLrlkWmml
lQY5dIMP9X2zzTbL9XEoce6556ZtttkmXXjhhbks0WeXycN7772XbrjhhrTE
EkvktuHFF1/8yjnY8a233jqf88Mf/jC98cYbgxa+559/Po0ZMyaXk7pt3UBw
zDHH5Db0gw8+6Ppawk1b087W//GPf0xbbbVV2m233XoO40033ZR23nnnbJv5
uxn4Bvidg/o3FGAM7957701HH3305A6KTIHsuOOO2Y4xnwJbFTr20EMP7Xjt
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
3Xrrremdd96p/cxOsH889yPtuP8zzzzzlXPoI9AukLf9qY0jTq2eO5h+xlba
uFtKbcy8Y9K15MMPP8x6tj/qx4knnjhkxkCqUC/mmWeePt9NijamXi+22GJq
46mAqjbuhTramD0dJsWPC3PNNVdDG/c3rdqW/mZqGK+h3qMDynkt4atXG8vk
gHlUzPfcf//9s0079NBD0+uvv55/O+ecc9Jss82WZp999rTMMstkXbD22mvn
8kq7iAb8+OOP01VXXZWvZS7m8ssvn+68884+z8BfwO8c6JOjjjqq8RvaeJZZ
Zsn3+vrXv57rRzlfGE2z+eabZ8275pprptGjR/fZ+xHNRfi59yqrrJLDWldP
jBo1KvdVGbchfnG/JZdcMsf9uuuuS8OGDUt77rlnrftdeuml+fmMzS2++OIN
n0ZoY9KF53C/0lfJ9/hQGWtbaaWVct+ZdK0LeUacOfBVAP4KPhM35hKQrhzV
cXfOI6zsNb/rrrvmPCi1MfOBw7dCPlBO6hBxwtaRliNGjMj3Au5NOSFdSCue
V6d9inLE3MX1118/l7e6VLUx6cQzy3wC6gP35XvCSJnnuyC0MWV4ueWWy2lK
GY78ZP4yZYr6UaccEqeIP+WC5wJ1at55583zN/idMJJunLPWWmvldCAN+A6N
QB5FvaLs/OhHP8rnUJeibBD2Es6j3vEbcS59XO0grox5TzvttDncUVZCG0c+
Ec4oj8HFF1+cr+H/qMf8T73mfnPPPXe+NmxQuzBQFslX4k0cmpVNfiPfSZ8y
LMSdcMRBegf4/ON7fONlv47nxthUme+fffZZLt9x3fjx4zvGoYS+aVxbXke4
qvfjmXFuyd13352/IxyEJ8AfzxFlvg6UhXhGs35tO6ramPBSRglDCWWAOkZa
8ltpE0ttTJnnnHIshmuxtejPXrQtZZS8DZ8r92DMjzAQFso06ci+agE2rdq2
US+jbSOMXEN6Ua8IH36lCDf9P/KxGt5oe0kLrgv7TB7y/LB1/M8zNtpooz7X
N9PG0dZwPvaytGFlOeWI3yLu8X0Z906EDSA9qvGjrrFvc2lnq+d1o42JG9dO
6piBSDvod4deev/993N7Hz7OZr42fkMblH4xym+Uc2xW3O+LL77I/qU11lgj
708D2MhZZ5214R+ifZlpppkadhMtt8QSSzTqGnX+9NNPz3N3uRe/nX/++Y3w
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
OV3wwwd8psyTbmGXqe8xr6ha76pzZBjj4FzaUK7D14wtwCa0g/Jd5jv2h7TH
zse7Xqpzm/A/0O/B/lGe11hjjcY5pBeavnwudYW0DbB12PWwm3XnOKLhKd+E
i/ASbmxzQBoxXyKgDJfamLDRdlKeIl9p07kH9yINKWOUv7J+itSF8omWYJyd
vh8al77bTDPNlMsiOoqx2mr7VdVSjM2ENqZN5dp2mqKqjat6ohnttHHURa4P
bVZtU+sSWrYc8+Ye7bQxPhD8fdhE/BVLL710H33IOD/2kGuwVaGNaddo5/Et
8Z4GbAz1mmtLTVOF87BZ5B3PwrbFmoRm8Bt5SDuETcGetdPGxIvnR/tTl2ba
mHQM31Ezqto4tE+Z/lXwN9BO0TaRrqU2/vnPf95I65122imPp+In5pwoo1Wq
+Qn9rY3LdgkfUOQv9yf9u50nV21TaSNoK8jfaC+q2hh4/wz1nPFjyl200Yyp
UqY4nzaTMkq5iTIac634TBltx+OPP577X5EeXItdYBzm3HPPzd9vtNFGuex2
Wp9frceU45VWWun/+edGjMh+wlL3VGHMHI1A/5YyVR4B8XnmmWeyLxGdFbap
U9w7aWPA38D6ZnyBaME67ypkLhH3QddRpyi/QTXfw95GPvJ3te5g58uyjOZC
4zFGTXzQ7tgSxjTQFPjiSI+gWo4IQ526UdXG3IPyWYId4l0l7eo78afc4kel
74J+pc5SPpkjUZb5EvKB/Gzll+Y6tHG1XETcq9qYMQd8PNXzy/mA4V+vQj7R
r6rWu2p+0pej7jBnoFV5bUY130tt3MpnwbyZsPO0YfzOnEHSkrRFb/M7NpXf
safYiSBsXbS/dbUxcQ5/O3nLHJ1IN7Qyfqlqv6uTNo52u7Sj2Ay1sfQC8/Qo
c/gD8TnRP2NsIsZB6VOiP6pUtRRluZM2po0KJqc2po7H2GEzetHG1GN+R3MA
6Ve1Q8wdQXNgWxkTDBhz41zaedon8qSVNo6xPqCtRevi/0TTtHuvY4yXx3wt
0r8XbdxuDix0o43Lccs62pg2m/JJGNCZ5AlpwHWlNkZr4fPCbpIu9Pko0620
MfcbbG0cbQ600sa0ke3m7fWijcl/+m74QYk310cbDcztjXkXxOFXv/pV/p4y
SrtIvkR72w7qKP48wFeNFthggw3yfN143xnhQte069NBs3rM2DppSFjQNrTx
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
Tz/9dMOHzfuOzzvvvBx33uPG2kTmmwD6n/Cj5QkT/QPuyXet5lqLiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIj0F3/961/TEksskaaZZpq0ySabND3n1Vdf
TYsttlg+Z/XVV0+PPPLIIIdSRERERGRwuOyyy7LuRSOjlavst99++fdRo0ZN
htCJiIiIiAweJ510UkttfN555+XfOK6++urJFEIRERERkcFhyy23THvvvXea
d9550y233NL4/qWXXkrbbLNNGjFiRNbGf/jDHyZfIEVEREREBhj8xD/+8Y8b
vuMLLrggf//xxx+nQw45JF1xxRX5+1VXXTW9+OKLgxau2267Le2www5p9OjR
6amnnkpnnHFGWm655bI+f//999NRRx2VP1900UWDFiYRERERmbq56aab0lln
nZWee+65Ptr4rrvuypoZXcr3O+20U/roo4/a3ovf0a6djvvuu69juDiH566z
zjrppz/9aTrooIPy52OOOSaHCz/3ggsumDW9iIiIiMikgm/4iCOOSNdee23+
XGrjXXfdNb+PYvz48WmmmWZKY8eO7Xi/t99+O+vWTsfPfvazjveaOHFiDs8i
iyyS9Tv35jO+4r///e/pnnvuSbPNNlt69NFHJykNRERERETgrbfeSkceeWR6
5pln8ucZZ5wx+2kPPPDAfMCI4SPSXHPNle68885BDRtzJmaYYYZ0+OGH589X
XXVVDt/JJ5+cP59wwgl57eBrr702qOESERERkakT1todcMABjc+rrbZa9s0y
XyF+HzZsWPbdDjY8c8kll0yvv/56/rzWWmtl3R5aeIUVVkhbb711eu+99wY9
bCIiIiIy9cE840MPPbTxGa2J5nzhhRfyZ9bhzTnnnGnPPfcc1HD95S9/SV//
+tcbvutnn302TTfddH3CioY/9thj0+OPPz6oYRMRERGRqRP2uGOdW7DHHnvk
ub3AuyB23HHHrEHrzA/uT04//fQ088wzpwcffDB/Zg40n2NeNOv5CBd79cV3
IiIiIiK98K9//StrSvbD42DuBLD2jjnIEL/FgS93sDj33HP77F992GGHpW23
3bbxmfAsu+yy6Re/+EX65JNPBi1cIiIiIiJDEd5VISIiIiIiIiIiIjI5+fzz
z/M7EvBXcrCfHGvE+H6o8corr+TwcRDWV199Nf3nP/+Z3MESERERkakEdOaY
MWPSuHHj8tow1oKxV9tnn33W1X1Y61Znf4w6e8dVYX8M3j3BHnbcY/PNN8/v
QmPNHe8HFhERERGZVNh7beTIkXkf5dDC5R5y3fDyyy83fLrtjnivbzegf+eZ
Z57061//On9mXR3hXGONNXq6n4iIiIhIyUcffZSWXnrptMwyyzS+4x0P7Evx
8MMPd32/Dz/8MPt32x3vvvtu1/5owFeMFg4uvPDC/Dm0csnFF1+cfcrlsdBC
C6UFF1zwK98PlYOwEcb4e7755st/77PPPl2nlYiIiIh0z/XXX5/mnnvuPnsm
815d9mhDw3YLcx6+/e1vtz14f9kdd9zR9b3POeecNPvss+d3sj300ENp1KhR
eV7FP//5z1rX807jXuI0WBA2wgj//ve/03PPPZf/jr1KRERERGRgYW8M9mQL
ePcuvthTTz21p/uxNo69Kzod8c7hbsDnvOKKK+a9Oo455ph06aWX5u9ERERE
RPqDcp4C6+OWWGKJ/Jm929Cwvcx9GCiY/8wezyIiIiIiA8EJJ5yQpp9++jR6
9Oh05pln5r3Y0MZrrrnmoO4V1wk0+gEHHJDn47Ieb5VVVsn6/Y033pjcQRtU
eHcI85DvvvvuyR0UERERkakO5kBcdNFF6fLLL8/zXXmnMf5Z/h9K3HbbbWnH
HXdMN998c7rhhhuylmfu8d57793ymk8//TTdf//9eW0hR6t5HB988EHjHI6h
DL79Aw88ML+LWkRERET+N+F9DejiL774Ih8ff/xx2nDDDbPPuxWchx7m/ccz
zzxzOvLII5uehy+W35dffvn83o6hDHFC84uIiIjI/y4LL7xwuuyyy/LcitC8
aOM672DmvRjME+H/Kryng9/wQfeyHwm+bNcDioiIiMhgcvbZZ6d99903HXro
oXmeMUcdXcxeJJtuumlTbcx8kpVWWin/xvsv4p1p3aA2FhEREZHBhnkEr776
anrssceypmUNXp13aNx6663pxBNPzPp3xPAR6cknn8zfM8cYrX300Ufn3zbe
eOP05ptvdh2uXrXxxIkT08knn5wOOeSQ9Morr6QJEyak7373u/m9zYA/m8+9
vAdaRERERKQKcy/OO++8rDN59xvvp2O/akCD8o7ksWPHpmmnnTYdfPDBPT2j
V21MuMKXTfh4/waf2c+P9YDsizfTTDPldXciIiIiIpMKe8wdf/zx6cEHH8zv
cS618ZZbbpkeeOCBtNtuu2XdfNNNN3W8H+/xYN+R8lhhhRXScccd1+c7dG8n
2MsPLbzUUkvl/VfQ13xmP0Lmi+BXZv0h75gWEREREZlUWK+HBkaHoo15L/Dt
t9+efcQ/+tGP8hyNxRdfPPto2aO5E7zDIvb1K7Ux75Qr9/yrs6Yv/Mbbbrtt
1vB//OMf8+cxY8bk39kfe4EFFsjzLUREREREJpXnn38+720C+GbRnhtssEEa
NWpU/g6djF5Gn/ZKr3Mq8AkPGzYs/eMf/8ifeU/zyJEj01NPPZU/8/7m9ddf
33V+IiIiItIv4IMt9/JAG6NH33vvvfx53LhxaZZZZknjx4/v+Rm9aGP27cAn
HO/NeOedd/Kc5z322KNPWN3jQ0RERET6i+HDh6cXXnih8Zl3GPPet88//zzr
0a233jpr0Ndff73nZ/SijdHis802W2OOM2vxWHcXGv2JJ57I4eL9zb///e97
DpuIiIiIyN1335222mqrNOuss+a5xfFuNrQm74K799578xwG9tRDg55yyimN
uQ3d0os25t1xPDfeQcf6O9YDxn53vD+D33fdddeGj1tERERE5H+VOu/NEBER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
EREREREREZmamDBhgoeHh4eHh4eHh4fHl8djjz3m4eHh4eHh4eHh4fHl8cor
r3h4eHh4eHh4eHh4fHm89dZbHh4eHh4eHh4eHh5fHu+++66Hh4eHh4eHh4eH
x5fHe++95+Hh4eHh4eHh4eHh4eHh4eHh4eHh4dE4Jrff2sPDw8PDw8PDw2Oo
HJN7vrOHh4eHh4eHh4fHUDleeuklDw8PDw8PDw8PD48vDxERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERkaHM
tddem6aZZprG8a1vfSudeuqp6bnnnuv5nmeeeWb6/ve/3/S3e++9N+2xxx7p
r3/9a8/3nxTefvvtdOyxx+a4brLJJv16708//TQ9/fTTacyYMY30XHrppdM+
++yT7rrrrvTJJ5+kgw46KO244479+tyBgjyM46yzzkoffvjh5A7SkOWf//xn
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
bamPiDtqI7lxIpFIJBILLqbCjfl1xcmKW8UB/CtGV2wxBDf2m489ddbzoebG
4lnFwvKvxbMbbrhh89BDD03EjS+77LIS++B5aduv1z5TFvjvDj/88AE3DR+r
fW7elYb9hThnlLUvN3Zehjjh8847r1lqqaUG9fHhT8eJxXCP4sby5rNeY401
St3EOovJlsaSSy45SM8z4q6dIYGr2jfpe3HB+++/f/F5qxffcrwTfue+3Fjd
7eGL8ivPbbfd1ksWizLEuvP/k5f9j+01BEhunEgkEonEcxf2n9lr1wVnhOGw
119/ffHJ1vCO33zq35xTxs9cQ4xAPDsKuGcdz2vvXPyNl/P/jkujC8rjPTw0
zpAbVta+iDpN9YzoGniUWN9hMqrrbl4RiOfdyRcY1Z5t8HlGGvziidGwLmJ9
xNxo3333HfpccuNEIpFIJBKJqWM27rdOzDzE0/PLn3DCCWVf5TDgxJ6LtZRE
IpFIJBKJRH8kN37ugO94XEw23uy59h69RCKRSCQSicR4OHcuzplIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgk
EolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRGIqeOaZZ5of/OAHzamnntr8
4z/+43zL90c/+lFz0kknNe94xzuac845p/OZv/zlL+X3d73rXc0//MM/zLey
wRNPPNFcfPHFzSte8YrySSxcePrpp5vf/e53zfve977m+9///pyW5X/+53+a
97///c073/nOou9diL7gGX11fuCPf/xjc+utt3b+9tRTTzXvec97mtNPP725
9NJLm1/96lfz/P7nP/+5eeihh5pzzz23pPH73/+++etf/zo/iv0saGsy/ta3
vjUn+QMb+6EPfajZfLPNi84912Cc+PrXv150MD7an1xB2/7mN79p/vVf/7U5
//zzmx//+MdFZ+eqrPTz3nvvLXo41TTo7xlnnNHstNNOM1o+Zfve977X/Pzn
P59yGldccUVz++23z1mfSiy8+OlPf9p8+ctfbj7zmc80t9xyS3PPPfc0Tz75
5FwXa74A7/vFL35R/o8ffOQjH2me//znT5kb/+EPf2j+8z//s4xBfRG8ZOml
ly7jRRdwgL/5m79pttlmm1Lm+Y2f/OQnzQorrJDceCHEz372s+Ytb3lL0Xvj
+VziT3/6U5mHrbLKKkXfu3DRRReV3zbddNPm29/+9qyXiT087LDDmuc973nP
+o3t2H///Qs30o8/9rGPNS960Yua//7v/x48c+KJJzave93rmn/5l38pn0MO
OaS57bbbJrIRgFO3eXdf4A3sEtkus8wyzT//8z9PKZ2ZgjmYNnwucmPzpKOP
PrrZYIMNBp+///u/L+0Pd9xxR/OSl7xk0N6eZb/x5UmhvXHHqeB///d/C2fc
c889m7/7u78rY9NUgL/S14022qjYiOmi7hv68nrrrVe4x1Sx4oorljr+8pe/
nHbZEomAfrfbbrs1p512WrGXZ511VvPiF7+4eeCBB+a6aPMFxoqrrrpq8Ddb
svrqq0+ZG/Mn8O1Oaofe+973Nosvvniz4YYbPmv8u+6668o44nPyySdPPKbO
FNjF5MYLJ3CVBYEbg/5onkjfzclq/Nu//VuzxhprlN/w1amO933BxynPHXbY
4VlcXT9kJ17+8pcPvsN/1lprrebNb37zoLzLLbdcc/fddw+eedvb3tbstdde
zW9/+9uJyvLNb36z+fjHPz6levBbfulLX2re/va3N0suueScc2N4rnJjc6UT
TjihzMviE7wMHzUP+sAHPjB4/s477yx1nUrfMh5NVUbKdcMNNzRbbLHFtLhx
gO2fCW4cfQP4efh7psONb7zxxubf//3fp+wXTyS6sPzyyze77rrrQK/Ye9zO
XHdRwOabbz7PODEdbmz84T+a1A6xp3vvvXexn/LmdwjwS7FJL3vZy5qVV165
ufrqq3un+7Wvfa3YaJ/wjU8K9bjwwgvL+8mNF15Yc10QuDF9Y39iLljru7Ws
Qw89tPRZ3HlY/NFMItbC+QXb3FhZ99hjj8KFavzt3/5t88IXvrCspePU5FrP
Z8118VOxVJNgOjzJurgy4CBkN1fc2FxD/cnuucqNd9xxx+bYY4/tXL/7zne+
0yyxxBJlHhMgd3Vl4yfFdNpcvuRsPFpQuLF1lXptVByKOI3pcONEYqbx+OOP
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
+ctfDn5TP2WN/Pym3ZVJOYynZNy+f2lSbtzWD+3k/yEna9n+lk+ssw3jxp5z
T7o150nuSxWfsd9++5U2HAZ6veWWW86zbtAF5acP/M10Mrhxly9YmjvssMOz
+swaa6zRXHnllWPLTZdvuOGGZvXVVy91F7cQ0E78O7UsJ4F7Z++6667SV176
0pd2jrPaoWt9lex9nnjiiXn6nfJF36jbPdZ6tL+/67bzfDw3qn26ynD//fcX
nVeXvrGa6qSPb7TRRs2XvvSlefpaXW72rw19hB0k73r9igwiVrPdTpFe6HbY
0cg3+rE0gy8M48bagv25++67O8vXBfl9/vOfH9hWedX2Sz+nu+wD3a85i/ao
27FP+5x99tlF56UZMgpurCzsFbtSx7CELtNH5ejTt+mbuBDlinVGcve3Ng7w
X8cZ/lGPtv0Ga2LKFna2fka7k7vf6jGuLkPYMHnRrxe/+MXPane2XhrGrXZM
gXQ9E2CLpeU57S6t+F2dartAF6LuPsqkbPrnMF3ugvZq2xJy0O6ht2TbJz6f
HlmfCJ9E7OmoubFyKWs7PXVXH5+MS07MNOijsYPtE88UwBeN5xdeeGFz6aWX
Dr6/6aabmsMOO6x505veVNaLrf3q33xKV199ddFpfxtDpQu33nprWYdhU9jd
Aw88cMrlnYQbq9POO+9cxjZ5H3vssQOfCP4qhpQtto74yle+cmyMp75JFmzN
y172svJu2Aj8bPPNN2/OOeecUr9VVlllHh8ITipOzHf4lzHNWN0H4mr5Gq+5
5pryvrVH/FxMIOCAH/zgB8tvBx10UBlz1B20o/iG1VZbrYyh2mvdddctvO2p
p54qddI+p59+enlf+4nlZuP8LvZ12223LW3qIxYRX77llltKXt5VZ+1S8+O+
3NhYJ44z0vchP1xdnSNmmX084IADSry5MQO6uPGnP/3p8tzll1/eHHfccc1e
e+3V+97Udpt1lXW77bYrMh0HPBuvpYs1N+6CZ+hpe2yK2PpxMZ/GKu0WsUZ1
3/jwhz9c4vb0Te0qZl+7joPx9swzzyzvsAHHH398iSepuTEuoO1OO+205qST
Tip1DF7EHkR89u67717koZ5HHXVUWS8NGeqD2vz8888f1FPb64/1HFc91E15
xGP04UXanc5LW/+gV/S2D8R+6+P6ujtBY51InfU78vzkJz85kA/QD/3q1a9+
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
3J/XBWc4ubPBPQDu6kskFgZMZ87q3j48cC7O2RoH/gbn5+GLswl+Wne71vm6
r9v9IPMDzkGpz8/WnuyttpkqnDNY12mqcA/twnLnE10KOZOt85f6Qh8Zdq9i
YnbQV+b1/I/Py32lU7WJfM4bb7xx4cYL09lck8yR3SG/xBJLTCzDuP814F7k
1VdffUbWwWYbMdb4jPJz04l6XDBuOi/fnefzG+78pqfgLlKynq6NclYtfpxI
PNfh/nN3k0wV1s74CBZVbsxPxLbNBI+cKviNjcfs2iOPPFK+u+eeexaIe2Xc
hyrO47kOfkT+wPYdPl1wPmP7ueTG8x+77LLLWJnjKWxEwDzO2D6Xa9wLGtoy
mg1Yi19zzTVnNY/ZRF9ubK0JJw3MFTd2p6s5oDuWAnws00Vy48SCiPvvv3+o
r/Duu+9u3vjGN5Y7jj/3uc+VeDr2iH9xu+22K+M5jhV497vfXfqwjxiqGuKT
3vnOdxb/AA6wzDLLjOXG+qJ7gKXX5QfwnbU4v5977rnNgw8+OM/v11xzTeHw
fm+X9ZZbbhmU9ZJLLhl8P4wbf+xjHxs8791aRuqkbqecckr5AN/n29/+9lIG
v4sPA7xYnZZccsnmJS95SfnNmBplxU9rkLu6hdwefvjhwW/qq1x+d2eSsklD
7F4fiA+2zs/O1nUKuP/YM/TDh7xH2XBlcz92IOp++eWXD2Tnu6effnpoGsZU
9vfoo4+eRy+lS7bHHnvss3SBjKKM8Y6ykAudtUb+lre8ZcBd6DydJjvtFKCj
dTq1rIdB3aTfTo/szjjjjGattdYquiQ96XdBzOFOO+00kht7X7m70LesykS+
ZEIW3ovy1nWvob3J2/dtHaHL2qVLP5SnlmW77uyDdmNPatD/+r1xuqz88Wzb
5ng3/PSRbluGZEFP2C6/x31Lw2BN2Zq9OY/nvV9zY3/fdddd8+hVV1nb7cU2
sSXRN8iFfKIP+reNun9G3aOtajty5ZVXln6o70U/9F4NehE2Tj+r+7F8og9J
hwxqGdftRb7aui2jqNPNN988VJfVt9YT+UZ63lEmOhe/sbnPe97zym/hV5VX
/VyAvOXdbhcyr8vfJecatc637ZB+HH3E2OWZ9pgkfeMNeyFeioxGcWN132ST
Tcp4G7KsubHyuz/amNIG28Reas+6b0jDe3SO3KTr73Hx8rHeW3NjsqjtAv2V
Jr0Iu9zWdXWii8ccc0zRq+WWWy65cWJGcMUVV8xzXx60/2b7/N+/Ynn4Q/TX
GsZsHMSYTDeDq1rDMa4ffPDBhdOZG/LzijO6/vrrC3dh+8Snhk2Sln4ijd12
263wvrCh7inbbLPNSj8xjmy++eZjYyqslUnD2Oa5F7zgBcVfHfj85z/f7Lrr
rqV/GwfEPVnfCeClYgCVwbPGPH0RyIE9ka67N1dbbbVBjGEXN/YbmXv+Qx/6
UKm/NOzZYZ+WXnrpksa2227brLDCCmX/lO/Fvomp4gf1G7AdbNZSSy1VeD15
sEtsGL5ccxNjlXo9/vjj5TntuOmmmw7kpt3YFbZT7Jn2wsX6xkXce++9zRFH
HFHaYqWVVnqWfuy9996Fc2t/8vOs9d822D76Rf4vf/nLy3f33Xdf0Smy2W+/
/Yo86IWY5FH7y4y9ylPHIpC/2FttbY5D95TVWHTyySc3q6yySilffLSLsWPZ
ZZdt1l133cL/PaONtLt6ifMjO+0J4v3I0D3fbP9ZZ51V5D8KdORd73pX88QT
TxR7H+OV+knj0EMPLfmSg7p0+RXli5cZ45XdHePf/e53y28hh6222qr8pg/F
b6B8yiBt8tfPhsGza6+9dhmL99lnnyILaZKNvr7GGmsM5Fen86lPfaq0u70B
8qhlgmu4pxPnUTfP+f9vfvObIoeQpbEZPwO/aQMfsttzzz0HdaJHhxxySMmL
PPfdd9+h84GAmEdpsz3sRfQNdo/cV1555dJfV1111VI39Q7Il36wa/I0Pxnn
q7eu4pkNNtigyJ29CG5Mf7SXNtcP2+v9+qd39thjj3n6sfLxf+6///4lPdzJ
+8qrzaSHb7dh/9ZHP/rRUqeY3/Mxeg/3AmWgl/ohG6Nd/E3/A+JFIw5BmchU
/aL8+gtbr02sp+++++6lj+mDdKLue/iq9mjLSLvzs1x44YVlPUUa0e64FRl4
P/TkqKOOKnVXt9BNbUnnQFnE8ctHHtb39YV11lmn2KDwRcj3yCOPLH3MmKBu
IXf5s6l01NqZMg2bvwbOOeecovM4tvEnxiR1UB52tNa3ekwKWbIt8qFLbP4o
bhyyZPNClsGNjTX6snrTEfoVCNv06KOPlnEmxmN2OXSUzimfcvrbs8OgT6iT
smgXdfTRJnQ55Ok7aYb++ihL7G9lw/nWyEt+9IoMkhsnJoE4NpxAv1hxxRUL
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
b8+Rj/5BDuTG3tfnQJALvRrG4+k8+Yi9oOvax/O4ivkQjmEOJRbKHLTt964R
cxPPaXvlhWHcGJwRzmeqn9MPcbvie+PdLpjfqWPE/wZHijrTzTY3Jlt8V/3o
lX4TcwjzcjbH3I59Mb7Z18P+6OORrjPStE+s20hD+7A76hO8ztgbukx+5oX2
qw0DLsDemJ9IQ9m1QZyFpn1qrqJN9ePg7c6LsVeK7MN/53l6VsdIt8Fe2LdJ
p5R1GDeOeGH9XR/Dj8WIy0f94+wrdWVv6JL/y1s99J9xkCdbQw7SZeuUhX0m
B/qk3dk6d87RD+XyTNyDGfEoyixP9edHYL89r9/qx/qL8mv/4JpxFkv7jJS2
jLSzMsT9QHGuT5ynrg31T/Y+oEx0gEyCG5NT+EPj/C95xH16Yu/UI+6flD7Z
qFfcXxh7itk69hb0Z+nX+1Db0F9in47+QMZhR/UB43Gtb1Gn4MbsubVAczJ5
GaOkx7bV675t2G+q34Ys9Tl2PvRDGyuHtGI81rb+JmMfZQ/7iEfU3JisyGxS
bkxP2fs2N2bzYg95cGP+Nn0yxtLgAnSK70UbdZ3Fkki0Qd8jDsrYRLfN0Yw7
OIpxoT5327P0FG8KbhzjHP30bvs8Rn2Wz9mzbd5jLqxvy7ftk4v1yHZ6OJ7n
23yCXWNLYh+K5/w97s57z3oO11An5ahjXo0LnlHOrr1Tcfdb1x4yZeR3b59d
3t5L2P6t/d0wxHlvga69en3v/lD+dt1nAsYpZazPWqjbHfzWjslsg81Vl5Db
dMsqLTyrnYa06/Zq5xsxNtq23jMZelI/p+7xN/nSxfoZv9fnuI6re1uPQvfq
z6iYafXVX41/+oexzTviGcihTi/gOXyZLVDPUf0pzseOj/lA/F9e9DravZYl
26Ov099YMwq9Nd519Zda/l39M+7TatuwsB/xiboPA/vDroVPVH+OWHxrVnVa
vov/0/lYD6ifA2Ud1+7KTw5R9jofILv4u74bTr8gSxy4jgdr6wl9rPVwHCK/
2E9cn605CSLPrvlg9KEa5N+ue6AtoxiTou50x+/SaLd7u3+22zPOQGCbjG/4
OcQ+wXZ5wrder4HUdYpPnzEJ5zfOSjN85t5r9/e6TrUtqfuGcU15xu37lXbI
ahJ0jcfG+baM6r+H+T+U0xoLG2V+REfDZr3v/7fLtTxj3O5qj3iOHVH3ceNL
ItEG/TKv0hfNh/lmzNXopd/4UM2h2V9/+/An1TEVfvf9KD9IIpGYeww76ySR
SCQSicT/wdpVnA3YF8PijROJRCKRSCQSiUUNyY0TiUQikUgkEon/D2J/7DEQ
D1TfMZtIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIJBKJRGLBRtylOz/h/sA+d68uzLjyyivnugiJRCKRSCQSMwp3x7hfJ+5z
mi7cseNOG5/ZvnPAvTxxH+v8RtxxvyjevRN1dydUIpFIJBKJxMIAvtbXv/71
ze6779688pWvLHeO1veNTgXf+MY3yp3m0v7c5z7X7L333jNU2v/DvffeO8/5
ce7znAtu/P3vf3+Rvm/MOX7JjROJRCKRSCwsuPnmm5sLL7yw+etf/9r8+te/
LneQ88FOByeeeGKz+OKLz1AJu7HtttvOc3f9XHHjRR3JjROJRCKRSCxMuOOO
O4qv2H0egCP/5je/mVaab3jDGzp56k9/+tPmYx/7WIk/4E9uw29iMcSv/vjH
Px6a/sEHH9yssMIKzWGHHTYod82Nf/CDH5Q83IfdBp/2JPEPf/nLX5obbrih
vNP1XtQJ7r///sFzvvMbxHdRp1/84hdlPoJTbrrppqVM8OSTT5a6++7UU09t
ttpqq/LMrrvuOrac1113XXnWGsDLX/7y8v8ttthikOett95ayqAutYzqOvHF
+/uyyy4r5V9llVVKOeBrX/taSXfPPfecR67BjaNO3u+KP/ad3y655JLmiSee
GHz/yCOPNGeffXZ53zNkQObqE+WTrt8TiUQikUgkZht4zgknnNAsscQSzWtf
+9rme9/7XvP0008PfsdVvv3tb5fPXXfdVXy1P//5zzvT+tOf/tS85z3vaVZf
ffXCU/EmaUvjxhtvLBzvoYcear7+9a83O+ywQ3PIIYc0jz/+ePlum222aRZb
bLHy7uabbd4cd9xxnXngm7j3iiuu2LzjHe8onA2CG9sXJ1/pbLTRRs1jjz1W
fvevPE877bTyLD530003jZSNch9wwAHNPvvsU+p/+OGHlzzWW2+95qyzzmo+
8pGPlP8HJ+d3f93rXlf+xvED3pU3uZGRMl5wwQXlN/ErG264YZG79yNu+m1v
e1sp55FHHln+vvvuu4eWk/ziuZ122qm8d+ihhzYrrbRS85nPfKY8Q86bbLJJ
KV+0+2te85pB2ZVNTI02eOELX1g46cte9rIiZ88dc8wxzfve974yJzE3CZC1
NQL5qteWW27ZLL/88s3FF19c5llPPfVUWYv40Ic+1HziE58YtDuIRcG/lUGb
b7DBBiVO5r777it5Bgc//vjjiwwTiUQikUgk5gf465ZaaqnCUfCh4JP2uOG2
eNK1115buJNnxt0T3fYb29+HQ+JIgS9+8YvNaqut1px77rnlbzwJ7+JX/MlP
ftI8/PDDQ9O3Bwz37YqpUE748Ic/3CyzzDKDPA888MDm7W9/++B5nA4fD99u
F/i2l1566UE8sWflIf+6LHVdvSNfHDxw+eWXD8qB7+GPF110UfF5+15dwn+L
f9bpybvPfsb2c1FW6YG2xF+DG0O7nZRFG0Qa3vG7eUCsJ3hfeWs54s94feS7
9dZbl+d++9vfljrK9+qrry7/x/mlic//8Y9/LBzeuoU2p1e/+93vypznxS9+
cfEpg7R/+ctfjqx/IpFIJBKJxEwAR7P2zid81VVXFZ6CG+EtJ598cokd5j+F
YbESbbSfsyaOT0X8A/AD8hPix+A3vtzf//73Y9MfxY0D/KXSw/dw/fXXX7/Z
a6+9yt8+/NInnXRS8+ijjw7NR5o1N4Zx3PgPf/hD4YvmGBEHIDY64lTwzI03
3ri58847i69WzANZBEefKW4cZZ2UG5NZtFNwY3II8A3X73TFG59++uklL+8f
e+yxhecqh4/5yRFHHDFoO+m98Y1vfFZdllxyyeK/rudTiUQikUgkErMJ/BE3
5cMF/l1cB3exrs2XHLEBP/vZz5rtttuu8MlxaHOu4LI1N4b63LXgxn0wKTf2
nOdrTtsH/Ji48c4771xiZHFZMQB1LEabG4NY3fC/3nLLLc0VV1wx+I1PVPyA
GIoawZ0XBm5M3sGN6dJRRx1V/M5dkF77fGjxxtYPzCHkJe56Ls6uTiQSiUQi
sWhBnEMdV1BzYzG2uGuslePP+N4999wzNt0ubrzyyivPw9usne+4446F98Bs
cmNlXnvtteeJqQD1HneeMy6Jy771rW8t+9zOPPPMwvnqsnT50sU6k98uu+wy
z/diPtZcc83ipw9ITzwuLAzc+Pzzz5+HG/Oh13srf/WrXw3OCezixrE30XzM
b3Tnve99b1nLSCQSiUQikZgt4Dj1eW0PPPBAiXNwbgAeXHOW3XbbrXCcPjEP
bc4lltR+rXe+852D7/hk7Q0Ln+pscmNxDvJStzq+mA9c3Osw+M26/nnnnVc4
dBePHsaNg6sG5w2IwcXTyVMsBV/0QQcdVPYnwmxzY7HA0N6LBzPFjeVDZvy/
dMn6gz2aYK5lL1/Isosbi+Wp9zKSFT1Vnttuu62Uxx6/RCKRSCQSiZmEsymC
G+MxH/zgBwsXtAcK/7EWzr/rHK/nPe95zatf/erms5/9bDmrrAvPPPNMiQ3Y
b7/9yvv4F17q+0svvbSk/dWvfrX4Dd/1rneV/ORrvV1cqvgF/sRh6+818C1+
b37YP//5z2UN3vuR3vXXX1/iRSJe1flk7iNZa621ii/TWQpxPtkw2KMYd/vF
B691xgSOJw6bjOSLp9fne/zoRz8qHLDr7DHnqYnr9p7y4I/k5FlneeCa/Pb+
Jhd/45vD9g1qD5zXc57HK521Fue/SUf69sEtu+yyJV9zH/IgB8/gqnzd3tE2
YkjEf3hWWupqf6Rz3HwX8SnmO95x5po8+NXrOZC899hjj6I/5KfdtDtEeuZc
tU8Yj1Ym9ZWmsy3IDN785jeXtMT8JBKJRCKRSMwkcEScyvlgZ5xxRuFA4Xd0
/pf9a84R4E+O8wmcWzEMfHm4C77ts//++xfO5Nwyv+GPziR2Tx7fZMTYOl9M
vj78vf4eBzG9zriQrpiJeF9ZpSt9f9cxzurprLOjjz66PDcOOCfuFvWJj/OH
8dk6X+cw8I8HzCnkoe5dwJ29Nz/jaM1JnKMhX/mTx3e+853yG5mTvd/Ezyh7
1M3Hc56Pv+uY6/ZzXflqK/rlHLdo9zq9up2kUadp32JA2aLdE4lEIpFIJGYS
1vOtT1unds5YHV+AQ/ktzmv7yle+Up6rfaMLM8Kn2eX3da6xTyKRSCQSiUQi
sShAbIe4B77O+jxncRbuAKl9xIlEIpFIJBKJxMIOvmG+YxzZx//Fwo67+ySR
SCQSiUQikVgYYW8fH7KP/ycSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgk
EolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIJBKJRCKRSCQSiUQikUgkEonETOL/ARdWYK4=
    "], {{0, 447.}, {711., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{711., 447.},
  PlotRange->{{0, 711.}, {0, 447.}}]], "Text",
 CellChangeTimes->{
  3.936931570958449*^9},ExpressionUUID->"b2754362-59ba-4c62-b03d-\
67da63842c9f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"M_", ",", "m_"}], "]"}], "=", " ", 
  RowBox[{"g", " ", 
   FractionBox[
    RowBox[{"M", "-", "m"}], 
    RowBox[{"M", "+", "m"}]]}]}]], "Input",
 CellChangeTimes->{{3.936929368897522*^9, 3.936929394728301*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"9c82c4ce-cc0e-4f1f-90e4-ac3d9e34f672"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"g", " ", 
    RowBox[{"(", 
     RowBox[{"M", "-", "m"}], ")"}]}], 
   RowBox[{"m", "+", "M"}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.93692952261244*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"3b8947e1-406e-461f-b607-9f86e3e48416"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AroundReplace", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M", ",", "m"}], "]"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"m", "->", 
       RowBox[{"Around", "[", 
        RowBox[{"50", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"M", "->", 
       RowBox[{"Around", "[", 
        RowBox[{"100", ",", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"g", "->", "9.80"}]}], "\[IndentingNewLine]", "}"}]}], " ", 
   "]"}], "//", "ScientificForm"}]], "Input",
 CellChangeTimes->{{3.936929429819085*^9, 3.936929560050548*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"b45441fe-aa0b-4996-95eb-ff20ded43aa9"],

Cell[BoxData[
 FormBox[
  TagBox[
   InterpretationBox[
    TemplateBox[{"3.27", "0.10"},
     "Around"],
    Around[3.266666666666667, 0.09739318301999084]],
   ScientificForm], TraditionalForm]], "Output",
 CellChangeTimes->{{3.936929519158388*^9, 3.936929524207534*^9}, 
   3.936929561387727*^9},
 CellLabel->
  "Out[4]//ScientificForm=",ExpressionUUID->"5b22341a-be54-43c3-a70e-\
99125806f379"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AroundReplace", "[", 
   RowBox[{
    RowBox[{"GAMMA", "[", 
     RowBox[{"gAA", ",", " ", "mTT", ",", "mAA", ",", "mPP"}], "]"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mTT", "->", "2.74"}], ",", "\[IndentingNewLine]", 
      RowBox[{"mAA", "->", "2.4221"}], ",", "\[IndentingNewLine]", 
      RowBox[{"mPP", "->", "0.13957"}], ",", "\[IndentingNewLine]", 
      RowBox[{"gAA", "->", 
       RowBox[{"Around", "[", 
        RowBox[{
         RowBox[{"-", "4.31"}], " ", ",", "0.20"}], "]"}]}]}], 
     "\[IndentingNewLine]", "}"}]}], " ", "]"}], "//", 
  "ScientificForm"}]], "Input",ExpressionUUID->"d184d4b9-a786-4207-9ca0-\
31616ce03bc5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m", "=", 
  RowBox[{"Around", "[", 
   RowBox[{"50", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"M", "=", 
  RowBox[{"Around", "[", 
   RowBox[{"100", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g", "=", "9.80"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"M", ",", "m"}], "]"}]}], "Input",
 CellChangeTimes->{{3.936929617324708*^9, 3.9369296534706583`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b46320e6-88c8-49a7-af9f-f875448c6018"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TemplateBox[{"50.0", "1.0"},
    "Around"],
   Around[50., 1.]], TraditionalForm]], "Output",
 CellChangeTimes->{3.936929654360835*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"c8f2c73d-c96f-415d-a9b9-ffdd16d97378"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TemplateBox[{"100.0", "1.0"},
    "Around"],
   Around[100., 1.]], TraditionalForm]], "Output",
 CellChangeTimes->{3.936929654366638*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"b7e11a40-ff77-40cc-ad4a-53fbe2159723"],

Cell[BoxData[
 FormBox["9.8`", TraditionalForm]], "Output",
 CellChangeTimes->{3.9369296543704433`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"5a83e60c-892c-4e75-82f3-e09544b66101"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TemplateBox[{"3.27", "0.10"},
    "Around"],
   Around[3.266666666666667, 0.09739318301999085]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.9369296543737803`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"dac01d4f-94d9-4e5b-a15e-79774c4a34ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "function", " ", "f", " ", "with", " ", 
    "Around", " ", "for", " ", "uncertainties"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "Around", " ", "to", " ", "include", " ", "uncertainties", 
     " ", "in", " ", "M", " ", "and", " ", "m"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"Around", "[", 
      RowBox[{"100", ",", "1"}], "]"}], ",", 
     RowBox[{"Around", "[", 
      RowBox[{"50", ",", "1"}], "]"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369300824999647`*^9, 3.936930082505028*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5fc18c0b-922b-4154-a2e8-cfb0f359670a"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TemplateBox[{"3.27", "0.10"},
    "Around"],
   Around[3.266666666666667, 0.09739318301999086]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.936930083661414*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"93feba25-9b0b-4013-b6eb-a7ee6d50fd4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "function", " ", 
    RowBox[{"f", "[", 
     RowBox[{"M", ",", "m"}], "]"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "the", " ", "number", " ", "of", " ", "iterations"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"iterations", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "100", " ", "random", " ", "values", " ", "for", " ", 
     "M", " ", "and", " ", "m", " ", "within", " ", "their", " ", 
     "uncertainty", " ", "ranges"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"randomM", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"99", ",", "101"}], "}"}], ",", "iterations"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"randomm", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"49", ",", "51"}], "}"}], ",", "iterations"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", 
     RowBox[{"f", "[", 
      RowBox[{"M", ",", "m"}], "]"}], " ", "for", " ", "each", " ", "random", 
     " ", "pair", " ", "of", " ", "values"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"randomM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"randomm", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "iterations"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Calculate", " ", "the", " ", "mean", " ", "and", " ", "standard", " ", 
     "deviation", " ", "of", " ", "the", " ", "results"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"meanValue", "=", 
     RowBox[{"Mean", "[", "results", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"stdDev", "=", 
     RowBox[{"StandardDeviation", "[", "results", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "the", " ", "histogram", " ", "of", " ", "the", " ", 
     "results"}], "*)"}], 
   RowBox[{"histogram", "=", 
    RowBox[{"Histogram", "[", 
     RowBox[{"results", ",", "50", ",", "\"\<PDF\>\"", ",", 
      RowBox[{"PlotLabel", "->", "\"\<Distribution of f(M,m) Values\>\""}], 
      ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<f(M,m)\>\"", ",", "\"\<Probability\>\""}], "}"}]}]}], 
     "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Display", " ", "the", " ", "mean"}], ",", 
     RowBox[{"standard", " ", "deviation"}], ",", 
     RowBox[{"and", " ", "the", " ", "histogram"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"meanValue", ",", "stdDev", ",", "histogram"}], "}"}], "\n", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9369302088388357`*^9, 3.9369302088419657`*^9}, {
  3.9369310022380657`*^9, 3.936931003319489*^9}, {3.936931042595769*^9, 
  3.93693109702387*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"5d7471ee-a11c-4361-9ab6-763be5182e2f"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.33599999999999997`], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.33599999999999997`], Thickness[Small]}], 
      RectangleBox[{3.14, 0}, {3.145, 2.},
       RoundingRadius->0], RectangleBox[{3.145, 0}, {3.15, 2.},
       RoundingRadius->0], RectangleBox[{3.17, 0}, {3.175, 4.},
       RoundingRadius->0], RectangleBox[{3.185, 0}, {3.19, 2.},
       RoundingRadius->0], RectangleBox[{3.19, 0}, {3.195, 8.},
       RoundingRadius->0], RectangleBox[{3.2, 0}, {3.205, 12.},
       RoundingRadius->0], RectangleBox[{3.205, 0}, {3.21, 4.},
       RoundingRadius->0], RectangleBox[{3.21, 0}, {3.215, 6.},
       RoundingRadius->0], RectangleBox[{3.215, 0}, {3.22, 6.},
       RoundingRadius->0], RectangleBox[{3.225, 0}, {3.23, 6.},
       RoundingRadius->0], RectangleBox[{3.23, 0}, {3.235, 2.},
       RoundingRadius->0], RectangleBox[{3.235, 0}, {3.24, 2.},
       RoundingRadius->0], RectangleBox[{3.24, 0}, {3.245, 6.},
       RoundingRadius->0], RectangleBox[{3.245, 0}, {3.25, 6.},
       RoundingRadius->0], RectangleBox[{3.25, 0}, {3.255, 12.},
       RoundingRadius->0], RectangleBox[{3.255, 0}, {3.26, 6.},
       RoundingRadius->0], RectangleBox[{3.26, 0}, {3.265, 10.},
       RoundingRadius->0], RectangleBox[{3.265, 0}, {3.27, 10.},
       RoundingRadius->0], RectangleBox[{3.27, 0}, {3.275, 6.},
       RoundingRadius->0], RectangleBox[{3.275, 0}, {3.28, 4.},
       RoundingRadius->0], RectangleBox[{3.28, 0}, {3.285, 8.},
       RoundingRadius->0], RectangleBox[{3.285, 0}, {3.29, 2.},
       RoundingRadius->0], RectangleBox[{3.29, 0}, {3.295, 4.},
       RoundingRadius->0], RectangleBox[{3.295, 0}, {3.3, 6.},
       RoundingRadius->0], RectangleBox[{3.3, 0}, {3.305, 4.},
       RoundingRadius->0], RectangleBox[{3.305, 0}, {3.31, 4.},
       RoundingRadius->0], RectangleBox[{3.31, 0}, {3.315, 2.},
       RoundingRadius->0], RectangleBox[{3.315, 0}, {3.32, 4.},
       RoundingRadius->0], RectangleBox[{3.32, 0}, {3.325, 4.},
       RoundingRadius->0], RectangleBox[{3.325, 0}, {3.33, 8.},
       RoundingRadius->0], RectangleBox[{3.335, 0}, {3.34, 10.},
       RoundingRadius->0], RectangleBox[{3.34, 0}, {3.345, 6.},
       RoundingRadius->0], RectangleBox[{3.345, 0}, {3.35, 2.},
       RoundingRadius->0], RectangleBox[{3.35, 0}, {3.355, 4.},
       RoundingRadius->0], RectangleBox[{3.355, 0}, {3.36, 2.},
       RoundingRadius->0], RectangleBox[{3.36, 0}, {3.365, 2.},
       RoundingRadius->0], RectangleBox[{3.365, 0}, {3.37, 4.},
       RoundingRadius->0], RectangleBox[{3.375, 0}, {3.38, 6.},
       RoundingRadius->0], RectangleBox[{3.385, 0}, {3.39, 2.},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox[
      TagBox["\"f(M,m)\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"Probability\"", HoldForm], TraditionalForm]},
   AxesOrigin->{3.1350000000000002`, 0},
   BaseStyle->{FontFamily -> "Arial"},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   PlotLabel->FormBox["\"Distribution of f(M,m) Values\"", TraditionalForm],
   PlotRange->{{3.14, 3.39}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.936930210780909*^9, 3.9369310053162746`*^9, {3.9369310436495457`*^9, 
   3.936931063811942*^9}, 3.936931097522716*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"105a36bf-8efe-41f6-8a4a-71448a9693f9"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"3.2719699490207192`", ",", "0.0571474432875013`", ",", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.33599999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.33599999999999997`], Thickness[Small]}], 
        RectangleBox[{3.14, 0}, {3.145, 2.},
         RoundingRadius->0], RectangleBox[{3.145, 0}, {3.15, 2.},
         RoundingRadius->0], RectangleBox[{3.17, 0}, {3.175, 4.},
         RoundingRadius->0], RectangleBox[{3.185, 0}, {3.19, 2.},
         RoundingRadius->0], RectangleBox[{3.19, 0}, {3.195, 8.},
         RoundingRadius->0], RectangleBox[{3.2, 0}, {3.205, 12.},
         RoundingRadius->0], RectangleBox[{3.205, 0}, {3.21, 4.},
         RoundingRadius->0], RectangleBox[{3.21, 0}, {3.215, 6.},
         RoundingRadius->0], RectangleBox[{3.215, 0}, {3.22, 6.},
         RoundingRadius->0], RectangleBox[{3.225, 0}, {3.23, 6.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.235, 2.},
         RoundingRadius->0], RectangleBox[{3.235, 0}, {3.24, 2.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.245, 6.},
         RoundingRadius->0], RectangleBox[{3.245, 0}, {3.25, 6.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.255, 12.},
         RoundingRadius->0], RectangleBox[{3.255, 0}, {3.26, 6.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.265, 10.},
         RoundingRadius->0], RectangleBox[{3.265, 0}, {3.27, 10.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.275, 6.},
         RoundingRadius->0], RectangleBox[{3.275, 0}, {3.28, 4.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.285, 8.},
         RoundingRadius->0], RectangleBox[{3.285, 0}, {3.29, 2.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.295, 4.},
         RoundingRadius->0], RectangleBox[{3.295, 0}, {3.3, 6.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.305, 4.},
         RoundingRadius->0], RectangleBox[{3.305, 0}, {3.31, 4.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.315, 2.},
         RoundingRadius->0], RectangleBox[{3.315, 0}, {3.32, 4.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.325, 4.},
         RoundingRadius->0], RectangleBox[{3.325, 0}, {3.33, 8.},
         RoundingRadius->0], RectangleBox[{3.335, 0}, {3.34, 10.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.345, 6.},
         RoundingRadius->0], RectangleBox[{3.345, 0}, {3.35, 2.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.355, 4.},
         RoundingRadius->0], RectangleBox[{3.355, 0}, {3.36, 2.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.365, 2.},
         RoundingRadius->0], RectangleBox[{3.365, 0}, {3.37, 4.},
         RoundingRadius->0], RectangleBox[{3.375, 0}, {3.38, 6.},
         RoundingRadius->0], RectangleBox[{3.385, 0}, {3.39, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox[
        TagBox["\"f(M,m)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Probability\"", HoldForm], TraditionalForm]},
     AxesOrigin->{3.1350000000000002`, 0},
     BaseStyle->{FontFamily -> "Arial"},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotLabel->FormBox["\"Distribution of f(M,m) Values\"", TraditionalForm],
     
     PlotRange->{{3.14, 3.39}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.936930210780909*^9, 3.9369310053162746`*^9, {3.9369310436495457`*^9, 
   3.936931063811942*^9}, 3.936931097543096*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"877c6f2b-c806-4c58-85f8-186d7ccaae3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "function", " ", 
    RowBox[{"f", "[", 
     RowBox[{"M", ",", "m"}], "]"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "the", " ", "number", " ", "of", " ", "iterations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterations", "=", "100"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "100", " ", "random", " ", "values", " ", "for", " ", 
     "M", " ", "and", " ", "m", " ", "within", " ", "their", " ", 
     "uncertainty", " ", "ranges"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomM", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"99", ",", "101"}], "}"}], ",", "iterations"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"randomm", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"49", ",", "51"}], "}"}], ",", "iterations"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", 
     RowBox[{"f", "[", 
      RowBox[{"M", ",", "m"}], "]"}], " ", "for", " ", "each", " ", "random", 
     " ", "pair", " ", "of", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"randomM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"randomm", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "iterations"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal", 
     " ", 
     RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"FindDistributionParameters", "[", 
      RowBox[{"results", ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
     "Gaussian", " ", "fit", " ", "overlay"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"histogram", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Histogram", "[", 
        RowBox[{"results", ",", "10", ",", "\"\<PDF\>\"", ",", 
         RowBox[{"PlotLabel", "->", "\"\<Gaussian Fit to f(M,m) Values\>\""}],
          ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{"\"\<f(M,m)\>\"", ",", "\"\<Probability\>\""}], "}"}]}]}], 
        "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{
             RowBox[{"fit", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"fit", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", "results", "]"}], ",", 
           RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Display", " ", "the", " ", "fitted", " ", "parameters", " ", "and", " ", 
     "the", " ", "histogram"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"fit", ",", "histogram"}], "}"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369311914078283`*^9, 3.936931191411046*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"e3e4c6c4-3489-4120-981b-e2421d9e80bb"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "3.2719758125644436`"}], ",", 
      RowBox[{"\[Sigma]", "\[Rule]", "0.05352627825549401`"}]}], "}"}], ",", 
    GraphicsBox[{{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.595], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.595], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.14, 0}, {3.16, 0.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{25.546236989591762`, 34.87791771879051}, {
               37.142368002801284`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.5]& ,
            TagBoxNote->"0.5"],
           StyleBox["0.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.16, 0}, {3.18, 0.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{34.37791771879051, 43.709598447989265`}, {
               37.142368002801284`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.5]& ,
            TagBoxNote->"0.5"],
           StyleBox["0.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.18, 0}, {3.2, 1.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{43.209598447989265`, 52.541279177188244`}, {
               29.055285708763748`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.5]& ,
            TagBoxNote->"1.5"],
           StyleBox["1.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.2, 0}, {3.22, 5.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{52.041279177188244`, 61.372959906386995`}, {
               0.7504976796323746, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.22, 0}, {3.24, 8.5}, "RoundingRadius" -> 0]},
              ImageSizeCache->{{60.872959906386995`, 
               70.20464063558575}, {-27.554290349499, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 8.5]& ,
            TagBoxNote->"8.5"],
           StyleBox["8.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.24, 0}, {3.26, 8.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{69.70464063558575, 
               79.03632136478427}, {-23.510749202480227`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.26, 0}, {3.28, 5.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{78.53632136478427, 
               87.86800209398302}, {-3.29304346738639, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.5]& ,
            TagBoxNote->"5.5"],
           StyleBox["5.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.28, 0}, {3.3, 5.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{87.36800209398302, 
               96.69968282318177}, {-3.29304346738639, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.5]& ,
            TagBoxNote->"5.5"],
           StyleBox["5.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.3, 0}, {3.32, 3.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{96.19968282318177, 105.53136355238053`}, {
               16.924662267707447`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.32, 0}, {3.34, 5.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{105.03136355238053`, 114.36304428157928`}, {
               0.7504976796323746, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.34, 0}, {3.36, 3.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{113.86304428157928`, 123.19472501077803`}, {
               12.881121120688679`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.5]& ,
            TagBoxNote->"3.5"],
           StyleBox["3.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.36, 0}, {3.38, 3.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{122.69472501077803`, 132.02640573997678`}, {
               16.924662267707447`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.38, 0}, {3.4, 0.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{131.52640573997678`, 140.85808646917553`}, {
               37.142368002801284`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.5]& ,
            TagBoxNote->"0.5"],
           StyleBox["0.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.5, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$26221#1"]& ]}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox[
        TagBox["\"f(M,m)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Probability\"", HoldForm], TraditionalForm]},
     AxesOrigin->{3.1348000000000003`, 0},
     BaseStyle->{FontFamily -> "Arial"},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotLabel->FormBox["\"Gaussian Fit to f(M,m) Values\"", TraditionalForm],
     
     PlotRange->{{3.14, 3.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.936931192695427*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"c712fbd5-3464-454d-bf1b-68e9772414cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "function", " ", 
    RowBox[{"f", "[", 
     RowBox[{"M", ",", "m"}], "]"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "the", " ", "number", " ", "of", " ", "iterations"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterations", "=", "100"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "100", " ", "random", " ", "values", " ", "for", " ", 
     "M", " ", "and", " ", "m", " ", "within", " ", "their", " ", 
     "uncertainty", " ", "ranges"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomM", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"99", ",", "101"}], "}"}], ",", "iterations"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"randomm", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"49", ",", "51"}], "}"}], ",", "iterations"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Calculate", " ", 
     RowBox[{"f", "[", 
      RowBox[{"M", ",", "m"}], "]"}], " ", "for", " ", "each", " ", "random", 
     " ", "pair", " ", "of", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"randomM", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"randomm", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "iterations"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal", 
     " ", 
     RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fit", "=", 
     RowBox[{"FindDistributionParameters", "[", 
      RowBox[{"results", ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
      "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", " ", 
      "publication"}], "-", 
     RowBox[{"quality", " ", "styling"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"histogramPlot", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Histogram", "[", 
        RowBox[{"results", ",", "10", ",", "\"\<PDF\>\"", ",", 
         RowBox[{"PlotLabel", "->", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Gaussian Fit to f(M,m) Values\>\"", ",", "Bold", ",", "16"}], 
           "]"}]}], ",", 
         RowBox[{"AxesLabel", "->", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<f(M,m)\>\"", ",", "Bold", ",", "14"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], "]"}]}],
            "}"}]}], ",", 
         RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
         RowBox[{"ChartStyle", "->", 
          RowBox[{"ColorData", "[", 
           RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"NormalDistribution", "[", 
            RowBox[{
             RowBox[{"fit", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"fit", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", "results", "]"}], ",", 
           RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", 
           RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Frame", "->", "True"}], ",", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
       RowBox[{"LabelStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"{", 
    RowBox[{"fit", ",", "histogram"}], "}"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", " ", 
     "file"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<GaussianFit_Histogram.pdf\>\"", ",", "histogramPlot", ",", 
     "\"\<PDF\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.936931508458806*^9, 3.9369315294186277`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"b19efd39-8eb6-4da5-b432-a3ef2a846990"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "3.2623830763365906`"}], ",", 
      RowBox[{"\[Sigma]", "\[Rule]", "0.05506101362513647`"}]}], "}"}], ",", 
    GraphicsBox[{{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.595], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.595], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.14, 0}, {3.16, 0.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{25.546236989591762`, 34.87791771879051}, {
               37.142368002801284`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.5]& ,
            TagBoxNote->"0.5"],
           StyleBox["0.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.16, 0}, {3.18, 0.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{34.37791771879051, 43.709598447989265`}, {
               37.142368002801284`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.5]& ,
            TagBoxNote->"0.5"],
           StyleBox["0.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.18, 0}, {3.2, 1.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{43.209598447989265`, 52.541279177188244`}, {
               29.055285708763748`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.5]& ,
            TagBoxNote->"1.5"],
           StyleBox["1.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.2, 0}, {3.22, 5.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{52.041279177188244`, 61.372959906386995`}, {
               0.7504976796323746, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.22, 0}, {3.24, 8.5}, "RoundingRadius" -> 0]},
              ImageSizeCache->{{60.872959906386995`, 
               70.20464063558575}, {-27.554290349499, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 8.5]& ,
            TagBoxNote->"8.5"],
           StyleBox["8.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.24, 0}, {3.26, 8.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{69.70464063558575, 
               79.03632136478427}, {-23.510749202480227`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.26, 0}, {3.28, 5.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{78.53632136478427, 
               87.86800209398302}, {-3.29304346738639, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.5]& ,
            TagBoxNote->"5.5"],
           StyleBox["5.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.28, 0}, {3.3, 5.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{87.36800209398302, 
               96.69968282318177}, {-3.29304346738639, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.5]& ,
            TagBoxNote->"5.5"],
           StyleBox["5.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.3, 0}, {3.32, 3.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{96.19968282318177, 105.53136355238053`}, {
               16.924662267707447`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.32, 0}, {3.34, 5.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{105.03136355238053`, 114.36304428157928`}, {
               0.7504976796323746, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.34, 0}, {3.36, 3.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{113.86304428157928`, 123.19472501077803`}, {
               12.881121120688679`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.5]& ,
            TagBoxNote->"3.5"],
           StyleBox["3.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.5, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.36, 0}, {3.38, 3.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{122.69472501077803`, 132.02640573997678`}, {
               16.924662267707447`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.38, 0}, {3.4, 0.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{131.52640573997678`, 140.85808646917553`}, {
               37.142368002801284`, 41.68590914982005}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 0.5]& ,
            TagBoxNote->"0.5"],
           StyleBox["0.5`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.5, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJwV1nc8Vf8fB3DpGudco5Dk3kNGRWXvkfOOkpGElB1JqKy+fUmSQpSWkYwi
Wn4hKbIzkiKalJSRypZrhaT6vb9/3Md9PP8453M+4/16f2T2BNh6cXNxcc3h
77//wPLRgjQjAnhnXDo6ffrpK+sL3j1CxztHT00d6aefXgtY6EV/HGhcI3am
n2bHTJqvpQkY5q0aDrjTTzfZzn2rQFNhmcrJw/207OhiVicQcLFadVua/wDd
JsWKlTIhoLW9pOpq+CCtF22++8YWAm4a+WRolA3TIxXidwNsCGC5hQj8Jcfp
WWmrx8lOBPQMrf7u3jdJnz+0qf+8JwGmVqlOFDFDC6jl55j5ERBXuPey1/uf
dB8VruoaTIDU2uAym/rfdE5w9U7NEwSY2DhrhGgvgqmq2rNdZwiQr4zViy9a
DGlq609/TiSgu4AoKlblBQURftnbVwkoMatOKBIkYKmMVVTDLQImP6yOa/rE
hCjKbqqkgABLbj/FkmIh6D7VxHWgjACrzbarLTlLIIl9592ROgLMB+rv6vmJ
gJr0zy3mzQS82PFl0y1CDByFyaaRNgJOjtYI2l1eBp+UopcOdhFQN6iT1jAv
DqZl/rO3B3A9XkpZPPOWAGbQ45s14wQ0/30pNZS9AsqTYzjp8wS4zJ+6lfBW
ErhzR2/WoUXyW6RG3kuCRbWt0yDafovH1MZPktDZL9Wg9Qv38+f+/w18lQQu
3dL01+iR2KHloj8kYcvHgc28vwmY2uhaPSjOgndS5leD/hIwx4r5HO3Agokc
prkZgwRD7T+Dqq0smHa/6HUQ/fFksl3KexbMrBCNjEcPi72R/dXBgvmzkpUf
0APKf4crPrOAEaio5MtDwt8L/QzWGAvEdbcsjeMloXzqcbALPxv0GyM7mvlJ
0LvXqNulzwbDk7wzHDTPu2qDsQ1sMNKPExEjSLg8Lha1AGwwyU+wdEGH1DM/
LdnChq3xWY9G0U6rw5Il7Njg5lCdLcgk4frDUo8b+9kQNfjT11qQhJfh9aPX
Utig6TkVH4zWDfshn5jOhv6u0dIMtHv1fsbJDDZYtPbwjKIbAx4X77jBBpHq
huzTQiRk3u2pai1gw/WkhI46YRJetIUdU2lgQ62RormmCAnnevxO7eSw4VC5
bKAz2svzxrVPE2yQ12SnRKLfL4sA12k2nFYU7nuN9nX0Ftn5kw3WYj9O+Ini
eNU/OqnFFHQP1ZbdFsP5L/oLPOIU/L7koLBiOQnh6rBGSY8Cn+KAkg3o3sNP
10oZUNDWGrNpD3qN9m8hgQ0U5Io8dM9DSzZMBncDBQ7xS9M2SJAQJ3e4yNWM
ggdnnxN7VpBwpfCFfcNOCqTyelNi0Msv20tGO1Bw5vncqjy0m3DXQ9qJAndi
jfE0eoTresBdVwoEY6OOxkiSULBAd+/Zi98TaTiSyyKh8xhTSSuIgtZsu9BX
6DiR1dJ1hygwqtvPN432CbrUY36YgmVcaXIb2CSY1ns12YRQ8Dj8h/MrtOrF
PnWDcAqo0IKWKYqEjR3UxD+nKXgbsLLAcCUJd6MqOaFXKZhOPBTtjq7d/kAg
LQPfV/LEKRq9lFuOfJiJ813w4WtBJwTw3/qahet5+r67swwJCoE6NqxbFAxn
G4selSVB/gOv3nQ+BQINl4Yy0CxdM63euxQoDfbX1KGb+V8LNBdQEKh89iAh
R0LU3OmtyYUUzFS0NqSinX/c52UUU7Cobe+RUnkSjJjlihYVFMjOlmz79J8r
YssZlRRskiRW/UVXE74rq9Ax7nffmK4iQbA+9JDMIxz/+4+179Ftt3NkntZQ
oLzEbNE8+s6OD57etRRYa6S3U6tJuLB9TxhPHQWJoUbRXui2ijJF3ccUSPDG
dk2j2x+tOh7yhAJ9xY4iiTUkXFR67fUX7bx1XZwhmrXNWSa6gYLMxFfa0Wi1
S/tFo59SIC8tES+qgPufy9vj2kiBqfH+fTroK7/NPFrQ3l5Vhs5oqa2aJTpN
eL7y3Ieuo92twtsZzylQ1b1jrK5IQsQf++kjzbgeVJCcI3rXG47kO/TbRXqM
E2h29roopRYKDjc3NrxABxnySLSiNxfG355G9yfs3bTyBQXiyQ6xrLV4HuYG
7/uiy90GzXzRB5KmrCfQcSaFivHo6EzTEyovKXBROEKWovv2OUz4opUEYaQL
Pd8jciML/WeCr4WxjoRF3h7JrehX71/lr0Mr1as2cr+iIKsy5bwtOnVVgIEy
Oihrt38oeoeiAMcebXxqjXUWOrJ17ksoWnQ/R+UZ2iJpzfJ09LdtpUvG0OMb
z50tQT/UiJgQW09CjywbXqFjJLa8NUBf/vpC8xt612+hoj3otitpvj/QCl/e
J51BR7w40s39moL5p5mHC9EP9u5LEkA35+2zb0c/LnU7LYK+Gq+s/Qe9KXb3
IzG0/78z4quUSOD6460uiqadqmct0Yz7RwYE0UvomA+H0EnXkjoZ6F65beVp
aHWNqqVzOP4DfvH0WnQ6PRszgI763nV0AP2Q29KwFb3j7S1nIWUSCuVr1CrR
q0r9DLXQr0tdvK+hZ65oUS7oFF3lrgj0sxO/f0eiE8/TSS7oVK+G7jvoo3yZ
Z7TQvhbna16jRT0cakm0vop91ixatua4TifuT9fcN4/NKiTUKe0a+Add0JVv
fBB9J011pT76xOPDckno/NonaQt4HmTPMfo+oz9EhlkHo6cCWxr4VLHenr0+
q4R+Yn/ptjJakGVK9OJ52yct73MM3dHE02iI1mGMmt1A+7MuEH14XvmHihSf
o494Pzh3Bp37wGRkuRoJNh5ODs/wvIelMFuM0PLWa7Ld0VuPteZ7oS1KZdfP
YH2Mbfb0L0LPzpkS4uiateusP6IvOT5xzsJ6iheeUlmkju83XjGxGq3eETmx
Db1aj7tP4RkFIQevHx5Gi7msm/2vfrlnYquENEhouqu0Oxh9LsKPoYFe0OeO
Haqn4Hqi7qUwdBd/p/hTzIOWspdFApo4/6U3DR0wP3YaF/9SRVv7Rv6vGPOl
tznNxB696/bjd4Lome69rRno1e83/VuCebSS59ekshb2s5SLLz9jnuVe+Kxv
h07Qfmgph9aSeBoZgn5rv+TcnnIKLNYliNSiY7i8drWXYn3brFG30Sbh5vVi
6XTMx8YMu6B/dEiQEWosisZ8tV2jV56C3pmkHZ2E+dtVKLWoCl2dspV9LY+C
yfqheIYu1p9v4c38OxSwhyMKk9HlnU7S2Zjfgdr5nFI97JecBr5x7AfzNQk6
nWhf+fCjzVcoOGUeEsGlT8I3OaeKG+kUpLsYC5ujW44TNyxS8TxEflD+iE4N
EZU7lIT5+Yrhv2CA9weZfh2FM/h9ku61coYk8B86WFUUi+vtVSliiaa1m2MM
YijgWggqTUN75ezg0FEUDCn0cOlsIOHMUKk0G/tXRWR5UpARCdml7lGygRS4
avuX9wMJk7GBLQfssB5ONjGFNpLwpSbf6KQN5mOLvJsWunf9cWaSNeav5yfu
aLTksbbSPEvsB/FmW2WM8f5SvDnwvgmOPyzb42yC+bnbTUBYA/c/o53xZjPm
g2dNqoQw9odRv2uz6LTPC78aBCiINGDoS5mSYHC7aTqApMCzQzXgANq88lhu
OQ/m/7K4Dp4tmM8z4UbyC2zIOWdYoG9Gwtll4S93DrIhPyx7100LEvya38zp
VLOhxPFAbog19lv/4ngZdzb2Aen8K+gfW5Ol1F3ZQG5svVuDji2XGqGd2OCq
YHCfbzsJZN8nE7sdbGDMkmUp6KunuYQczdhgeym3odQG5//iYnuvChu+vxz6
PGtHQiVj1++xBRbIb/JZfsSBBFeKb0blIguO/0yQu/afhWzZFmdZ0F5QqfIU
rZCRaOMRy4K4FcJmYo4kQGLqWEwECzhjD48Uog3m90neC2BBRdrij4NO+Lx6
eOhhaxZs52RedXQlYW7UMbZLgAVh6e9kDPaQ8IfHTS08QhLWS+dP7TqA9xUP
VkmBywrwTjBpMz2M/V3WU1BGVgLiAixt58JJyKnPK9V6IA78x6pSFseScPy4
jf86s2XgP51x9E081q9ZeIrOA1FQuTIo/zMN93+L5/1aVREIVZnumryO9+nh
XRv2lSyBfJVAzXv5mJ89E2m+xkKg52Zv2/CQBM+M8z4+Hky4N5crmFlDwuY/
v4qWe/DDvRN17WZNJIQan1usn8wDhM5GX6u3mEdXeUy1ZBbDVke1VLFO7K/L
9/AP53DB0J24C1p92H+epFzgWvKbXjJ4M0lhDO8DqQN5JfCTlk5U0e6exf6T
JxI3Hv2DPrNfLus7FxPetrlWRHpP0uLGTWLii5iQ3n2odq/TJH19RcAZI/SW
yQfZVlaTdEVjxaGL6KSlHuMaGpP06GrbzWrcTJDQaky1/TtBb/t6YvjwYibs
lfX+8j51ghZz6dZc4GHCiuB/PSZej9NZGtF35HmZIH+iVzz/yTi9nrlWygod
VnQy1K9snN5c8S9fJvrYMhVgZI3TwRKCH2k+JlyNSM05GTBOd7QZRETxM6GW
6XqsQnic3pffO5WHnjhlaNazeJyejIr1aUPvDq20XjbOoUmNVptVBH5fYo7O
cC2HNkzYL/8MrcSJ3K7myaEbfZakcdDCNz88+2rJoXdAiaAEyQSXBemtNzQ5
tB9n0awP2tGS4W/Oy6Hnn+YcSEA/T/nIUOWM0TGZVp/L0TEGy67IfRijRYKn
dnxBj3w3V5KvG6MzrdKaSCYT3G4zy9Ryx+j/A9POVUo=
           "]]},
         Annotation[#, "Charting`Private`Tag$26221#1"]& ]}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{
       FormBox[
        TagBox["\"f(M,m)\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Probability\"", HoldForm], TraditionalForm]},
     AxesOrigin->{3.1348000000000003`, 0},
     BaseStyle->{FontFamily -> "Arial"},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotLabel->FormBox["\"Gaussian Fit to f(M,m) Values\"", TraditionalForm],
     
     PlotRange->{{3.14, 3.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.936931510598386*^9, 3.936931530010016*^9}, 
   3.936931613541058*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"f4fe685d-4dcb-4cc4-988c-796bbeff7e0b"],

Cell[BoxData[
 FormBox["\<\"GaussianFit_Histogram.pdf\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{{3.936931510598386*^9, 3.936931530010016*^9}, 
   3.9369316139983997`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"9cd5f8a3-b8c3-4862-b741-767320887a4d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "a", " ", "general", " ", "Monte", " ", "Carlo", " ", 
    "function", " ", "with", " ", "uncertainty", " ", "propagation"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"MonteCarloUncertaintyPropagation", "[", 
     RowBox[{"f_", ",", "params_List", ",", 
      RowBox[{"iterations_", ":", "100"}], ",", 
      RowBox[{"outputFileName_", ":", "\"\<HistogramFit.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "randomParams", ",", "results", ",", "fit", ",", "histogramPlot"}], 
       "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Generate", " ", "random", " ", "values", " ", "for", " ", "each", " ",
         "parameter", " ", "based", " ", "on", " ", "their", " ", 
        "uncertainty", " ", "ranges"}], "*)"}], 
      RowBox[{
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            "iterations"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"param", ",", "params"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "function", " ", "for", " ", "each", 
         " ", "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f", "@@", 
           RowBox[{"(", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal",
          " ", 
         RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
          "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", 
          " ", "publication"}], "-", 
         RowBox[{"quality", " ", "styling"}]}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{"results", ",", "10", ",", "\"\<PDF\>\"", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Gaussian Fit to Function Values\>\"", ",", "Bold", ",", 
               "16"}], "]"}]}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Function Value\>\"", ",", "Bold", ",", "14"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], 
                "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "results", "]"}], ",", 
              RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"outputFileName", ",", "histogramPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "fitted", " ", "parameters", " ", "and", 
         " ", "the", " ", "plot", " ", "object"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{"fit", ",", "histogramPlot"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Example", " ", "usage"}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "your", " ", "specific", " ", "function"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "parameters", " ", "with", " ", 
     "uncertainties", " ", "as", " ", 
     RowBox[{"{", 
      RowBox[{"value", ",", "uncertainty"}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"100", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50", ",", "1"}], "}"}]}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"100", "\[PlusMinus]", "1"}]}], ",", 
     RowBox[{"m", "=", 
      RowBox[{"50", "\[PlusMinus]", "1"}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MonteCarloUncertaintyPropagation", "[", 
    RowBox[{
    "f", ",", "params", ",", "100", ",", "\"\<GeneralHistogramFit.pdf\>\""}], 
    "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369318097923098`*^9, 
  3.93693180979702*^9}},ExpressionUUID->"8c2f56b0-a262-4507-821b-\
b7ff97f555bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generic Function", "Section",
 CellChangeTimes->{{3.936932060282908*^9, 
  3.936932065780878*^9}},ExpressionUUID->"d0882d2e-74d6-4dfc-800c-\
6841f5c7c248"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "a", " ", "general", " ", "Monte", " ", "Carlo", " ", 
    "function", " ", "with", " ", "uncertainty", " ", "propagation"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"MonteCarloUncertaintyPropagation", "[", 
     RowBox[{"f_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "100"}], ",", 
      RowBox[{"outputFileName_", ":", "\"\<HistogramFit.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramRanges", ",", "randomParams", ",", "results", 
        ",", "fit", ",", "histogramPlot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Extract", " ", "parameter", " ", "names", " ", "and", " ", "their", 
        " ", "uncertainty", " ", "ranges"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"paramRanges", "=", 
        RowBox[{"Values", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "values", " ", "for", " ", "each", 
         " ", "parameter", " ", "based", " ", "on", " ", "their", " ", 
         "uncertainty", " ", "ranges"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            "iterations"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"param", ",", "paramRanges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "function", " ", "for", " ", "each", 
         " ", "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f", "@@", 
           RowBox[{"(", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal",
          " ", 
         RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
          "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", 
          " ", "publication"}], "-", 
         RowBox[{"quality", " ", "styling"}]}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{"results", ",", "10", ",", "\"\<PDF\>\"", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Gaussian Fit to Function Values\>\"", ",", "Bold", ",", 
               "16"}], "]"}]}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Function Value\>\"", ",", "Bold", ",", "14"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], 
                "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "results", "]"}], ",", 
              RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"outputFileName", ",", "histogramPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "fitted", " ", "parameters", " ", "and", 
         " ", "the", " ", "plot", " ", "object"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{"fit", ",", "histogramPlot"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Example", " ", "usage"}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "your", " ", "specific", " ", "function"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Define", " ", "the", " ", "parameters", " ", "with", " ", "names"}], 
     ",", "values", ",", 
     RowBox[{
     "and", " ", "uncertainties", " ", "using", " ", "an", " ", 
      "Association"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<M\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"100", ",", "1"}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"M", "=", 
         RowBox[{"100", "\[PlusMinus]", "1"}]}], "*)"}], 
       RowBox[{"\"\<m\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"50", ",", "1"}], "}"}]}]}], "   ", 
      RowBox[{"(*", 
       RowBox[{"m", "=", 
        RowBox[{"50", "\[PlusMinus]", "1"}]}], "*)"}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MonteCarloUncertaintyPropagation", "[", 
    RowBox[{
    "f", ",", "params", ",", "100", ",", "\"\<GeneralHistogramFit.pdf\>\""}], 
    "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.9369320687033653`*^9, 3.9369320687064857`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"3c2bf1d4-d161-491d-83f8-4118f4cd47ca"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "3.2708484647528575`"}], ",", 
      RowBox[{"\[Sigma]", "\[Rule]", "0.05031401481363061`"}]}], "}"}], ",", 
    GraphicsBox[{{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[{Opacity[0.602], 
        Thickness[Small]}], {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[{Opacity[0.602], 
         Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.16, 0}, {3.18, 1.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{21.984693877550853`, 67.42346938775518}, {
               114.45237067592271`, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.5]& ,
            TagBoxNote->"1.5"],
           StyleBox["1.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.18, 0}, {3.2, 1.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{66.92346938775518, 112.36224489795859`}, {
               114.45237067592271`, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.5]& ,
            TagBoxNote->"1.5"],
           StyleBox["1.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.2, 0}, {3.22, 4.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{111.86224489795859`, 157.3010204081629}, {
               4.514845075080473, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.5]& ,
            TagBoxNote->"4.5"],
           StyleBox["4.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.22, 0}, {3.24, 9.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{156.8010204081629, 
               202.23979591836724`}, {-160.39144332618287`, 
               169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.24, 0}, {3.26, 4.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{201.73979591836724`, 247.17857142857065`}, {
               4.514845075080473, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4.5]& ,
            TagBoxNote->"4.5"],
           StyleBox["4.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[4.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.26, 0}, {3.28, 9.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{246.67857142857065`, 
               292.117346938775}, {-160.39144332618287`, 169.9211334763438}}],
             
             "DelayedMouseEffectStyle"],
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.28, 0}, {3.3, 5.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{291.617346938775, 
               337.0561224489793}, {-32.13099679186692, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 5.5]& ,
            TagBoxNote->"5.5"],
           StyleBox["5.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.3, 0}, {3.32, 6.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{336.5561224489793, 
               381.9948979591827}, {-68.77683865881434, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 6.5]& ,
            TagBoxNote->"6.5"],
           StyleBox["6.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[6.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.32, 0}, {3.34, 3.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{381.4948979591827, 426.93367346938703`}, {
               41.160686942027894`, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3.5]& ,
            TagBoxNote->"3.5"],
           StyleBox["3.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[3.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.34, 0}, {3.36, 1.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{426.43367346938703`, 471.87244897959135`}, {
               114.45237067592271`, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.5]& ,
            TagBoxNote->"1.5"],
           StyleBox["1.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.36, 0}, {3.38, 1.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{471.37244897959135`, 516.8112244897957}, {
               114.45237067592271`, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.5]& ,
            TagBoxNote->"1.5"],
           StyleBox["1.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.38, 0}, {3.4, 1.5}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{516.3112244897957, 561.75}, {
               114.45237067592271`, 169.9211334763438}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1.5]& ,
            TagBoxNote->"1.5"],
           StyleBox["1.5`", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1.5, {FontFamily -> "Times"}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
          LineBox[CompressedData["
1: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

           "]]},
         Annotation[#, "Charting`Private`Tag$31669#1"]& ]}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{False, False},
     AxesLabel->{
       FormBox[
        TagBox[
         StyleBox["\"Function Value\"", Bold, 14, StripOnInput -> False], 
         HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"Probability\"", Bold, 14, StripOnInput -> False], 
         HoldForm], TraditionalForm]},
     AxesOrigin->{3.1552000000000002`, 0},
     BaseStyle->{FontFamily -> "Arial"},
     Frame->True,
     FrameLabel->{{None, None}, {None, None}},
     FrameStyle->Directive[
       GrayLevel[0], 14],
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{{0}, {0}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->Large,
     LabelStyle->Directive[
       GrayLevel[0], 14],
     PlotLabel->FormBox[
       StyleBox[
       "\"Gaussian Fit to Function Values\"", Bold, 16, StripOnInput -> 
        False], TraditionalForm],
     PlotRange->{{3.16, 3.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.936932101623294*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"0105daa4-1974-4c2e-b0e7-d52e26b14eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Histogram"}]], "Input",
 CellChangeTimes->{{3.9369322077598257`*^9, 3.9369322105711527`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"3f2307c8-07ae-4204-a6f0-1623484496b2"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   StyleBox[
    FrameBox[
     DynamicModuleBox[{System`InformationDump`open$$ = False, 
      System`InformationDump`mouseOver$$ = False}, 
      PaneSelectorBox[{True->
       TagBox[GridBox[{
          {
           ItemBox[
            PaneBox[
             StyleBox["\<\" Symbol\"\>", "InformationTitleText",
              StripOnInput->False,
              BaseStyle -> None],
             FrameMargins->{{4, 0}, {-1, 1}}],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False], 
           ItemBox[
            PaneBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "InformationHelpIcon"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                 CurrentValue["MouseOver"]]],
               Appearance->None,
               BaseStyle->"Link",
               
               ButtonData->
                "http://reference.wolfram.com/language/ref/Histogram.html",
               
               ButtonNote->
                "http://reference.wolfram.com/language/ref/Histogram.html"],
              "\"http://reference.wolfram.com/language/ref/Histogram.html\""],
             
             FrameMargins->{{0, 4}, {0, 2}}],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False]},
          {
           ItemBox[
            PaneBox[
             
             StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Histogram\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a histogram \
of the values \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"Histogram\\\", \\\
\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"bspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) plots \
a histogram with bin width specification \\!\\(\\*StyleBox[\\\"bspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Histogram\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"bspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"hspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) plots a histogram with \
bin heights computed according to the specification \
\\!\\(\\*StyleBox[\\\"hspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Histogram\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) plots \
histograms for multiple datasets \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
              StripOnInput->False,
              LineSpacing->{1.5, 1.5, 3.}],
             FrameMargins->{{10, 10}, {8, 10}}],
            BaseStyle->"InformationUsageSubtitleBackground",
            StripOnInput->False], 
           ItemBox["\<\"\"\>",
            BaseStyle->"InformationUsageSubtitleBackground",
            StripOnInput->False]},
          {
           PaneBox[GridBox[{
              {
               
               DynamicModuleBox[{System`InformationDump`open$$ = {
                False, False, False, False, False, False}}, 
                StyleBox[GridBox[{
                   {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Histogram.\
html"], None}, "http://reference.wolfram.com/language/ref/Histogram.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                   {
                    PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                    PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "True"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BarOrigin", "\[Rule]", "Bottom"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ChartBaseStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "ChartElementFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ChartElements", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ChartLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ChartLayout", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ChartLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ChartStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"LegendAppearance", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{
                    "PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "54", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "54", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                   {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                   {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Histogram\"\>"}
                  },
                  AutoDelete->False,
                  GridBoxAlignment->{"Columns" -> {Right, Left}},
                  GridBoxDividers->None,
                  GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                  GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                 StripOnInput->False],
                DynamicModuleValues:>{}]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.5599999999999999]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[3.6]}, 
                 Offset[0.2]}}],
            FrameMargins->{{6, 6}, {6, 3}}], ""},
          {
           ItemBox[
            TagBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "UpPointerOpener"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
               System`InformationDump`mouseOver$$]],
              Alignment->Left,
              Appearance->{"Default" -> None},
              
              ButtonFunction:>FEPrivate`Set[
               System`InformationDump`open$$, False],
              Evaluator->Automatic,
              FrameMargins->{{9, 0}, {0, 0}},
              ImageMargins->0,
              ImageSize->Full,
              Method->"Preemptive"],
             
             EventHandlerTag[{
              "MouseEntered" :> 
               FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
               "MouseExited" :> 
               FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
               Method -> "Preemptive", PassEventsDown -> Automatic, 
               PassEventsUp -> True}]],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         FrameStyle->Directive[
           GrayLevel[0.8], 
           Thickness[Tiny]],
         GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
         
         GridBoxDividers->{
          "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"], False->
       TagBox[GridBox[{
          {
           ItemBox[
            PaneBox[
             StyleBox["\<\" Symbol\"\>", "InformationTitleText",
              StripOnInput->False],
             FrameMargins->{{4, 0}, {-1, 1}}],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False], 
           ItemBox[
            PaneBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "InformationHelpIcon"],
                 ImageSizeCache->{13., {4., 9.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "InformationHelpIconHot"],
                 ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                 CurrentValue["MouseOver"]]],
               Appearance->None,
               BaseStyle->"Link",
               
               ButtonData->
                "http://reference.wolfram.com/language/ref/Histogram.html",
               
               ButtonNote->
                "http://reference.wolfram.com/language/ref/Histogram.html"],
              "\"http://reference.wolfram.com/language/ref/Histogram.html\""],
             
             FrameMargins->{{0, 4}, {0, 2}}],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False]},
          {
           ItemBox[
            PaneBox[
             
             StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Histogram\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a histogram \
of the values \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"Histogram\\\", \\\
\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"bspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) plots \
a histogram with bin width specification \\!\\(\\*StyleBox[\\\"bspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Histogram\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"bspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"hspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) plots a histogram with \
bin heights computed according to the specification \
\\!\\(\\*StyleBox[\\\"hspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Histogram\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) plots \
histograms for multiple datasets \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
              StripOnInput->False,
              LineSpacing->{1.5, 1.5, 3.}],
             FrameMargins->{{10, 10}, {8, 10}}],
            BaseStyle->"InformationUsageSubtitleBackground",
            StripOnInput->False], 
           ItemBox["\<\"\"\>",
            BaseStyle->"InformationUsageSubtitleBackground",
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "DownPointerOpener"],
                ImageSizeCache->{10., {2., 8.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "DownPointerOpenerHot"],
                ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
               System`InformationDump`mouseOver$$]],
              Alignment->Left,
              Appearance->{"Default" -> None},
              
              ButtonFunction:>FEPrivate`Set[
               System`InformationDump`open$$, True],
              Evaluator->Automatic,
              FrameMargins->{{9, 0}, {0, 0}},
              ImageMargins->0,
              ImageSize->Full,
              Method->"Preemptive"],
             
             EventHandlerTag[{
              "MouseEntered" :> 
               FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
               "MouseExited" :> 
               FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
               Method -> "Preemptive", PassEventsDown -> Automatic, 
               PassEventsUp -> True}]],
            BaseStyle->"InformationTitleBackground",
            StripOnInput->False], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         FrameStyle->Directive[
           GrayLevel[0.8], 
           Thickness[Tiny]],
         GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
         
         GridBoxDividers->{
          "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}, Dynamic[System`InformationDump`open$$],
       BaselinePosition->Baseline,
       FrameMargins->0,
       ImageSize->Automatic],
      DynamicModuleValues:>{}],
     BaseStyle->"InformationGridFrame",
     StripOnInput->False], "InformationGridPlain",
    StripOnInput->False],
   InformationData[<|
    "ObjectType" -> "Symbol", "Usage" -> 
     "\!\(\*RowBox[{\"Histogram\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots a histogram of \
the values \!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"Histogram\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"bspec\", \"TI\
\"]}], \"]\"}]\) plots a histogram with bin width specification \
\!\(\*StyleBox[\"bspec\", \"TI\"]\).\n\!\(\*RowBox[{\"Histogram\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", StyleBox[\"bspec\", \"TI\"], \",\", StyleBox[\"hspec\", \
\"TI\"]}], \"]\"}]\) plots a histogram with bin heights computed according to \
the specification \!\(\*StyleBox[\"hspec\", \"TI\"]\).\n\
\!\(\*RowBox[{\"Histogram\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"]}], \"]\"}]\) plots histograms for multiple datasets \!\
\(\*SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"i\", \"TI\"]]\).", 
     "Documentation" -> <|
      "Web" -> "http://reference.wolfram.com/language/ref/Histogram.html"|>, 
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
     "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
     "FormatValues" -> None, 
     "Options" -> {
      AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> True,
        AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
       Background -> None, BarOrigin -> Bottom, BaselinePosition -> Automatic,
        BaseStyle -> {}, ChartBaseStyle -> Automatic, ChartElementFunction -> 
       Automatic, ChartElements -> Automatic, ChartLabels -> None, 
       ChartLayout -> Automatic, ChartLegends -> None, ChartStyle -> 
       Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, 
       ColorOutput -> Automatic, ContentSelectable -> Automatic, 
       CoordinatesToolOptions -> Automatic, 
       DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> 
       TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, 
       FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, 
       GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
       ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelingFunction -> 
       Automatic, LabelStyle -> {}, LegendAppearance -> Automatic, Method -> 
       Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, 
       PlotRange -> Automatic, PlotRangeClipping -> False, PlotRangePadding -> 
       Automatic, PlotRegion -> Automatic, PlotTheme :> $PlotTheme, 
       PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, 
       ScalingFunctions -> None, TargetUnits -> Automatic, Ticks -> Automatic,
        TicksStyle -> {}}, "Attributes" -> {Protected, ReadProtected}, 
     "FullName" -> "System`Histogram"|>, False]], TraditionalForm]], "Output",\

 CellChangeTimes->{3.936932211258339*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"5c00c1b7-1543-404d-b202-00b4e747afa3"]
}, Open  ]],

Cell["THIS IS FINAL FORM: USE THIS ONE:", "Text",
 CellChangeTimes->{{3.936934207653944*^9, 
  3.936934218442257*^9}},ExpressionUUID->"1cefcfb4-2f4a-430a-b02e-\
968191d808f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Define", " ", "a", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function", " ", "with", " ", "user"}], "-", 
    RowBox[{
    "defined", " ", "iterations", " ", "and", " ", "bin", " ", "size"}]}], 
   "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"MonteCarloUncertaintyPropagation", "[", 
     RowBox[{"f_", ",", "params_Association", ",", 
      RowBox[{"iterations_", ":", "100"}], ",", 
      RowBox[{"binSize_", ":", "10"}], ",", 
      RowBox[{"outputFileName_", ":", "\"\<HistogramFit.pdf\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "paramNames", ",", "paramRanges", ",", "randomParams", ",", "results", 
        ",", "fit", ",", "histogramPlot"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Extract", " ", "parameter", " ", "names", " ", "and", " ", "their", 
        " ", "uncertainty", " ", "ranges"}], "*)"}], 
      RowBox[{
       RowBox[{"paramNames", "=", 
        RowBox[{"Keys", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"paramRanges", "=", 
        RowBox[{"Values", "[", "params", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Generate", " ", "random", " ", "values", " ", "for", " ", "each", 
         " ", "parameter", " ", "based", " ", "on", " ", "their", " ", 
         "uncertainty", " ", "ranges"}], "*)"}], 
       RowBox[{"randomParams", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "-", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"param", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"param", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            "iterations"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"param", ",", "paramRanges"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "function", " ", "for", " ", "each", 
         " ", "set", " ", "of", " ", "random", " ", "parameters"}], "*)"}], 
       RowBox[{"results", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f", "@@", 
           RowBox[{"(", 
            RowBox[{"randomParams", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "i"}], "]"}], "]"}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Fit", " ", "the", " ", "results", " ", "to", " ", "a", " ", "normal",
          " ", 
         RowBox[{"(", "Gaussian", ")"}], " ", "distribution"}], "*)"}], 
       RowBox[{"fit", "=", 
        RowBox[{"FindDistributionParameters", "[", 
         RowBox[{"results", ",", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Plot", " ", "the", " ", "histogram", " ", "with", " ", "a", " ", 
          "Gaussian", " ", "fit", " ", "overlay", " ", "and", " ", "apply", 
          " ", "publication"}], "-", 
         RowBox[{"quality", " ", "styling"}]}], "*)"}], 
       RowBox[{"histogramPlot", "=", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Histogram", "[", 
           RowBox[{"results", ",", "binSize", ",", "\"\<PDF\>\"", ",", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Gaussian Fit to Function Values\>\"", ",", "Bold", ",", 
               "16"}], "]"}]}], ",", 
            RowBox[{"AxesLabel", "->", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Function Value\>\"", ",", "Bold", ",", "14"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Probability\>\"", ",", "Bold", ",", "14"}], 
                "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
            RowBox[{"ChartStyle", "->", 
             RowBox[{"ColorData", "[", 
              RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", 
               RowBox[{
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"fit", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ",", "x"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Min", "[", "results", "]"}], ",", 
              RowBox[{"Max", "[", "results", "]"}]}], "}"}], ",", 
            RowBox[{"PlotStyle", "->", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Frame", "->", "True"}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"LabelStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "14"}], "]"}]}], ",", 
          RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Export", " ", "the", " ", "plot", " ", "to", " ", "a", " ", "PDF", 
         " ", "file"}], "*)"}], 
       RowBox[{"Export", "[", 
        RowBox[{"outputFileName", ",", "histogramPlot", ",", "\"\<PDF\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "fitted", " ", "parameters", " ", "and", 
         " ", "the", " ", "plot", " ", "object"}], "*)"}], 
       RowBox[{"{", 
        RowBox[{"fit", ",", "histogramPlot"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Example", " ", "usage"}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "your", " ", "specific", " ", "function"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"M_", ",", "m_"}], "]"}], ":=", 
    RowBox[{"g", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "-", "m"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"M", "+", "m"}], ")"}]}]}]}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Define", " ", "the", " ", "parameters", " ", "with", " ", "names"}], 
     ",", "values", ",", 
     RowBox[{
     "and", " ", "uncertainties", " ", "using", " ", "an", " ", 
      "Association"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<M\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"100", ",", "1"}], "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"M", "=", 
         RowBox[{"100", "\[PlusMinus]", "1"}]}], "*)"}], 
       RowBox[{"\"\<m\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"50", ",", "1"}], "}"}]}]}], "   ", 
      RowBox[{"(*", 
       RowBox[{"m", "=", 
        RowBox[{"50", "\[PlusMinus]", "1"}]}], "*)"}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Call", " ", "the", " ", "general", " ", "Monte", " ", "Carlo", " ", 
     "function", " ", "with", " ", "optional", " ", "iterations", " ", "and", 
     " ", "bin", " ", "size"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"MonteCarloUncertaintyPropagation", "[", 
    RowBox[{
    "f", ",", "params", ",", "500", ",", "20", ",", 
     "\"\<CustomHistogramFit.pdf\>\""}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.936932375075263*^9, 3.9369323750795937`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"05fd9704-2e59-4b87-9e2a-0d83e5c54ce8"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "\[Rule]", "3.2627601902927417`"}], ",", 
      RowBox[{"\[Sigma]", "\[Rule]", "0.05684275943773512`"}]}], "}"}], ",", 
    GraphicsBox[{{
       {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[{Opacity[
        0.49699999999999994`], Thickness[Small]}], {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[{Opacity[
         0.49699999999999994`], Thickness[Small]}], 
         RectangleBox[{3.13, 0}, {3.14, 0.2},
          RoundingRadius->0], RectangleBox[{3.14, 0}, {3.15, 1.},
          RoundingRadius->0], RectangleBox[{3.15, 0}, {3.16, 1.2},
          RoundingRadius->0], RectangleBox[{3.16, 0}, {3.17, 2.4},
          RoundingRadius->0], RectangleBox[{3.17, 0}, {3.18, 3.8},
          RoundingRadius->0], RectangleBox[{3.18, 0}, {3.19, 2.4},
          RoundingRadius->0], RectangleBox[{3.19, 0}, {3.2, 3.2},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.21, 7.},
          RoundingRadius->0], RectangleBox[{3.21, 0}, {3.22, 5.},
          RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 6.6},
          RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 4.8},
          RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 5.4},
          RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 4.6},
          RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 5.},
          RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 6.2},
          RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 7.6},
          RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 5.2},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 4.4},
          RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 5.6},
          RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 3.4},
          RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 5.},
          RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 3.2},
          RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 2.8},
          RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 2.8},
          RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 1.},
          RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 0.2},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
          LineBox[CompressedData["
1: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
lTDp3Mn8D26GZmI=
           "]]},
         Annotation[#, "Charting`Private`Tag$33661#1"]& ]}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{False, False},
     AxesLabel->{
       FormBox[
        TagBox[
         StyleBox["\"Function Value\"", Bold, 14, StripOnInput -> False], 
         HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         StyleBox["\"Probability\"", Bold, 14, StripOnInput -> False], 
         HoldForm], TraditionalForm]},
     AxesOrigin->{3.1246, 0},
     BaseStyle->{FontFamily -> "Arial"},
     Frame->True,
     FrameLabel->{{None, None}, {None, None}},
     FrameStyle->Directive[
       GrayLevel[0], 14],
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{{0}, {0}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->Large,
     LabelStyle->Directive[
       GrayLevel[0], 14],
     PlotLabel->FormBox[
       StyleBox[
       "\"Gaussian Fit to Function Values\"", Bold, 16, StripOnInput -> 
        False], TraditionalForm],
     PlotRange->{{3.13, 3.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.936932388479163*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"6b33c5ea-185d-4fee-954e-955966278133"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<monte carlo\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.93693480111023*^9, 3.936934814283499*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"5ddbb3db-63e9-4c5d-a25b-afb18773df7f"],

Cell[BoxData[
 FormBox[
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
     "InitialData" -> {<|
        "Name" -> "MonteCarloSample", "ResourceType" -> "Function", 
         "ResourceObject" -> 
         ResourceObject[<|
           "Name" -> "MonteCarloSample", "ShortName" -> "MonteCarloSample", 
            "UUID" -> "ab096f62-5861-48b2-8f79-9895a37f1701", "ResourceType" -> 
            "Function", "Version" -> "1.0.0", "Description" -> 
            "Sample from a probability density function using the Markov \
chain Monte Carlo (MCMC) method", "RepositoryLocation" -> 
            URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
            "SymbolName" -> 
            "FunctionRepository`$97b0c2b14f924a0f8d338691ecfda3da`\
MonteCarloSample"|>], "Description" -> 
         "Sample from a probability density function using the Markov chain \
Monte Carlo (MCMC) method", "Location" -> 
         URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
         URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
MonteCarloSample"]|>, <|
        "Name" -> "MetropolisHastingsSequence", "ResourceType" -> "Function", 
         "ResourceObject" -> 
         ResourceObject[<|
           "Name" -> "MetropolisHastingsSequence", "ShortName" -> 
            "MetropolisHastingsSequence", "UUID" -> 
            "189a6b3c-6587-45e1-b843-d946422b03d1", "ResourceType" -> 
            "Function", "Version" -> "2.0.0", "Description" -> 
            "Generate a sequence of values using the \
Metropolis\[Dash]Hastings Markov chain Monte Carlo method", 
            "RepositoryLocation" -> 
            URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
            "SymbolName" -> 
            "FunctionRepository`$7ae9eaadf7244203b97a51e3c38690f1`\
MetropolisHastingsSequence"|>], "Description" -> 
         "Generate a sequence of values using the Metropolis\[Dash]Hastings \
Markov chain Monte Carlo method", "Location" -> 
         URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
         URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
MetropolisHastingsSequence"]|>, <|
        "Name" -> "KroneckerPoint", "ResourceType" -> "Function", 
         "ResourceObject" -> 
         ResourceObject[<|
           "Name" -> "KroneckerPoint", "ShortName" -> "KroneckerPoint", 
            "UUID" -> "57fe35a9-cd2a-4108-8781-ab5a79d88c84", "ResourceType" -> 
            "Function", "Version" -> "1.0.0", "Description" -> 
            "Get a quasirandom point based on Kronecker sequences", 
            "RepositoryLocation" -> 
            URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
            "SymbolName" -> 
            "FunctionRepository`$d3ccba36f3184ab9bf4281d25720b439`\
KroneckerPoint"|>], "Description" -> 
         "Get a quasirandom point based on Kronecker sequences", "Location" -> 
         URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
         URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
KroneckerPoint"]|>, <|
        "Name" -> "RadicalInverse", "ResourceType" -> "Function", 
         "ResourceObject" -> 
         ResourceObject[<|
           "Name" -> "RadicalInverse", "ShortName" -> "RadicalInverse", 
            "UUID" -> "238c8723-47a4-47e1-aa5b-5980d566bfab", "ResourceType" -> 
            "Function", "Version" -> "1.0.0", "Description" -> 
            "Compute the radical inverse of an integer to a given base", 
            "RepositoryLocation" -> 
            URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
            "SymbolName" -> 
            "FunctionRepository`$8659901c4c274b91852465c466d58f7d`\
RadicalInverse"|>], "Description" -> 
         "Compute the radical inverse of an integer to a given base", 
         "Location" -> URL["https://resources.wolframcloud.com"], 
         "DocumentationLink" -> 
         URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
RadicalInverse"]|>, <|
        "Name" -> "FaurePoint", "ResourceType" -> "Function", 
         "ResourceObject" -> 
         ResourceObject[<|
           "Name" -> "FaurePoint", "ShortName" -> "FaurePoint", "UUID" -> 
            "7ea2b207-b9ef-4853-8e3f-f2b512d0ba60", "ResourceType" -> 
            "Function", "Version" -> "1.0.0", "Description" -> 
            "Get a point belonging to the Faure sequence", 
            "RepositoryLocation" -> 
            URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
            "SymbolName" -> 
            "FunctionRepository`$d2b338ad43f24f5cb6203bbad93ec3c8`FaurePoint"|>\
], "Description" -> "Get a point belonging to the Faure sequence", "Location" -> 
         URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
         URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
FaurePoint"]|>}, "AllowEmbedding" -> True, "InitialShape" -> 
      TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
         1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
         1, {All, "Description"} -> 1, {All, "Location"} -> 
         1, {All, "DocumentationLink"} -> 1|>, 
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Name" -> TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
             "ResourceType" -> TypeSystem`PackageScope`AtomShape[84.], 
             "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
             "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
             "Location" -> TypeSystem`PackageScope`AtomShape[60], 
             "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           
           DirectedInfinity[1], 6, {All}]], 5, 
         DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
        TypeSystem`Struct[{
         "Name", "ResourceType", "ResourceObject", "Description", "Location", 
          "DocumentationLink"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["Function"]], 
          TypeSystem`Atom[ResourceObject], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[URL], 
          TypeSystem`Atom[URL]}], 5], "Meta" -> <||>, "RowTarget" -> 20, 
      "ColumnTarget" -> 10, "Shape" -> 
      TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
         1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
         1, {All, "Description"} -> 1, {All, "Location"} -> 
         1, {All, "DocumentationLink"} -> 1|>, 
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Name" -> TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
             "ResourceType" -> TypeSystem`PackageScope`AtomShape[84.], 
             "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
             "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
             "Location" -> TypeSystem`PackageScope`AtomShape[60], 
             "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
           
           DirectedInfinity[1], 6, {All}]], 5, 
         DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
        TypeSystem`Struct[{
         "Name", "ResourceType", "ResourceObject", "Description", "Location", 
          "DocumentationLink"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["Function"]], 
          TypeSystem`Atom[ResourceObject], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[URL], 
          TypeSystem`Atom[URL]}], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
      "DisplayedColumnCount" -> 6, "DataRowCount" -> 5, "DataColumnCount" -> 
      6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
      "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Name", 
                   Style[
                   "Name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Name"}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 All, "Name"}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["ResourceType", 
                   Style[
                   "ResourceType", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ResourceType"}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["ResourceObject", 
                   Style[
                   "ResourceObject", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ResourceObject"}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Description", 
                   Style[
                   "Description", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Description"}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 All, "Description"}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["Location", 
                   Style[
                   "Location", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Location"}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 All, "Location"}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}], 
             Item[
              Pane[
               Annotation[
                EventHandler[
                 MouseAppearance[
                  Mouseover["DocumentationLink", 
                   Style[
                   "DocumentationLink", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                 If[
                   TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "DocumentationLink"}, 1]]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
               ImageSize -> {{1, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
              GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
             Item[
              Pane[
               Annotation["MonteCarloSample", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                  Key["Name"]}, "Item", False], "Mouse"], 
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Function", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                  Key["ResourceType"]}, "Item", False], "Mouse"], 
               ImageSize -> {{84., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes[
                 
                 TemplateBox[{
                  "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                   "\"MonteCarloSample\"", "\"\\\"\"", "\"]\""}, 
                  "RowDefault"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                  Key["ResourceObject"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
               "Sample from a probability density function using the Markov \
chain Monte Carlo (MCMC) method", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                  Key["Description"]}, "Item", False], "Mouse"], 
               ImageSize -> {{560., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink["https://resources.wolframcloud.com", 
                 URL["https://resources.wolframcloud.com"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                  Key["Location"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink[
                "https://resources.wolframcloud.com/FunctionReposit...", 
                 URL[
                 "https://resources.wolframcloud.com/FunctionRepository/\
resources/MonteCarloSample"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                  Key["DocumentationLink"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["MetropolisHastingsSequence", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                  Key["Name"]}, "Item", False], "Mouse"], 
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Function", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                  Key["ResourceType"]}, "Item", False], "Mouse"], 
               ImageSize -> {{84., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes[
                 
                 TemplateBox[{
                  "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                   "\"MetropolisHastingsSequence\"", "\"\\\"\"", "\"]\""}, 
                  "RowDefault"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                  Key["ResourceObject"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
               "Generate a sequence of values using the \
Metropolis\[Dash]Hastings Markov chain Monte Carlo method", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                  Key["Description"]}, "Item", False], "Mouse"], 
               ImageSize -> {{560., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink["https://resources.wolframcloud.com", 
                 URL["https://resources.wolframcloud.com"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                  Key["Location"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink[
                "https://resources.wolframcloud.com/FunctionReposit...", 
                 URL[
                 "https://resources.wolframcloud.com/FunctionRepository/\
resources/MetropolisHastingsSequence"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                  Key["DocumentationLink"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["KroneckerPoint", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                  Key["Name"]}, "Item", False], "Mouse"], 
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Function", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                  Key["ResourceType"]}, "Item", False], "Mouse"], 
               ImageSize -> {{84., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes[
                 
                 TemplateBox[{
                  "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                   "\"KroneckerPoint\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                  Key["ResourceObject"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
               "Get a quasirandom point based on Kronecker sequences", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                  Key["Description"]}, "Item", False], "Mouse"], 
               ImageSize -> {{560., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink["https://resources.wolframcloud.com", 
                 URL["https://resources.wolframcloud.com"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                  Key["Location"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink[
                "https://resources.wolframcloud.com/FunctionReposit...", 
                 URL[
                 "https://resources.wolframcloud.com/FunctionRepository/\
resources/KroneckerPoint"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                  Key["DocumentationLink"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["RadicalInverse", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                  Key["Name"]}, "Item", False], "Mouse"], 
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Function", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                  Key["ResourceType"]}, "Item", False], "Mouse"], 
               ImageSize -> {{84., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes[
                 
                 TemplateBox[{
                  "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                   "\"RadicalInverse\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                  Key["ResourceObject"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
               "Compute the radical inverse of an integer to a given base", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                  Key["Description"]}, "Item", False], "Mouse"], 
               ImageSize -> {{560., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink["https://resources.wolframcloud.com", 
                 URL["https://resources.wolframcloud.com"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                  Key["Location"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink[
                "https://resources.wolframcloud.com/FunctionReposit...", 
                 URL[
                 "https://resources.wolframcloud.com/FunctionRepository/\
resources/RadicalInverse"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                  Key["DocumentationLink"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation["FaurePoint", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                  Key["Name"]}, "Item", False], "Mouse"], 
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Function", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                  Key["ResourceType"]}, "Item", False], "Mouse"], 
               ImageSize -> {{84., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                RawBoxes[
                 
                 TemplateBox[{
                  "\"ResourceObject\"", "\"[\"", "\"\\\"\"", "\"FaurePoint\"",
                    "\"\\\"\"", "\"]\""}, "RowDefault"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                  Key["ResourceObject"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation["Get a point belonging to the Faure sequence", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                  Key["Description"]}, "Item", False], "Mouse"], 
               ImageSize -> {{560., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink["https://resources.wolframcloud.com", 
                 URL["https://resources.wolframcloud.com"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                  Key["Location"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}], 
             Item[
              Pane[
               Annotation[
                Hyperlink[
                "https://resources.wolframcloud.com/FunctionReposit...", 
                 URL[
                 "https://resources.wolframcloud.com/FunctionRepository/\
resources/FaurePoint"]], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                  Key["DocumentationLink"]}, "Item", False], "Mouse"], 
               ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
             "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
           Spacings -> {0, 0}, Alignment -> Left, 
           BaseStyle -> {
            FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
             Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
          NumberMarks -> False, ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       
       ImageSizeCache->{1808., {87.4150390625, 93.5849609375}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{1808., {87.4150390625, 93.5849609375}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
      CreateUUID[]),
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], TraditionalForm]], "Output",
 CellChangeTimes->{3.936934891189624*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"b098b91c-f404-4d25-80f8-1591f0eb327e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Path"], "Input",
 CellChangeTimes->{{3.936934887997459*^9, 3.9369348888938427`*^9}, {
  3.936935023085848*^9, 3.93693502426549*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"f3e5bc30-9de7-40ce-be76-dbe17f83a59c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"/Users/sbilmis/Library/Mathematica/DocumentationIndices\"\>", 
    ",", "\<\"/Users/sbilmis/heptools/analysis/hep/FEYNARTS/FeynArts\"\>", 
    ",", "\<\"/Users/sbilmis/heptools/analysis/hep/FEYNARTS/FormCalc\"\>", 
    ",", "\<\"/Users/sbilmis/heptools/analysis/hep/FEYNARTS/LoopTools\"\>", 
    ",", "\<\"/Users/sbilmis/analysis/hep/FEYNARTS/FeynArts\"\>", 
    ",", "\<\"/Users/sbilmis/analysis/hep/FEYNARTS/LoopTools\"\>", 
    ",", "\<\"/Users/sbilmis/analysis/hep/qcd_sum\"\>", 
    ",", "\<\"/Applications/Mathematica.app/Contents/SystemFiles/Links\"\>", 
    ",", "\<\"/Users/sbilmis/Library/Mathematica/Kernel\"\>", 
    ",", "\<\"/Users/sbilmis/Library/Mathematica/Autoload\"\>", 
    ",", "\<\"/Users/sbilmis/Library/Mathematica/Applications\"\>", 
    ",", "\<\"/Library/Mathematica/Kernel\"\>", 
    ",", "\<\"/Library/Mathematica/Autoload\"\>", 
    ",", "\<\"/Library/Mathematica/Applications\"\>", ",", "\<\".\"\>", 
    ",", "\<\"/Users/sbilmis\"\>", 
    ",", "\<\"/Applications/Mathematica.app/Contents/AddOns/Packages\"\>", 
    ",", "\<\"/Applications/Mathematica.app/Contents/SystemFiles/Autoload\"\>\
", ",", "\<\"/Applications/Mathematica.app/Contents/AddOns/Autoload\"\>", 
    ",", "\<\"/Applications/Mathematica.app/Contents/AddOns/Applications\"\>",
     ",", "\<\"/Applications/Mathematica.app/Contents/AddOns/ExtraPackages\"\>\
", ",", "\<\"/Applications/Mathematica.app/Contents/SystemFiles/Kernel/\
Packages\"\>", 
    ",", "\<\"/Applications/Mathematica.app/Contents/Documentation/English/\
System\"\>", 
    ",", "\<\"/Applications/Mathematica.app/Contents/SystemFiles/Data/ICC\"\>\
", ",", "\<\"/Applications/Mathematica.app/Contents/Documentation/\
ChineseSimplified/System/\"\>"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.936934893648316*^9, 3.936935024835462*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"531e5759-5538-4050-a03b-0249af5f1883"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"$UserBaseDirectory", "<>", "\"\</Kernel/init.m\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.93693502745608*^9, 3.936935027460656*^9}, 
   3.936936645410008*^9},ExpressionUUID->"f134a75f-2eec-4c39-994f-\
015bf822d100"]
}, Open  ]]
},
WindowSize->{808, 1035},
WindowMargins->{{Automatic, 428}, {Automatic, 0}},
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"92d06d38-92cb-42f6-bce4-756525f759bd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 159, 3, 69, "Section",ExpressionUUID->"e985ddc7-e7c0-45bf-9570-d8cc36e5b961"],
Cell[742, 27, 304, 7, 80, "Text",ExpressionUUID->"c5877190-8c5e-480b-922e-d4b465413252"],
Cell[CellGroupData[{
Cell[1071, 38, 375, 9, 63, "Input",ExpressionUUID->"9d8c304b-aabb-4532-b64b-12efa57d2381"],
Cell[1449, 49, 232, 4, 51, "Output",ExpressionUUID->"b41584e4-fc4f-4ad4-94b6-a2ad2191c4e9"]
}, Open  ]],
Cell[1696, 56, 19804, 331, 123, "Text",ExpressionUUID->"a3074c38-24bd-4e44-8dfe-301ae7fd6cee"],
Cell[21503, 389, 63894, 1054, 411, "Text",ExpressionUUID->"b2754362-59ba-4c62-b03d-67da63842c9f"],
Cell[CellGroupData[{
Cell[85422, 1447, 347, 9, 58, "Input",ExpressionUUID->"9c82c4ce-cc0e-4f1f-90e4-ac3d9e34f672"],
Cell[85772, 1458, 295, 8, 57, "Output",ExpressionUUID->"3b8947e1-406e-461f-b607-9f86e3e48416"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86104, 1471, 713, 17, 126, "Input",ExpressionUUID->"b45441fe-aa0b-4996-95eb-ff20ded43aa9"],
Cell[86820, 1490, 398, 12, 51, "Output",ExpressionUUID->"5b22341a-be54-43c3-a70e-99125806f379"]
}, Open  ]],
Cell[87233, 1505, 714, 17, 147, "Input",ExpressionUUID->"d184d4b9-a786-4207-9ca0-31616ce03bc5"],
Cell[CellGroupData[{
Cell[87972, 1526, 495, 11, 105, "Input",ExpressionUUID->"b46320e6-88c8-49a7-af9f-f875448c6018"],
Cell[88470, 1539, 261, 7, 37, "Output",ExpressionUUID->"c8f2c73d-c96f-415d-a9b9-ffdd16d97378"],
Cell[88734, 1548, 263, 7, 37, "Output",ExpressionUUID->"b7e11a40-ff77-40cc-ad4a-53fbe2159723"],
Cell[89000, 1557, 181, 3, 37, "Output",ExpressionUUID->"5a83e60c-892c-4e75-82f3-e09544b66101"],
Cell[89184, 1562, 298, 8, 37, "Output",ExpressionUUID->"dac01d4f-94d9-4e5b-a15e-79774c4a34ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89519, 1575, 1017, 28, 126, "Input",ExpressionUUID->"5fc18c0b-922b-4154-a2e8-cfb0f359670a"],
Cell[90539, 1605, 297, 8, 37, "Output",ExpressionUUID->"93feba25-9b0b-4013-b6eb-a7ee6d50fd4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90873, 1618, 3604, 96, 546, "Input",ExpressionUUID->"5d7471ee-a11c-4361-9ab6-763be5182e2f"],
Cell[94480, 1716, 4040, 75, 256, "Output",ExpressionUUID->"105a36bf-8efe-41f6-8a4a-71448a9693f9"],
Cell[98523, 1793, 4275, 78, 148, "Output",ExpressionUUID->"877c6f2b-c806-4c58-85f8-186d7ccaae3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102835, 1876, 4236, 114, 546, "Input",ExpressionUUID->"e3e4c6c4-3489-4120-981b-e2421d9e80bb"],
Cell[107074, 1992, 16714, 395, 148, "Output",ExpressionUUID->"c712fbd5-3464-454d-bf1b-68e9772414cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123825, 2392, 5420, 143, 693, "Input",ExpressionUUID->"b19efd39-8eb6-4da5-b432-a3ef2a846990"],
Cell[129248, 2537, 16768, 397, 162, "Output",ExpressionUUID->"f4fe685d-4dcb-4cc4-988c-796bbeff7e0b"],
Cell[146019, 2936, 265, 5, 51, "Output",ExpressionUUID->"9cd5f8a3-b8c3-4862-b741-767320887a4d"]
}, Open  ]],
Cell[146299, 2944, 7517, 190, 777, "Input",ExpressionUUID->"8c2f56b0-a262-4507-821b-b7ff97f555bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153853, 3139, 161, 3, 69, "Section",ExpressionUUID->"d0882d2e-74d6-4dfc-800c-6841f5c7c248"],
Cell[CellGroupData[{
Cell[154039, 3146, 8148, 202, 840, "Input",ExpressionUUID->"3c2bf1d4-d161-491d-83f8-4118f4cd47ca"],
Cell[162190, 3350, 16667, 388, 464, "Output",ExpressionUUID->"0105daa4-1974-4c2e-b0e7-d52e26b14eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178894, 3743, 205, 4, 41, "Input",ExpressionUUID->"3f2307c8-07ae-4204-a6f0-1623484496b2"],
Cell[179102, 3749, 28649, 607, 212, "Output",ExpressionUUID->"5c00c1b7-1543-404d-b202-00b4e747afa3"]
}, Open  ]],
Cell[207766, 4359, 175, 3, 34, "Text",ExpressionUUID->"1cefcfb4-2f4a-430a-b02e-968191d808f5"],
Cell[CellGroupData[{
Cell[207966, 4366, 8385, 208, 840, "Input",ExpressionUUID->"05fd9704-2e59-4b87-9e2a-0d83e5c54ce8"],
Cell[216354, 4576, 8793, 165, 458, "Output",ExpressionUUID->"6b33c5ea-185d-4fee-954e-955966278133"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225184, 4746, 233, 4, 41, "Input",ExpressionUUID->"5ddbb3db-63e9-4c5d-a25b-afb18773df7f"],
Cell[225420, 4752, 55309, 1024, 207, "Output",ExpressionUUID->"b098b91c-f404-4d25-80f8-1591f0eb327e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280766, 5781, 230, 4, 41, "Input",ExpressionUUID->"f3e5bc30-9de7-40ce-be76-dbe17f83a59c"],
Cell[280999, 5787, 1956, 32, 259, "Output",ExpressionUUID->"531e5759-5538-4050-a03b-0249af5f1883"]
}, Open  ]],
Cell[282970, 5822, 276, 6, 41, "Input",ExpressionUUID->"f134a75f-2eec-4c39-994f-015bf822d100"]
}, Open  ]]
}
]
*)

